
- name: /ADKernels
  description: |
    
  parameters:
  subblocks:
  - name: /ADKernels/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseADObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /ADKernels/ADDiffusion<JACOBIAN>
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ADDiffusion<JACOBIAN>
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /ADKernels/ADDiffusion<RESIDUAL>
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ADDiffusion<RESIDUAL>
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
- name: /ADMaterials
  description: |
    
  parameters:
  subblocks:
  - name: /ADMaterials/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseADObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
- name: /Adaptivity
  description: |
    
  parameters:
  - name: cycles_per_step
    required: No
    default: !!str 1
    cpp_type: unsigned int
    group_name: 
    description: |
      The number of adaptive steps to use when on each timestep during a Transient simulation.
  - name: inactive
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      If specified blocks matching these identifiers will be skipped.
  - name: initial_marker
    required: No
    default: !!str 
    cpp_type: MarkerName
    group_name: 
    description: |
      The name of the Marker to use to adapt the mesh during initial refinement.
  - name: initial_steps
    required: No
    default: !!str 0
    cpp_type: unsigned int
    group_name: 
    description: |
      The number of adaptive steps to do based on the initial condition.
  - name: marker
    required: No
    default: !!str 
    cpp_type: MarkerName
    group_name: 
    description: |
      The name of the Marker to use to actually adapt the mesh.
  - name: max_h_level
    required: No
    default: !!str 0
    cpp_type: unsigned int
    group_name: 
    description: |
      Maximum number of times a single element can be refined. If 0 then infinite.
  - name: recompute_markers_during_cycles
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Recompute markers during adaptivity cycles
  - name: start_time
    required: No
    default: !!str -1.79769e+308
    cpp_type: double
    group_name: 
    description: |
      The time that adaptivity will be active after.
  - name: steps
    required: No
    default: !!str 0
    cpp_type: unsigned int
    group_name: 
    description: |
      The number of adaptive steps to use when doing a Steady simulation.
  - name: stop_time
    required: No
    default: !!str 1.79769e+308
    cpp_type: double
    group_name: 
    description: |
      The time after which adaptivity will no longer be active.
  subblocks:
  - name: /Adaptivity/Indicators
    description: |
      
    parameters:
    subblocks:
    - name: /Adaptivity/Indicators/*
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The block id where this object lives.
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: isObjectAction
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Indicates that this is a MooseObjectAction.
      - name: type
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          A string representing the Moose Object that will be built by this Action
      subblocks:
    - name: /Adaptivity/Indicators/AnalyticalIndicator
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str ANY_BLOCK_ID 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          block ID or name where the object works
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: function
        required: Yes
        default: !!str 
        cpp_type: FunctionName
        group_name: 
        description: |
          The analytic solution to compare against
      - name: implicit
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Determines whether this object is calculated using an implicit or explicit form
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: type
        required: No
        default: !!str AnalyticalIndicator
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: use_displaced_mesh
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
      - name: variable
        required: Yes
        default: !!str 
        cpp_type: VariableName
        group_name: 
        description: |
          The name of the variable that this Indicator operates on
      subblocks:
    - name: /Adaptivity/Indicators/GradientJumpIndicator
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: scale_by_flux_faces
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Whether or not to scale the error values by the number of flux faces.  This attempts to not penalize elements on boundaries for having less neighbors.
      - name: type
        required: No
        default: !!str GradientJumpIndicator
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: use_displaced_mesh
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
      - name: variable
        required: Yes
        default: !!str 
        cpp_type: VariableName
        group_name: 
        description: |
          The name of the variable that this side indicator applies to
      subblocks:
    - name: /Adaptivity/Indicators/LaplacianJumpIndicator
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: scale_by_flux_faces
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Whether or not to scale the error values by the number of flux faces.  This attempts to not penalize elements on boundaries for having less neighbors.
      - name: type
        required: No
        default: !!str LaplacianJumpIndicator
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: use_displaced_mesh
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
      - name: variable
        required: Yes
        default: !!str 
        cpp_type: VariableName
        group_name: 
        description: |
          The name of the variable that this side indicator applies to
      subblocks:
    - name: /Adaptivity/Indicators/ValueJumpIndicator
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: scale_by_flux_faces
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Whether or not to scale the error values by the number of flux faces.  This attempts to not penalize elements on boundaries for having less neighbors.
      - name: type
        required: No
        default: !!str ValueJumpIndicator
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: use_displaced_mesh
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
      - name: variable
        required: Yes
        default: !!str 
        cpp_type: VariableName
        group_name: 
        description: |
          The name of the variable that this side indicator applies to
      subblocks:
  - name: /Adaptivity/Markers
    description: |
      
    parameters:
    subblocks:
    - name: /Adaptivity/Markers/*
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The block id where this object lives.
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: isObjectAction
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Indicates that this is a MooseObjectAction.
      - name: type
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          A string representing the Moose Object that will be built by this Action
      subblocks:
    - name: /Adaptivity/Markers/BoxMarker
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: bottom_left
        required: Yes
        default: !!str 
        cpp_type: libMesh::VectorValue<double>
        group_name: 
        description: |
          The bottom left point (in x,y,z with spaces in-between).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: inside
        required: Yes
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: DONT_MARK COARSEN DO_NOTHING REFINE
        description: |
          How to mark elements inside the box.
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: outside
        required: Yes
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: DONT_MARK COARSEN DO_NOTHING REFINE
        description: |
          How to mark elements outside the box.
      - name: top_right
        required: Yes
        default: !!str 
        cpp_type: libMesh::VectorValue<double>
        group_name: 
        description: |
          The bottom left point (in x,y,z with spaces in-between).
      - name: type
        required: No
        default: !!str BoxMarker
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Adaptivity/Markers/ComboMarker
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: markers
        required: Yes
        default: !!str 
        cpp_type: std::vector<MarkerName, std::allocator<MarkerName> >
        group_name: 
        description: |
          A list of marker names to combine into a single marker.
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: type
        required: No
        default: !!str ComboMarker
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Adaptivity/Markers/DiscreteNucleationMarker
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: map
        required: Yes
        default: !!str 
        cpp_type: UserObjectName
        group_name: 
        description: |
          DiscreteNucleationMap user object
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: type
        required: No
        default: !!str DiscreteNucleationMarker
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Adaptivity/Markers/ErrorFractionMarker
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: clear_extremes
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Whether or not to clear the extremes during each error calculation.  Changing this to `false` will result in the global extremes ever encountered during the run to be used as the min and max error.
      - name: coarsen
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Elements within this percentage of the min error will be coarsened.  Must be between 0 and 1!
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: indicator
        required: Yes
        default: !!str 
        cpp_type: IndicatorName
        group_name: 
        description: |
          The name of the Indicator that this Marker uses.
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: refine
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Elements within this percentage of the max error will be refined.  Must be between 0 and 1!
      - name: type
        required: No
        default: !!str ErrorFractionMarker
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Adaptivity/Markers/ErrorToleranceMarker
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: coarsen
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Elements with error less than this will be coarsened.
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: indicator
        required: Yes
        default: !!str 
        cpp_type: IndicatorName
        group_name: 
        description: |
          The name of the Indicator that this Marker uses.
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: refine
        required: No
        default: !!str 1.79769e+308
        cpp_type: double
        group_name: 
        description: |
          Elements with error more than this will be refined.
      - name: type
        required: No
        default: !!str ErrorToleranceMarker
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Adaptivity/Markers/OrientedBoxMarker
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: center
        required: Yes
        default: !!str 
        cpp_type: libMesh::Point
        group_name: 
        description: |
          The center (many people spell this 'center') of the box.
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: height
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The height of the box
      - name: inside
        required: Yes
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: DONT_MARK COARSEN DO_NOTHING REFINE
        description: |
          How to mark elements inside the box.
      - name: length
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The length of the box
      - name: length_direction
        required: Yes
        default: !!str 
        cpp_type: libMesh::VectorValue<double>
        group_name: 
        description: |
          The direction along which the length is oriented (must be perpendicular to width_direction).
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: outside
        required: Yes
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: DONT_MARK COARSEN DO_NOTHING REFINE
        description: |
          How to mark elements outside the box.
      - name: type
        required: No
        default: !!str OrientedBoxMarker
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: width
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The width of the box
      - name: width_direction
        required: Yes
        default: !!str 
        cpp_type: libMesh::VectorValue<double>
        group_name: 
        description: |
          The direction along which the width is oriented.
      subblocks:
    - name: /Adaptivity/Markers/UniformMarker
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: mark
        required: Yes
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: DONT_MARK COARSEN DO_NOTHING REFINE
        description: |
          How to mark elements.
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: type
        required: No
        default: !!str UniformMarker
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Adaptivity/Markers/ValueRangeMarker
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: buffer_size
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          A buffer zone value added to both ends of the range where a third_state marker can be returned.
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: invert
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          If this is true then values inside the range will be coarsened, and values outside the range will be refined.
      - name: lower_bound
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The lower bound value for the range.
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: third_state
        required: No
        default: !!str DONT_MARK
        cpp_type: MooseEnum
        group_name: 
        options: DONT_MARK COARSEN DO_NOTHING REFINE
        description: |
          The Marker state to apply to values in the buffer zone (both ends of the range).
      - name: type
        required: No
        default: !!str ValueRangeMarker
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: upper_bound
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The upper bound value for the range.
      - name: variable
        required: Yes
        default: !!str 
        cpp_type: std::vector<VariableName>
        group_name: 
        description: |
          The variable whose values are used in this marker.
      subblocks:
    - name: /Adaptivity/Markers/ValueThresholdMarker
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: coarsen
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The threshold value for coarsening.  Elements with variable values beyond this will be marked for coarsening.
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: invert
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          If this is true then values _below_ 'refine' will be refined and _above_ 'coarsen' will be coarsened.
      - name: outputs
        required: No
        default: !!str 
        cpp_type: std::vector<OutputName, std::allocator<OutputName> >
        group_name: 'Advanced'
        description: |
          Vector of output names were you would like to restrict the output of variables(s) associated with this object
      - name: refine
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The threshold value for refinement.  Elements with variable values beyond this will be marked for refinement.
      - name: third_state
        required: No
        default: !!str DONT_MARK
        cpp_type: MooseEnum
        group_name: 
        options: DONT_MARK COARSEN DO_NOTHING REFINE
        description: |
          The Marker state to apply to values falling in-between the coarsen and refine thresholds.
      - name: type
        required: No
        default: !!str ValueThresholdMarker
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: variable
        required: Yes
        default: !!str 
        cpp_type: std::vector<VariableName>
        group_name: 
        description: |
          The values of this variable will be compared to 'refine' and 'coarsen' to see what should be done with the element
      subblocks:
- name: /AuxKernels
  description: |
    
  parameters:
  subblocks:
  - name: /AuxKernels/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /AuxKernels/AccumulateAux
    description: |
      
    parameters:
    - name: accumulate_from_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable whose values are to be accumulated into the current variable
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str AccumulateAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/BndsCalcAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str BndsCalcAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/BoundsAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bounded_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to be bounded
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: lower
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The lower bound for the variable
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str BoundsAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: upper
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The upper bound for the variable
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/ConstantAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ConstantAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Some constant value that can be read from the input file
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/CrossTermGradientFreeEnergy
    description: |
      
    parameters:
    - name: additional_free_energy
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable holding additional free energy contributions to be summed up
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: interfacial_vars
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable names that contribute to interfacial energy
    - name: kappa_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Matrix of kappa names with rows and columns corresponding to each variable name in interfacial_vars in the same order (should be symmetric).
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CrossTermGradientFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/CylindricalRankTwoAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: center_point
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Location of the center point of the cylindrical coordinates
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: index_i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ij for the tensor to output (0, 1, 2)
    - name: index_j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ij for the tensor to output (0, 1, 2)
    - name: rank_two_tensor
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The rank two material tensor name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CylindricalRankTwoAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/DebugResidualAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: debug_variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The variable that is being debugged.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DebugResidualAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/DiffusionFluxAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The desired component of flux.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diffusion_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable
    - name: diffusivity
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The name of the diffusivity material property that will be used in the flux computation.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DiffusionFluxAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/DiscreteNucleationAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: map
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        DiscreteNucleationMap user object
    - name: no_nucleus_value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Variable value indicating no nucleus is present
    - name: nucleus_value
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Variable value indicating the presence of a nucleus
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DiscreteNucleationAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/DomainIntegralQFunction
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: crack_front_point_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of the point on the crack front corresponding to this q function
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: j_integral_radius_inner
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Radius for J-Integral calculation
    - name: j_integral_radius_outer
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Radius for J-Integral calculation
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DomainIntegralQFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/DomainIntegralTopologicalQFunction
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: crack_front_point_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of the point on the crack front corresponding to this q function
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: ring_index
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The ring of elements that defines the integration domain
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DomainIntegralTopologicalQFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/EBSDReaderAvgDataAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: data_name
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: phi1 phi phi2 phase symmetry local_id feature_id
      description: |
        The averaged data to be extracted from the EBSD data by this AuxKernel
    - name: ebsd_reader
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The EBSDReader GeneralUserObject
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: grain_tracker
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The GrainTracker UserObject
    - name: invalid
      required: No
      default: !!str -1
      cpp_type: double
      group_name: 
      description: |
        Value to return for points without active grains.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str EBSDReaderAvgDataAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/EBSDReaderPointDataAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: data_name
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: phi1 phi phi2 feature_id phase symmetry
      description: |
        The data to be extracted from the EBSD data by this AuxKernel
    - name: ebsd_reader
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The EBSDReader GeneralUserObject
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str EBSDReaderPointDataAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/ElasticEnergyAux
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Mechanical property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElasticEnergyAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/ElementH1ErrorFunctionAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coupled_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to compute the norm of.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Function representing the exact solution
    - name: p
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The exponent used in the norm.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementH1ErrorFunctionAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/ElementL2ErrorFunctionAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coupled_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to compute the norm of.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Function representing the exact solution
    - name: p
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The exponent used in the norm.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementL2ErrorFunctionAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/ElementLengthAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: method
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: min max
      description: |
        The size calculation to perform ('min' or 'max').
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementLengthAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/ElementLpNormAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coupled_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to compute the norm of.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: p
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The exponent used in the norm.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementLpNormAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/ElementQualityAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: metric
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: ASPECT_RATIO SKEW SHEAR SHAPE MAX_ANGLE MIN_ANGLE CONDITION DISTORTION TAPER WARP STRETCH DIAGONAL ASPECT_RATIO_BETA ASPECT_RATIO_GAMMA SIZE JACOBIAN
      description: |
        The quality metric to use.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementQualityAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/EulerAngleProvider2RGBAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crystal_structure
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: triclinic monoclinic orthorhombic trigonal tetragonal cubic hexagonal
      description: |
        Crystal structure of the material
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: euler_angle_provider
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Name of Euler angle provider user object
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: grain_tracker
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The GrainTracker UserObject to get values from.
    - name: no_grain_color
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        RGB value of color used to represent area with no grains, defaults to black
    - name: output_type
      required: No
      default: !!str scalar
      cpp_type: MooseEnum
      group_name: 
      options: red green blue scalar
      description: |
        Type of value that will be outputted
    - name: sd
      required: No
      default: !!str 001
      cpp_type: MooseEnum
      group_name: 
      options: 100 010 001
      description: |
        Reference sample direction
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str EulerAngleProvider2RGBAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/EulerAngleVariables2RGBAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: output_type
      required: No
      default: !!str scalar
      cpp_type: MooseEnum
      group_name: 
      options: red green blue scalar
      description: |
        Type of value that will be outputted
    - name: phase
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Grain phase index
    - name: phi
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Euler angle 2
    - name: phi1
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Euler angle 1
    - name: phi2
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Euler angle 3
    - name: sd
      required: No
      default: !!str 001
      cpp_type: MooseEnum
      group_name: 
      options: 100 010 001
      description: |
        Reference sample direction
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: symmetry
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Grain symmetry indentifier
    - name: type
      required: No
      default: !!str EulerAngleVariables2RGBAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/FeatureFloodCountAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bubble_object
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: field_display
      required: No
      default: !!str UNIQUE_REGION
      cpp_type: MooseEnum
      group_name: 
      options: UNIQUE_REGION VARIABLE_COLORING GHOSTED_ENTITIES HALOS CENTROID ACTIVE_BOUNDS
      description: |
        Determines how the auxilary field should be colored. (UNIQUE_REGION and VARIABLE_COLORING are nodal, CENTROID is elemental, default: UNIQUE_REGION)
    - name: flood_counter
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: map_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of which map to retrieve values from when using FeatureFloodCount with multiple maps.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str FeatureFloodCountAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/FunctionAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The function to use as the value
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str FunctionAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/GapValueAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: normal_smoothing_distance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Distance from edge in parametric coordinates over which to smooth contact normal
    - name: normal_smoothing_method
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Method to use to smooth normals (edge_based|nodal_normal_based)
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: FIRST SECOND THIRD FOURTH
      description: |
        The finite element order
    - name: paired_boundary
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary on the other side of a gap.
    - name: paired_variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to get the value of.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tangential_tolerance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Tangential distance to extend edges of contact surfaces
    - name: type
      required: No
      default: !!str GapValueAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: warnings
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to output warning messages concerning nodes not being found
    subblocks:
  - name: /AuxKernels/GlobalDisplacementAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The displacement component to consider for this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the displacement variables
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str PRE_DISPLACE
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: global_strain_uo
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The name of the GlobalStrainUserObject
    - name: output_global_displacement
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Option to output global displacement only
    - name: scalar_global_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Scalar variable providing global strain components
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str GlobalDisplacementAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/GrainAdvectionAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The gradient component to compute
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: grain_force
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        userobject for getting force and torque acting on grains
    - name: grain_tracker_object
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        userobject for getting volume and center of mass of grains
    - name: grain_volumes
      required: No
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The feature volume VectorPostprocessorValue.
    - name: rotation_constant
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain rotation
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: translation_constant
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain translation
    - name: type
      required: No
      default: !!str GrainAdvectionAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/KKSGlobalFreeEnergy
    description: |
      
    parameters:
    - name: additional_free_energy
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable holding additional free energy contributions to be summed up
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: fa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_name in the corresponding derivative function material)
    - name: fb_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_name in the corresponding derivative function material)
    - name: g_name
      required: No
      default: !!str g
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name for the double well function g(eta)
    - name: h_name
      required: No
      default: !!str h
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name for the switching function h(eta)
    - name: interfacial_vars
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable names that contribute to interfacial energy
    - name: kappa_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Vector of kappa names corresponding to each variable name in interfacial_vars in the same order. For basic KKS, there is 1 kappa, 1 interfacial_var.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSGlobalFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: w
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Double well height parameter
    subblocks:
  - name: /AuxKernels/KKSMultiFreeEnergy
    description: |
      
    parameters:
    - name: Fj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of free energies for each phase. Place in same order as hj_names and gj_names!
    - name: additional_free_energy
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable holding additional free energy contributions to be summed up
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: gj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Barrier Function Materials that provide g. Place in same order as Fj_names and hj_names!
    - name: hj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide h. Place in same order as Fj_names and gj_names!
    - name: interfacial_vars
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable names that contribute to interfacial energy
    - name: kappa_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Vector of kappa names corresponding to each variable name in interfacial_vars in the same order.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSMultiFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: w
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Double well height parameter
    subblocks:
  - name: /AuxKernels/MatVecRealGradAuxKernel
    description: |
      
    parameters:
    - name: dim
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        the dimensions of the mesh
    - name: divergence_property
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Scalar material property name for divergence variable
    - name: divergence_variable
      required: No
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        Name of divergence variable to generate kernels for
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: op_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Value that specifies the number of grains to create
    - name: property
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        the scalar material property names
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels
    - name: var_name_base
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector specifies the base name of the variables
    subblocks:
  - name: /AuxKernels/MaterialRankFourTensorAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ijkl for the tensor to output
    - name: j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ijkl for the tensor to output
    - name: k
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index k of ijkl for the tensor to output
    - name: l
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index l of ijkl for the tensor to output
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRankFourTensorAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/MaterialRankTwoTensorAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ij for the tensor to output
    - name: j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ij for the tensor to output
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRankTwoTensorAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/MaterialRealAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRealAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/MaterialRealDenseMatrixAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: column
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The column component to consider for this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: row
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The row component to consider for this kernel
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRealDenseMatrixAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/MaterialRealTensorValueAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: column
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The column component to consider for this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: row
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The row component to consider for this kernel
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRealTensorValueAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/MaterialRealVectorValueAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The vector component to consider for this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRealVectorValueAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/MaterialStdVectorAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: index
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The index to consider for this kernel
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: selected_qp
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        Evaluate the std::vector<Real> at this quadpoint.  This only needs to be used if you are interested in a particular quadpoint in each element: otherwise do not include this parameter in your input file
    - name: type
      required: No
      default: !!str MaterialStdVectorAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/MaterialStdVectorRealGradientAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The gradient component to be extracted for this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: index
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The index to consider for this kernel
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialStdVectorRealGradientAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/MaterialVectorAuxKernel
    description: |
      
    parameters:
    - name: grain_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Value that specifies the number of grains to create aux kernels for.
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: property
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        The material property names.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels.
    - name: variable_base
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector specifies the base name of the variables.
    subblocks:
  - name: /AuxKernels/MaterialVectorGradAuxKernel
    description: |
      
    parameters:
    - name: grain_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Value that specifies the number of grains to create aux kernels for.
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: property
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        The material property names.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels.
    - name: variable_base
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector specifies the base name of the variables.
    subblocks:
  - name: /AuxKernels/NearestNodeDistanceAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: paired_boundary
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary to find the distance to.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NearestNodeDistanceAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/NearestNodeValueAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: paired_boundary
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary to get the value from.
    - name: paired_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to get the value of.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NearestNodeValueAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/NewmarkAccelAux
    description: |
      
    parameters:
    - name: beta
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        beta parameter for Newmark method
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacement
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        displacement variable
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NewmarkAccelAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: velocity
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        velocity variable
    subblocks:
  - name: /AuxKernels/NewmarkVelAux
    description: |
      
    parameters:
    - name: acceleration
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        acceleration variable
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: gamma
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        gamma parameter for Newmark method
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NewmarkVelAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/NormalizationAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: normal_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The normalization factor
    - name: normalization
      required: No
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The postprocessor on the source
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: shift
      required: No
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The postprocessor to shift the source
    - name: source_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to be normalized
    - name: type
      required: No
      default: !!str NormalizationAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/OutputEulerAngles
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: euler_angle_provider
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Name of Euler angle provider user object
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: grain_tracker
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The GrainTracker UserObject to get values from.
    - name: output_euler_angle
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: phi1 Phi phi2
      description: |
        Euler angle to output
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str OutputEulerAngles
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/PFCEnergyDensity
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PFCEnergyDensity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/PFCRFFEnergyDensity
    description: |
      
    parameters:
    - name: a
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Modified Coefficent in Taylor Series Expanstion
    - name: b
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Modified Coefficent in Taylor Series Expanstion
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Modified Coefficent in Taylor Series Expanstion
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: log_approach
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: tolerance cancelation expansion nothing
      description: |
        Which approach will be used to handle the natural log
    - name: num_exp_terms
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 
      description: |
        This is the number of terms to use in the taylor series expansion
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tol
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Tolerance used when the tolerance approach is chosen
    - name: type
      required: No
      default: !!str PFCRFFEnergyDensity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/ParsedAux
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        coupled variables
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: constant_expressions
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of values for the constants in constant_names (can be an FParser expression)
    - name: constant_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of constants used in the parsed function (use this for kB etc.)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionExpression
      group_name: 
      description: |
        function expression
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ParsedAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/PenetrationAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: normal_smoothing_distance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Distance from edge in parametric coordinates over which to smooth contact normal
    - name: normal_smoothing_method
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Method to use to smooth normals (edge_based|nodal_normal_based)
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: FIRST SECOND THIRD FOURTH
      description: |
        The finite element order
    - name: paired_boundary
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary to be penetrated
    - name: quantity
      required: No
      default: !!str distance
      cpp_type: MooseEnum
      group_name: 
      options: distance tangential_distance normal_x normal_y normal_z closest_point_x closest_point_y closest_point_z element_id side incremental_slip_magnitude incremental_slip_x incremental_slip_y incremental_slip_z accumulated_slip force_x force_y force_z normal_force_magnitude normal_force_x normal_force_y normal_force_z tangential_force_magnitude tangential_force_x tangential_force_y tangential_force_z frictional_energy lagrange_multiplier mechanical_status
      description: |
        The quantity to recover from the available penetration information
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tangential_tolerance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Tangential distance to extend edges of contact surfaces
    - name: type
      required: No
      default: !!str PenetrationAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/ProcessorIDAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ProcessorIDAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/QuotientAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: denominator
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The downstairs of the quotient variable
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: numerator
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The upstairs of the quotient variable
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str QuotientAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/RadialDisplacementCylinderAux
    description: |
      
    parameters:
    - name: axis_vector
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Vector defining direction of cylindrical axis (3D Cartesian models)
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: origin
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Origin of cylinder axis of rotation for 2D and 3D Cartesian models
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str RadialDisplacementCylinderAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/RadialDisplacementSphereAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: origin
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Sphere origin for 3D Cartesian and 2D axisymmetric models
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str RadialDisplacementSphereAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/RankFourAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: index_i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ijkl for the tensor to output (0, 1, 2)
    - name: index_j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ijkl for the tensor to output (0, 1, 2)
    - name: index_k
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index k of ijkl for the tensor to output (0, 1, 2)
    - name: index_l
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index l of ijkl for the tensor to output (0, 1, 2)
    - name: rank_four_tensor
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The rank four material tensor name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str RankFourAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/RankTwoAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: index_i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ij for the tensor to output (0, 1, 2)
    - name: index_j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ij for the tensor to output (0, 1, 2)
    - name: patch_polynomial_order
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: CONSTANT FIRST SECOND THIRD FOURTH
      description: |
        Polynomial order used in least squares fitting of material property over the local patch of elements connected to a given node
    - name: rank_two_tensor
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The rank two material tensor name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: selected_qp
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        Evaluate the tensor at this specific quadpoint
    - name: type
      required: No
      default: !!str RankTwoAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/RankTwoScalarAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: No
      default: !!str 0 0 1
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Direction vector
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: patch_polynomial_order
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: CONSTANT FIRST SECOND THIRD FOURTH
      description: |
        Polynomial order used in least squares fitting of material property over the local patch of elements connected to a given node
    - name: point1
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Start point for axis used to calculate some cylinderical material tensor quantities
    - name: point2
      required: No
      default: !!str 0 1 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        End point for axis used to calculate some material tensor quantities
    - name: rank_two_tensor
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The rank two material tensor name
    - name: scalar_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: VonMisesStress EffectiveStrain Hydrostatic L2norm MaxPrincipal MidPrincipal MinPrincipal VolumetricStrain FirstInvariant SecondInvariant ThirdInvariant AxialStress HoopStress RadialStress TriaxialityStress Direction
      description: |
        Type of scalar output
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: selected_qp
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        Evaluate the tensor at this quadpoint.  This option only needs to be used if you are interested in a particular quadpoint in each element: otherwise do not include this parameter in your input file
    - name: type
      required: No
      default: !!str RankTwoScalarAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/SelfAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SelfAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/SolutionAux
    description: |
      
    parameters:
    - name: add_factor
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Add this value (b) to the solution (x): ax+b, where a is the 'scale_factor'
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direct
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true the meshes must be the same and then the values are simply copied over.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: from_variable
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the variable to extract from the file
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor (a)  to be applied to the solution (x): ax+b, where b is the 'add_factor'
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: solution
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The name of the SolutionUserObject
    - name: type
      required: No
      default: !!str SolutionAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/SpatialUserObjectAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SpatialUserObjectAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: user_object
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The UserObject UserObject to get values from.  Note that the UserObject _must_ implement the spatialValue() virtual function!
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/TagMatrixAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: matrix_tag
      required: No
      default: !!str TagName
      cpp_type: std::string
      group_name: 
      description: |
        Tag Name this Aux works on
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TagMatrixAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The coupled variable whose components are coupled to AuxVariable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/TagVectorAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TagVectorAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The coupled variable whose components are coupled to AuxVariable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: vector_tag
      required: No
      default: !!str TagName
      cpp_type: std::string
      group_name: 
      description: |
        Tag Name this Aux works on
    subblocks:
  - name: /AuxKernels/TestNewmarkTI
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacement
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable whose first/second derivative needs to be copied to the provided auxvariable.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: first
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Set to true to copy the first derivative to the auxvariable. If false, the second derivative is copied.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TestNewmarkTI
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/TotalFreeEnergy
    description: |
      
    parameters:
    - name: additional_free_energy
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable holding additional free energy contributions to be summed up
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: f_name
      required: No
      default: !!str F
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
         Base name of the free energy function
    - name: interfacial_vars
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable names that contribute to interfacial energy
    - name: kappa_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Vector of kappa names corresponding to each variable name in interfacial_vars in the same order.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TotalFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/VariableGradientComponent
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The gradient component to compute
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: gradient_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable from which to compute the gradient component
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VariableGradientComponent
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /AuxKernels/VariableTimeIntegrationAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coefficient
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        A simple coefficient
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: order
      required: No
      default: !!str 2
      cpp_type: unsigned int
      group_name: 
      description: |
        The order of global truncation error: midpoint=1, trapazoidal=2, Simpson=3
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VariableTimeIntegrationAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: variable_to_integrate
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to be integrated
    subblocks:
  - name: /AuxKernels/VectorMagnitudeAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VectorMagnitudeAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: x
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        x-component of the vector
    - name: y
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        y-component of the vector
    - name: z
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        z-component of the vector
    subblocks:
  - name: /AuxKernels/VectorPostprocessorVisualizationAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VectorPostprocessorVisualizationAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_broadcast
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Causes this AuxKernel to use a broadcasted version of the vector instead of a scattered version of the vector (the default).  This is slower - but is useful for debugging and testing
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: vector_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the vector to use from the VectorPostprocessor
    - name: vpp
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The name of the VectorPostprocessor to pull the data from.
    subblocks:
- name: /AuxScalarKernels
  description: |
    
  parameters:
  subblocks:
  - name: /AuxScalarKernels/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /AuxScalarKernels/ConstantScalarAux
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: type
      required: No
      default: !!str ConstantScalarAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value to be set to the scalar variable.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    subblocks:
  - name: /AuxScalarKernels/FunctionScalarAux
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: std::vector<FunctionName, std::allocator<FunctionName> >
      group_name: 
      description: |
        The functions to set the scalar variable components.
    - name: type
      required: No
      default: !!str FunctionScalarAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    subblocks:
  - name: /AuxScalarKernels/GeneralizedPlaneStrainReferenceResidual
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: generalized_plane_strain
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The name of the GeneralizedPlaneStrainUserObject
    - name: scalar_out_of_plane_strain_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index number of scalar_out_of_plane_strain this kernel acts on
    - name: type
      required: No
      default: !!str GeneralizedPlaneStrainReferenceResidual
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    subblocks:
  - name: /AuxScalarKernels/QuotientScalarAux
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: denominator
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The downstairs of the quotient variable
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: numerator
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The upstairs of the quotient variable
    - name: type
      required: No
      default: !!str QuotientScalarAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    subblocks:
  - name: /AuxScalarKernels/ScalarTagMatrixAux
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: matrix_tag
      required: No
      default: !!str TagName
      cpp_type: std::string
      group_name: 
      description: |
        Tag Name this Aux works on
    - name: type
      required: No
      default: !!str ScalarTagMatrixAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The coupled variable whose components are coupled to AuxVariable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    subblocks:
  - name: /AuxScalarKernels/ScalarTagVectorAux
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: type
      required: No
      default: !!str ScalarTagVectorAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The coupled variable whose components are coupled to AuxVariable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    - name: vector_tag
      required: No
      default: !!str TagName
      cpp_type: std::string
      group_name: 
      description: |
        Tag Name this Aux works on
    subblocks:
- name: /AuxVariables
  description: |
    
  parameters:
  subblocks:
  - name: /AuxVariables/*
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The block id where this variable lives
    - name: family
      required: No
      default: !!str LAGRANGE
      cpp_type: MooseEnum
      group_name: 
      options: LAGRANGE MONOMIAL SCALAR
      description: |
        Specifies the family of FE shape functions to use for this variable
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: initial_condition
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Specifies the initial condition for this variable
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: CONSTANT FIRST SECOND THIRD FOURTH FIFTH SIXTH SEVENTH EIGHTH NINTH
      description: |
        Specifies the order of the FE shape function to use for this variable (additional orders not listed are allowed)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: initial_from_file_timestep
      required: No
      default: !!str LATEST
      cpp_type: std::string
      group_name: 'Initial From File'
      description: |
        Gives the timestep (or "LATEST") for which to read a solution from a file for a given variable. (Default: LATEST)
    - name: initial_from_file_var
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 'Initial From File'
      description: |
        Gives the name of a variable for which to read an initial condition from a mesh file
    subblocks:
    - name: /AuxVariables/*/InitialCondition
      description: |
        
      parameters:
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: isObjectAction
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Indicates that this is a MooseObjectAction.
      - name: type
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          A string representing the Moose Object that will be built by this Action
      subblocks:
      - name: /AuxVariables/*/InitialCondition/<type>
        description: |
          
        parameters:
        subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/BimodalInverseSuperellipsoidsIC
          description: |
            
          parameters:
          - name: as
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis a for each superellipsoid
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis b for each superellipsoid
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: cs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis c for each superellipsoid
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the superellipsoid
          - name: large_spac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing between large and small particles, measured from closest edge to closest edge
          - name: nestedvalue
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value for nested particles inside the superellipsoid in inverse configuration
          - name: npart
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of random (small) particles to place
          - name: ns
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Exponent n for each superellipsoid
          - name: numtries
            required: No
            default: !!str 1000
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of tries to place the random particles
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the superellipsoid
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: size_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Plus or minus fraction of random variation in the semiaxes for uniform, standard deviation for normal
          - name: size_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random semiaxes will follow
          - name: small_a
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis a value for the randomly placed (small) superellipsoids
          - name: small_b
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis b value for the randomly placed (small) superellipsoids
          - name: small_c
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis c value for the randomly placed (small) superellipsoids
          - name: small_n
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Exponent n for the randomly placed (small) superellipsoids
          - name: small_spac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing between small particles, measured from closest edge to closest edge
          - name: type
            required: No
            default: !!str BimodalInverseSuperellipsoidsIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The x-coordinate for each superellipsoid center
          - name: y_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The y-coordinate for each superellipsoid center
          - name: z_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The z-coordinate for each superellipsoid center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/BimodalSuperellipsoidsIC
          description: |
            
          parameters:
          - name: as
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis a for each superellipsoid
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis b for each superellipsoid
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: cs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis c for each superellipsoid
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the superellipsoid
          - name: large_spac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing between large and small particles, measured from closest edge to closest edge
          - name: nestedvalue
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value for nested particles inside the superellipsoid in inverse configuration
          - name: npart
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of random (small) particles to place
          - name: ns
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Exponent n for each superellipsoid
          - name: numtries
            required: No
            default: !!str 1000
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of tries to place the random particles
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the superellipsoid
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: size_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Plus or minus fraction of random variation in the semiaxes for uniform, standard deviation for normal
          - name: size_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random semiaxes will follow
          - name: small_a
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis a value for the randomly placed (small) superellipsoids
          - name: small_b
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis b value for the randomly placed (small) superellipsoids
          - name: small_c
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis c value for the randomly placed (small) superellipsoids
          - name: small_n
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Exponent n for the randomly placed (small) superellipsoids
          - name: small_spac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing between small particles, measured from closest edge to closest edge
          - name: type
            required: No
            default: !!str BimodalSuperellipsoidsIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The x-coordinate for each superellipsoid center
          - name: y_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The y-coordinate for each superellipsoid center
          - name: z_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The z-coordinate for each superellipsoid center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/BoundingBoxIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: inside
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The value of the variable inside the box
          - name: outside
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The value of the variable outside the box
          - name: type
            required: No
            default: !!str BoundingBoxIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the lower left-hand corner of the box
          - name: x2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the upper right-hand corner of the box
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the lower left-hand corner of the box
          - name: y2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the upper right-hand corner of the box
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the lower left-hand corner of the box
          - name: z2
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the upper right-hand corner of the box
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/ClosePackIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The radius of a circle
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str ClosePackIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/ConstantIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: type
            required: No
            default: !!str ConstantIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: value
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The value to be set in IC
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/CrossIC
          description: |
            
          parameters:
          - name: amplitude
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              The amplitude
          - name: average
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The average value
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: buffer
            required: No
            default: !!str 0.03125
            cpp_type: double
            group_name: 
            description: |
              A small area between the max value and the interface
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: interface
            required: No
            default: !!str 0.03125
            cpp_type: double
            group_name: 
            description: |
              The interface width
          - name: length
            required: No
            default: !!str 0.75
            cpp_type: double
            group_name: 
            description: |
              The length
          - name: type
            required: No
            default: !!str CrossIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: width
            required: No
            default: !!str 0.125
            cpp_type: double
            group_name: 
            description: |
              The width
          - name: x1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the lower left-hand corner of the box
          - name: x2
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the upper right-hand corner of the box
          - name: y1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the lower left-hand corner of the box
          - name: y2
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the upper right-hand corner of the box
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/FunctionIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: function
            required: Yes
            default: !!str 
            cpp_type: FunctionName
            group_name: 
            description: |
              The initial condition function.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: type
            required: No
            default: !!str FunctionIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/FunctionScalarIC
          description: |
            
          parameters:
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: function
            required: Yes
            default: !!str 
            cpp_type: std::vector<FunctionName, std::allocator<FunctionName> >
            group_name: 
            description: |
              The initial condition function.
          - name: type
            required: No
            default: !!str FunctionScalarIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: No
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/LatticeSmoothCircleIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: Rnd_variation
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Variation from central lattice position
          - name: avoid_bounds
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              Don't place any bubbles on the simulation cell boundaries
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: circles_per_side
            required: Yes
            default: !!str 
            cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
            group_name: 
            description: |
              Vector containing the number of bubbles along each side
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: pos_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Variation from central lattice position
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean radius value for the circels
          - name: radius_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Plus or minus fraction of random variation in the bubble radius
          - name: radius_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random circle radii will follow
          - name: rand_seed
            required: No
            default: !!str 2000
            cpp_type: unsigned int
            group_name: 
            description: |
              random seed
          - name: type
            required: No
            default: !!str LatticeSmoothCircleIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/MultiBoundingBoxIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: corners
            required: Yes
            default: !!str 
            cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
            group_name: 
            description: |
              The corner coordinates boxes
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: inside
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The value of the variable inside each box (one value per box or a single value for all boxes)
          - name: opposite_corners
            required: Yes
            default: !!str 
            cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
            group_name: 
            description: |
              The coordinates of the opposite corners of the boxes
          - name: outside
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The value of the variable outside the box
          - name: type
            required: No
            default: !!str MultiBoundingBoxIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/MultiSmoothCircleIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bubspac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing of bubbles, measured from center to center
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: numbub
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of bubbles to place
          - name: numtries
            required: No
            default: !!str 1000
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of tries
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean radius value for the circles
          - name: radius_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Plus or minus fraction of random variation in the bubble radius for uniform, standard deviation for normal
          - name: radius_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random circle radii will follow
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str MultiSmoothCircleIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/MultiSmoothSuperellipsoidIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bubspac
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of the minimum spacing of bubbles of one type, measured from center to center
          - name: check_extremes
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Check all Superellipsoid extremes (center +- each semiaxis) for overlap, must have prevent_overlap set to True.
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: exponent
            required: No
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of exponents for each superellipsoid, n=2 is a normal ellipse
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the superellipsoid
          - name: max_num_tries
            required: No
            default: !!str 1000
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of tries
          - name: nestedvalue
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value for nested particles inside the superellipsoid in inverse configuration
          - name: numbub
            required: Yes
            default: !!str 
            cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
            group_name: 
            description: |
              Vector of the number of bubbles to place
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the superellipsoid
          - name: prevent_overlap
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Check all Superellipsoid centers for overlap with other Superellipsoids.
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: semiaxis_a
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of mean semiaxis values in the x direction for the ellipse
          - name: semiaxis_a_variation
            required: No
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of plus or minus fractions of random variation in the bubble semiaxis in the x direction for uniform, standard deviation for normal
          - name: semiaxis_b
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of mean semiaxis values in the y direction for the ellipse
          - name: semiaxis_b_variation
            required: No
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of plus or minus fractions of random variation in the bubble semiaxis in the y direction for uniform, standard deviation for normal
          - name: semiaxis_c
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of mean semiaxis values in the z direction for the ellipse, must be greater than 0 even if 2D.
          - name: semiaxis_c_variation
            required: No
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of plus or minus fractions of random variation in the bubble semiaxis in the z direction for uniform, standard deviation for normal. Must be set to 0 if 2D.
          - name: semiaxis_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random superellipsoid semiaxes will follow
          - name: type
            required: No
            default: !!str MultiSmoothSuperellipsoidIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: vary_axes_independently
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              If true the length of each semiaxis is randomly chosen within the provided parameters, if false then one random number is generated and applied to all semiaxes.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/PFCFreezingIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: crystal_structure
            required: No
            default: !!str 
            cpp_type: MooseEnum
            group_name: 
            options: FCC BCC
            description: |
              The type of crystal structure
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: inside
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              Value inside sinusoids
          - name: lc
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The lattice constant off the crystal structure
          - name: max
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              Upper bound of the randomly generated values
          - name: min
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Lower bound of the randomly generated values
          - name: outside
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Value outside sinusoids
          - name: seed
            required: No
            default: !!str 0
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str PFCFreezingIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the lower left-hand corner of the frozen box
          - name: x2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the upper right-hand corner of the box
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the lower left-hand corner of the frozen box
          - name: y2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the upper right-hand corner of the box
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the lower left-hand corner of the box
          - name: z2
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the upper right-hand corner of the box
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/PolycrystalColoringIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: op_index
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The index for the current order parameter
          - name: polycrystal_ic_uo
            required: Yes
            default: !!str 
            cpp_type: UserObjectName
            group_name: 
            description: |
              TODO
          - name: type
            required: No
            default: !!str PolycrystalColoringIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/PolycrystalRandomIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: op_index
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The index for the current order parameter
          - name: op_num
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Number of order parameters
          - name: random_type
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Type of random grain structure (formerly called 'typ')
          - name: type
            required: No
            default: !!str PolycrystalRandomIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/PolycrystalVoronoiVoidIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bubspac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing of bubbles, measured from center to center
          - name: columnar_3D
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              3D microstructure will be columnar in the z-direction?
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: file_name
            required: No
            default: !!str 
            cpp_type: FileName
            group_name: 
            description: |
              File containing grain centroids, if file_name is provided, the centroids from the file will be used.
          - name: grain_num
            required: No
            default: !!str 0
            cpp_type: unsigned int
            group_name: 
            description: |
              Number of grains being represented by the order parameters
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: numbub
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of bubbles to place
          - name: numtries
            required: No
            default: !!str 1000
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of tries
          - name: op_index
            required: No
            default: !!str 0
            cpp_type: unsigned int
            group_name: 
            description: |
              The index for the current order parameter, not needed if structure_type = voids
          - name: op_num
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Number of order parameters
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean radius value for the circles
          - name: radius_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Plus or minus fraction of random variation in the bubble radius for uniform, standard deviation for normal
          - name: radius_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random circle radii will follow
          - name: rand_seed
            required: No
            default: !!str 12444
            cpp_type: unsigned int
            group_name: 
            description: |
              The random seed
          - name: structure_type
            required: Yes
            default: !!str 
            cpp_type: MooseEnum
            group_name: 
            options: grains voids
            description: |
              Which structure type is being initialized, grains or voids
          - name: type
            required: No
            default: !!str PolycrystalVoronoiVoidIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/RampIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: type
            required: No
            default: !!str RampIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: value_left
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The value on left (xmin) boundary.
          - name: value_right
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The value on right (xmax) boundary.
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/RandomIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: distribution
            required: No
            default: !!str 
            cpp_type: DistributionName
            group_name: 
            description: |
              Name of distribution defining distribution of randomly generated values
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: legacy_generator
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Determines whether or not the legacy generator (deprecated) should be used.
          - name: max
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              Upper bound of uniformly distributed randomly generated values
          - name: min
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Lower bound of uniformly distributed randomly generated values
          - name: seed
            required: No
            default: !!str 0
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str RandomIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/ReconPhaseVarIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: ebsd_reader
            required: Yes
            default: !!str 
            cpp_type: UserObjectName
            group_name: 
            description: |
              The EBSDReader object holding the EBSD data
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: phase
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              EBSD phase number this variable is to represent
          - name: type
            required: No
            default: !!str ReconPhaseVarIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/RndBoundingBoxIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: mn_invalue
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The min value of the variable invalue the box
          - name: mn_outvalue
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The min value of the variable outvalue the box
          - name: mx_invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The max value of the variable invalue the box
          - name: mx_outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The max value of the variable outvalue the box
          - name: type
            required: No
            default: !!str RndBoundingBoxIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the lower left-hand corner of the box
          - name: x2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the upper right-hand corner of the box
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the lower left-hand corner of the box
          - name: y2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the upper right-hand corner of the box
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the lower left-hand corner of the box
          - name: z2
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the upper right-hand corner of the box
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/RndSmoothCircleIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The radius of a circle
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str RndSmoothCircleIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: variation_invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Plus or minus this amount on the invalue
          - name: variation_outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Plus or minus this amount on the outvalue
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the circle center
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the circle center
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the circle center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/ScalarComponentIC
          description: |
            
          parameters:
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: type
            required: No
            default: !!str ScalarComponentIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: values
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Initial values to initialize the scalar variable.
          - name: variable
            required: No
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/ScalarConstantIC
          description: |
            
          parameters:
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: type
            required: No
            default: !!str ScalarConstantIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: value
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              
          - name: variable
            required: No
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/SmoothCircleFromFileIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: file_name
            required: Yes
            default: !!str 
            cpp_type: FileName
            group_name: 
            description: |
              File containing circle centers and radii
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str SmoothCircleFromFileIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/SmoothCircleIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The radius of a circle
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str SmoothCircleIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the circle center
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the circle center
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the circle center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/SmoothSuperellipsoidIC
          description: |
            
          parameters:
          - name: a
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Semiaxis a of the superellipsoid
          - name: b
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Semiaxis b of the superellipsoid
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: c
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              Semiaxis c of the superellipsoid
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the superellipsoid
          - name: n
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Exponent n of the superellipsoid
          - name: nestedvalue
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value for nested particles inside the superellipsoid in inverse configuration
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the superellipsoid
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str SmoothSuperellipsoidIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the superellipsoid center
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the superellipsoid center
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the superellipsoid center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/SpecifiedSmoothCircleIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radii
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The radius for each circle
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str SpecifiedSmoothCircleIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The x-coordinate for each circle center
          - name: y_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The y-coordinate for each circle center
          - name: z_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The z-coordinate for each circle center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/SpecifiedSmoothSuperellipsoidIC
          description: |
            
          parameters:
          - name: as
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis a for each superellipsoid
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis b for each superellipsoid
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: cs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis c for each superellipsoid
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the superellipsoid
          - name: nestedvalue
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value for nested particles inside the superellipsoid in inverse configuration
          - name: ns
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Exponent n for each superellipsoid
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the superellipsoid
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str SpecifiedSmoothSuperellipsoidIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The x-coordinate for each superellipsoid center
          - name: y_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The y-coordinate for each superellipsoid center
          - name: z_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The z-coordinate for each superellipsoid center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/ThumbIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: height
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the circle center
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: type
            required: No
            default: !!str ThumbIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: width
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the circle center
          - name: xcoord
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the circle center
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/Tricrystal2CircleGrainsIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: op_index
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Index for the current grain order parameter
          - name: op_num
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Number of grain order parameters
          - name: type
            required: No
            default: !!str Tricrystal2CircleGrainsIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/TricrystalTripleJunctionIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: junction
            required: No
            default: !!str 
            cpp_type: libMesh::Point
            group_name: 
            description: |
              The point where the triple junction is located. Default is the center of the mesh
          - name: op_index
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Index for the current grain order parameter
          - name: op_num
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Number of grain order parameters
          - name: theta1
            required: No
            default: !!str 135
            cpp_type: double
            group_name: 
            description: |
              Angle of first grain at triple junction in degrees
          - name: theta2
            required: No
            default: !!str 135
            cpp_type: double
            group_name: 
            description: |
              Angle of second grain at triple junction in degrees
          - name: type
            required: No
            default: !!str TricrystalTripleJunctionIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /AuxVariables/*/InitialCondition/<type>/VectorConstantIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: type
            required: No
            default: !!str VectorConstantIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x_value
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x value to be set in IC
          - name: y_value
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The y value to be set in IC
          - name: z_value
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z value to be set in IC
          subblocks:
  - name: /AuxVariables/MultiAuxVariables
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The block id where this variable lives
    - name: data_type
      required: Yes
      default: !!str Real
      cpp_type: MultiMooseEnum
      group_name: 
      options: Real RealGradient
      description: |
        Specifying data type of the materials property, variables are created accordingly
    - name: family
      required: No
      default: !!str LAGRANGE
      cpp_type: MooseEnum
      group_name: 
      options: LAGRANGE MONOMIAL SCALAR
      description: |
        Specifies the family of FE shape functions to use for this variable
    - name: grain_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Specifies the number of grains to create the aux varaivles for.
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: initial_condition
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Specifies the initial condition for this variable
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: CONSTANT FIRST SECOND THIRD FOURTH FIFTH SIXTH SEVENTH EIGHTH NINTH
      description: |
        Specifies the order of the FE shape function to use for this variable (additional orders not listed are allowed)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: variable_base
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector that specifies the base name of the variables.
    subblocks:
- name: /BCs
  description: |
    
  parameters:
  subblocks:
  - name: /BCs/*
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/CavityPressure
    description: |
      
    parameters:
    subblocks:
    - name: /BCs/CavityPressure/*
      description: |
        
      parameters:
      - name: boundary
        required: Yes
        default: !!str 
        cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
        group_name: 
        description: |
          The list of boundary IDs from the mesh where the pressure will be applied
      - name: displacements
        required: Yes
        default: !!str 
        cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
        group_name: 
        description: |
          The nonlinear displacement variables
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: output
        required: No
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          The name to use for the cavity pressure value
      - name: save_in
        required: No
        default: !!str 
        cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
        group_name: 
        description: |
          Auxiliary variables to save the displacement residuals
      - name: use_displaced_mesh
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Whether to use displaced mesh in the boundary condition
      - name: output_initial_moles
        required: No
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          The name to use when reporting the initial moles of gas
      - name: R
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The universal gas constant for the units used
      - name: execute_on
        required: No
        default: !!str LINEAR
        cpp_type: ExecFlagEnum
        group_name: 
        description: |
          The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
      - name: initial_pressure
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The initial pressure in the cavity
      - name: initial_temperature
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Initial temperature (optional)
      - name: material_input
        required: No
        default: !!str 
        cpp_type: std::vector<PostprocessorName, std::allocator<PostprocessorName> >
        group_name: 
        description: |
          The name of the postprocessor(s) that holds the amount of material injected into the cavity
      - name: startup_time
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The amount of time during which the pressure will ramp from zero to its true value
      - name: temperature
        required: Yes
        default: !!str 
        cpp_type: PostprocessorName
        group_name: 
        description: |
          The name of the average temperature postprocessor value
      - name: volume
        required: Yes
        default: !!str 
        cpp_type: std::vector<PostprocessorName, std::allocator<PostprocessorName> >
        group_name: 
        description: |
          The name of the postprocessor(s) that holds the value of the internal volume in the cavity
      subblocks:
  - name: /BCs/ConvectiveFluxBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: duration
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: final
      required: No
      default: !!str 500
      cpp_type: double
      group_name: 
      description: |
        
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: initial
      required: No
      default: !!str 500
      cpp_type: double
      group_name: 
      description: |
        
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: rate
      required: No
      default: !!str 7500
      cpp_type: double
      group_name: 
      description: |
        
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ConvectiveFluxBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/CoupledNeumannBC
    description: |
      
    parameters:
    - name: alpha
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Value multiplied by the coupled variable on the boundary
    - name: beta
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Value added to the coupled variable on the boundary
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cvar
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Flux Value at the Boundary
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CoupledNeumannBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/CoupledPressure
    description: |
      
    parameters:
    subblocks:
    - name: /BCs/CoupledPressure/*
      description: |
        
      parameters:
      - name: boundary
        required: Yes
        default: !!str 
        cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
        group_name: 
        description: |
          The list of boundary IDs from the mesh where the pressure will be applied
      - name: disp_x
        required: No
        default: !!str 
        cpp_type: NonlinearVariableName
        group_name: 
        description: |
          The x displacement
      - name: disp_y
        required: No
        default: !!str 
        cpp_type: NonlinearVariableName
        group_name: 
        description: |
          The y displacement
      - name: disp_z
        required: No
        default: !!str 
        cpp_type: NonlinearVariableName
        group_name: 
        description: |
          The z displacement
      - name: displacements
        required: No
        default: !!str 
        cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
        group_name: 
        description: |
          The displacements appropriate for the simulation geometry and coordinate system
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: pressure
        required: No
        default: !!str 
        cpp_type: VariableName
        group_name: 
        description: |
          The variable that contains the pressure
      - name: save_in_disp_x
        required: No
        default: !!str 
        cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
        group_name: 
        description: |
          The save_in variables for x displacement
      - name: save_in_disp_y
        required: No
        default: !!str 
        cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
        group_name: 
        description: |
          The save_in variables for y displacement
      - name: save_in_disp_z
        required: No
        default: !!str 
        cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
        group_name: 
        description: |
          The save_in variables for z displacement
      subblocks:
  - name: /BCs/CoupledPressureBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The component for the pressure
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: pressure
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable containing the pressure
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CoupledPressureBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/DGFunctionDiffusionDirichletBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: diff
      required: No
      default: !!str 1
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The diffusion (or thermal conductivity or viscosity) coefficient.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: epsilon
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Epsilon
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The forcing function.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: sigma
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Sigma
    - name: type
      required: No
      default: !!str DGFunctionDiffusionDirichletBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The value the variable should have on the boundary
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/DashpotBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coefficient
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The viscosity coefficient
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The displacement component corresponding the variable this BC acts on.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: disp_x
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Displacement in the x direction
    - name: disp_y
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Displacement in the y direction
    - name: disp_z
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Displacement in the z direction
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DashpotBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/DiffusionFluxBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DiffusionFluxBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/DirichletBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DirichletBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Value of the BC
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/DisplacementAboutAxis
    description: |
      
    parameters:
    - name: angle_units
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: degrees radians
      description: |
        The units of the angle of rotation. Choices are:degrees radians
    - name: axis_direction
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Direction of the axis of rotation
    - name: axis_origin
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Origin of the axis of rotation
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        The component for the rotational displacement
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The function providing the angle of rotation.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DisplacementAboutAxis
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/EigenDirichletBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str eigen
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time eigen
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str EigenDirichletBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str eigen
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual eigen
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/FunctionDirichletBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The forcing function.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str FunctionDirichletBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/FunctionNeumannBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The function.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str FunctionNeumannBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/FunctionPenaltyDirichletBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Forcing function
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: penalty
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Penalty scalar
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str FunctionPenaltyDirichletBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/FunctionPresetBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The forcing function.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str FunctionPresetBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/InteractionIntegralBenchmarkBC
    description: |
      
    parameters:
    - name: KIII_function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Function describing the Mode III stress intensity factor.
    - name: KII_function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Function describing the Mode II stress intensity factor.
    - name: KI_function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Function describing the Mode I stress intensity factor.
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The component of the displacement to apply BC on.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: crack_front_point_index
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of the point on the crack front.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: poissons_ratio
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Poisson's ratio for the material.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str InteractionIntegralBenchmarkBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    - name: youngs_modulus
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Young's modulus of the material.
    subblocks:
  - name: /BCs/LagrangeVecDirichletBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str LagrangeVecDirichletBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: values
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The values the components must take on the boundary
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/LagrangeVecFunctionDirichletBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str LagrangeVecFunctionDirichletBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    - name: x_exact_soln
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        The exact solution for the x component
    - name: y_exact_soln
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        The exact solution for the y component
    - name: z_exact_soln
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        The exact solution for the z component
    subblocks:
  - name: /BCs/MatchedValueBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MatchedValueBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable whose value we are to match.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/NeumannBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NeumannBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The value of the gradient on the boundary.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/OneDEqualValueConstraintBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Component of the Lagrange multiplier
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: lambda
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Lagrange multiplier
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str OneDEqualValueConstraintBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: vg
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Variation of the constraint g wrt this surface (+1 or -1). Note: g = value1 - value2 = 0 
    subblocks:
  - name: /BCs/PenaltyDirichletBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: penalty
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Penalty scalar
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PenaltyDirichletBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Boundary value of the variable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/Periodic
    description: |
      
    parameters:
    subblocks:
    - name: /BCs/Periodic/*
      description: |
        
      parameters:
      - name: auto_direction
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If using a generated mesh, you can specifiy just the dimension(s) you want to mark as periodic
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: inv_transform_func
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Functions that specify the inverse transformation
      - name: primary
        required: No
        default: !!str 
        cpp_type: BoundaryName
        group_name: 
        description: |
          Boundary ID associated with the primary boundary.
      - name: secondary
        required: No
        default: !!str 
        cpp_type: BoundaryName
        group_name: 
        description: |
          Boundary ID associated with the secondary boundary.
      - name: transform_func
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Functions that specify the transformation
      - name: translation
        required: No
        default: !!str 
        cpp_type: libMesh::VectorValue<double>
        group_name: 
        description: |
          Vector that translates coordinates on the primary boundary to coordinates on the secondary boundary.
      - name: variable
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName, std::allocator<VariableName> >
        group_name: 
        description: |
          Variable for the periodic boundary
      subblocks:
  - name: /BCs/PostprocessorDirichletBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The postprocessor to set the value to on the boundary.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PostprocessorDirichletBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/PostprocessorNeumannBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: postprocessor
      required: No
      default: !!str 0
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The postprocessor to use for value of the gradient on the boundary.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PostprocessorNeumannBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/PresetAcceleration
    description: |
      
    parameters:
    - name: acceleration
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The acceleration variable.
    - name: beta
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        beta parameter for Newmark time integration.
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: No
      default: !!str 1
      cpp_type: FunctionName
      group_name: 
      description: |
        Function describing the velocity.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor if function is given.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PresetAcceleration
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    - name: velocity
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The velocity variable.
    subblocks:
  - name: /BCs/PresetBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PresetBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Value of the BC
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/PresetDisplacement
    description: |
      
    parameters:
    - name: acceleration
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The acceleration variable.
    - name: beta
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        beta parameter for Newmark time integration.
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: No
      default: !!str 1
      cpp_type: FunctionName
      group_name: 
      description: |
        Function describing the displacement.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor if function is given.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PresetDisplacement
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    - name: velocity
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The velocity variable.
    subblocks:
  - name: /BCs/PresetVelocity
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: No
      default: !!str 1
      cpp_type: FunctionName
      group_name: 
      description: |
        Function describing the velocity.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PresetVelocity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    - name: velocity
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Value of the velocity.  Used as scale factor if function is given.
    subblocks:
  - name: /BCs/Pressure
    description: |
      
    parameters:
    - name: alpha
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        alpha parameter required for HHT time integration scheme
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The component for the pressure
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The magnitude to use in computing the pressure
    - name: function
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The function that describes the pressure
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: postprocessor
      required: No
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        Postprocessor that will supply the pressure value
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str Pressure
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
    - name: /BCs/Pressure/*
      description: |
        
      parameters:
      - name: alpha
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          alpha parameter for HHT time integration
      - name: boundary
        required: Yes
        default: !!str 
        cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
        group_name: 
        description: |
          The list of boundary IDs from the mesh where the pressure will be applied
      - name: disp_x
        required: No
        default: !!str 
        cpp_type: NonlinearVariableName
        group_name: 
        description: |
          The x displacement
      - name: disp_y
        required: No
        default: !!str 
        cpp_type: NonlinearVariableName
        group_name: 
        description: |
          The y displacement
      - name: disp_z
        required: No
        default: !!str 
        cpp_type: NonlinearVariableName
        group_name: 
        description: |
          The z displacement
      - name: displacements
        required: No
        default: !!str 
        cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
        group_name: 
        description: |
          The displacements appropriate for the simulation geometry and coordinate system
      - name: factor
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The factor to use in computing the pressure
      - name: function
        required: No
        default: !!str 
        cpp_type: FunctionName
        group_name: 
        description: |
          The function that describes the pressure
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: save_in_disp_x
        required: No
        default: !!str 
        cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
        group_name: 
        description: |
          The save_in variables for x displacement
      - name: save_in_disp_y
        required: No
        default: !!str 
        cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
        group_name: 
        description: |
          The save_in variables for y displacement
      - name: save_in_disp_z
        required: No
        default: !!str 
        cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
        group_name: 
        description: |
          The save_in variables for z displacement
      subblocks:
  - name: /BCs/SinDirichletBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: duration
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: final
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: initial
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SinDirichletBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/SinNeumannBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: duration
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The duration of the ramp
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: final
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The final value of the gradient on the boundary
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: initial
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The initial value of the gradient on the boundary
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SinNeumannBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/StickyBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: max_value
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        If the old variable value >= max_value, the variable is fixed at its old value
    - name: min_value
      required: No
      default: !!str -1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        If the old variable value <= min_value, the variable is fixed at its old value
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str StickyBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str residual
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time residual
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/VacuumBC
    description: |
      
    parameters:
    - name: alpha
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        No idea.
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VacuumBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /BCs/VectorNeumannBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VectorNeumannBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: vector_value
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        vector this BC should act in
    subblocks:
  - name: /BCs/WeakGradientBC
    description: |
      
    parameters:
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str WeakGradientBC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
- name: /Bounds
  description: |
    
  parameters:
  - name: inactive
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      If specified blocks matching these identifiers will be skipped.
  subblocks:
  - name: /Bounds/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /Bounds/AccumulateAux
    description: |
      
    parameters:
    - name: accumulate_from_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable whose values are to be accumulated into the current variable
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str AccumulateAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/BndsCalcAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str BndsCalcAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/BoundsAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bounded_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to be bounded
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: lower
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The lower bound for the variable
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str BoundsAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: upper
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The upper bound for the variable
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/ConstantAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ConstantAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Some constant value that can be read from the input file
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/CrossTermGradientFreeEnergy
    description: |
      
    parameters:
    - name: additional_free_energy
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable holding additional free energy contributions to be summed up
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: interfacial_vars
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable names that contribute to interfacial energy
    - name: kappa_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Matrix of kappa names with rows and columns corresponding to each variable name in interfacial_vars in the same order (should be symmetric).
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CrossTermGradientFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/CylindricalRankTwoAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: center_point
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Location of the center point of the cylindrical coordinates
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: index_i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ij for the tensor to output (0, 1, 2)
    - name: index_j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ij for the tensor to output (0, 1, 2)
    - name: rank_two_tensor
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The rank two material tensor name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CylindricalRankTwoAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/DebugResidualAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: debug_variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The variable that is being debugged.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DebugResidualAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/DiffusionFluxAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The desired component of flux.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diffusion_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable
    - name: diffusivity
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The name of the diffusivity material property that will be used in the flux computation.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DiffusionFluxAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/DiscreteNucleationAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: map
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        DiscreteNucleationMap user object
    - name: no_nucleus_value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Variable value indicating no nucleus is present
    - name: nucleus_value
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Variable value indicating the presence of a nucleus
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DiscreteNucleationAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/DomainIntegralQFunction
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: crack_front_point_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of the point on the crack front corresponding to this q function
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: j_integral_radius_inner
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Radius for J-Integral calculation
    - name: j_integral_radius_outer
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Radius for J-Integral calculation
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DomainIntegralQFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/DomainIntegralTopologicalQFunction
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: crack_front_point_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of the point on the crack front corresponding to this q function
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: ring_index
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The ring of elements that defines the integration domain
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DomainIntegralTopologicalQFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/EBSDReaderAvgDataAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: data_name
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: phi1 phi phi2 phase symmetry local_id feature_id
      description: |
        The averaged data to be extracted from the EBSD data by this AuxKernel
    - name: ebsd_reader
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The EBSDReader GeneralUserObject
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: grain_tracker
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The GrainTracker UserObject
    - name: invalid
      required: No
      default: !!str -1
      cpp_type: double
      group_name: 
      description: |
        Value to return for points without active grains.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str EBSDReaderAvgDataAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/EBSDReaderPointDataAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: data_name
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: phi1 phi phi2 feature_id phase symmetry
      description: |
        The data to be extracted from the EBSD data by this AuxKernel
    - name: ebsd_reader
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The EBSDReader GeneralUserObject
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str EBSDReaderPointDataAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/ElasticEnergyAux
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Mechanical property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElasticEnergyAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/ElementH1ErrorFunctionAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coupled_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to compute the norm of.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Function representing the exact solution
    - name: p
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The exponent used in the norm.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementH1ErrorFunctionAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/ElementL2ErrorFunctionAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coupled_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to compute the norm of.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Function representing the exact solution
    - name: p
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The exponent used in the norm.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementL2ErrorFunctionAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/ElementLengthAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: method
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: min max
      description: |
        The size calculation to perform ('min' or 'max').
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementLengthAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/ElementLpNormAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coupled_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to compute the norm of.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: p
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The exponent used in the norm.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementLpNormAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/ElementQualityAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: metric
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: ASPECT_RATIO SKEW SHEAR SHAPE MAX_ANGLE MIN_ANGLE CONDITION DISTORTION TAPER WARP STRETCH DIAGONAL ASPECT_RATIO_BETA ASPECT_RATIO_GAMMA SIZE JACOBIAN
      description: |
        The quality metric to use.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementQualityAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/EulerAngleProvider2RGBAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crystal_structure
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: triclinic monoclinic orthorhombic trigonal tetragonal cubic hexagonal
      description: |
        Crystal structure of the material
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: euler_angle_provider
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Name of Euler angle provider user object
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: grain_tracker
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The GrainTracker UserObject to get values from.
    - name: no_grain_color
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        RGB value of color used to represent area with no grains, defaults to black
    - name: output_type
      required: No
      default: !!str scalar
      cpp_type: MooseEnum
      group_name: 
      options: red green blue scalar
      description: |
        Type of value that will be outputted
    - name: sd
      required: No
      default: !!str 001
      cpp_type: MooseEnum
      group_name: 
      options: 100 010 001
      description: |
        Reference sample direction
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str EulerAngleProvider2RGBAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/EulerAngleVariables2RGBAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: output_type
      required: No
      default: !!str scalar
      cpp_type: MooseEnum
      group_name: 
      options: red green blue scalar
      description: |
        Type of value that will be outputted
    - name: phase
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Grain phase index
    - name: phi
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Euler angle 2
    - name: phi1
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Euler angle 1
    - name: phi2
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Euler angle 3
    - name: sd
      required: No
      default: !!str 001
      cpp_type: MooseEnum
      group_name: 
      options: 100 010 001
      description: |
        Reference sample direction
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: symmetry
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Grain symmetry indentifier
    - name: type
      required: No
      default: !!str EulerAngleVariables2RGBAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/FeatureFloodCountAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bubble_object
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: field_display
      required: No
      default: !!str UNIQUE_REGION
      cpp_type: MooseEnum
      group_name: 
      options: UNIQUE_REGION VARIABLE_COLORING GHOSTED_ENTITIES HALOS CENTROID ACTIVE_BOUNDS
      description: |
        Determines how the auxilary field should be colored. (UNIQUE_REGION and VARIABLE_COLORING are nodal, CENTROID is elemental, default: UNIQUE_REGION)
    - name: flood_counter
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: map_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of which map to retrieve values from when using FeatureFloodCount with multiple maps.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str FeatureFloodCountAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/FunctionAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The function to use as the value
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str FunctionAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/GapValueAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: normal_smoothing_distance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Distance from edge in parametric coordinates over which to smooth contact normal
    - name: normal_smoothing_method
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Method to use to smooth normals (edge_based|nodal_normal_based)
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: FIRST SECOND THIRD FOURTH
      description: |
        The finite element order
    - name: paired_boundary
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary on the other side of a gap.
    - name: paired_variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to get the value of.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tangential_tolerance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Tangential distance to extend edges of contact surfaces
    - name: type
      required: No
      default: !!str GapValueAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: warnings
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to output warning messages concerning nodes not being found
    subblocks:
  - name: /Bounds/GlobalDisplacementAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The displacement component to consider for this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the displacement variables
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str PRE_DISPLACE
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: global_strain_uo
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The name of the GlobalStrainUserObject
    - name: output_global_displacement
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Option to output global displacement only
    - name: scalar_global_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Scalar variable providing global strain components
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str GlobalDisplacementAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/GrainAdvectionAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The gradient component to compute
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: grain_force
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        userobject for getting force and torque acting on grains
    - name: grain_tracker_object
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        userobject for getting volume and center of mass of grains
    - name: grain_volumes
      required: No
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The feature volume VectorPostprocessorValue.
    - name: rotation_constant
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain rotation
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: translation_constant
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain translation
    - name: type
      required: No
      default: !!str GrainAdvectionAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/KKSGlobalFreeEnergy
    description: |
      
    parameters:
    - name: additional_free_energy
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable holding additional free energy contributions to be summed up
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: fa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_name in the corresponding derivative function material)
    - name: fb_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_name in the corresponding derivative function material)
    - name: g_name
      required: No
      default: !!str g
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name for the double well function g(eta)
    - name: h_name
      required: No
      default: !!str h
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name for the switching function h(eta)
    - name: interfacial_vars
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable names that contribute to interfacial energy
    - name: kappa_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Vector of kappa names corresponding to each variable name in interfacial_vars in the same order. For basic KKS, there is 1 kappa, 1 interfacial_var.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSGlobalFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: w
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Double well height parameter
    subblocks:
  - name: /Bounds/KKSMultiFreeEnergy
    description: |
      
    parameters:
    - name: Fj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of free energies for each phase. Place in same order as hj_names and gj_names!
    - name: additional_free_energy
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable holding additional free energy contributions to be summed up
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: gj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Barrier Function Materials that provide g. Place in same order as Fj_names and hj_names!
    - name: hj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide h. Place in same order as Fj_names and gj_names!
    - name: interfacial_vars
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable names that contribute to interfacial energy
    - name: kappa_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Vector of kappa names corresponding to each variable name in interfacial_vars in the same order.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSMultiFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: w
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Double well height parameter
    subblocks:
  - name: /Bounds/MaterialRankFourTensorAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ijkl for the tensor to output
    - name: j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ijkl for the tensor to output
    - name: k
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index k of ijkl for the tensor to output
    - name: l
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index l of ijkl for the tensor to output
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRankFourTensorAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/MaterialRankTwoTensorAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ij for the tensor to output
    - name: j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ij for the tensor to output
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRankTwoTensorAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/MaterialRealAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRealAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/MaterialRealDenseMatrixAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: column
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The column component to consider for this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: row
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The row component to consider for this kernel
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRealDenseMatrixAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/MaterialRealTensorValueAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: column
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The column component to consider for this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: row
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The row component to consider for this kernel
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRealTensorValueAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/MaterialRealVectorValueAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The vector component to consider for this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialRealVectorValueAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/MaterialStdVectorAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: index
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The index to consider for this kernel
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: selected_qp
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        Evaluate the std::vector<Real> at this quadpoint.  This only needs to be used if you are interested in a particular quadpoint in each element: otherwise do not include this parameter in your input file
    - name: type
      required: No
      default: !!str MaterialStdVectorAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/MaterialStdVectorRealGradientAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The gradient component to be extracted for this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The factor by which to multiply your material property for visualization
    - name: index
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The index to consider for this kernel
    - name: offset
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The offset to add to your material property for visualization
    - name: property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The scalar material property name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialStdVectorRealGradientAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/NearestNodeDistanceAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: paired_boundary
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary to find the distance to.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NearestNodeDistanceAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/NearestNodeValueAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: paired_boundary
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary to get the value from.
    - name: paired_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to get the value of.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NearestNodeValueAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/NewmarkAccelAux
    description: |
      
    parameters:
    - name: beta
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        beta parameter for Newmark method
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacement
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        displacement variable
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NewmarkAccelAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: velocity
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        velocity variable
    subblocks:
  - name: /Bounds/NewmarkVelAux
    description: |
      
    parameters:
    - name: acceleration
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        acceleration variable
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: gamma
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        gamma parameter for Newmark method
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NewmarkVelAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/NormalizationAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: normal_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The normalization factor
    - name: normalization
      required: No
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The postprocessor on the source
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: shift
      required: No
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The postprocessor to shift the source
    - name: source_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to be normalized
    - name: type
      required: No
      default: !!str NormalizationAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/OutputEulerAngles
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: euler_angle_provider
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Name of Euler angle provider user object
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: grain_tracker
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The GrainTracker UserObject to get values from.
    - name: output_euler_angle
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: phi1 Phi phi2
      description: |
        Euler angle to output
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str OutputEulerAngles
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/PFCEnergyDensity
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PFCEnergyDensity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/PFCRFFEnergyDensity
    description: |
      
    parameters:
    - name: a
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Modified Coefficent in Taylor Series Expanstion
    - name: b
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Modified Coefficent in Taylor Series Expanstion
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Modified Coefficent in Taylor Series Expanstion
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: log_approach
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: tolerance cancelation expansion nothing
      description: |
        Which approach will be used to handle the natural log
    - name: num_exp_terms
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 
      description: |
        This is the number of terms to use in the taylor series expansion
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tol
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Tolerance used when the tolerance approach is chosen
    - name: type
      required: No
      default: !!str PFCRFFEnergyDensity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/ParsedAux
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        coupled variables
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: constant_expressions
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of values for the constants in constant_names (can be an FParser expression)
    - name: constant_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of constants used in the parsed function (use this for kB etc.)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionExpression
      group_name: 
      description: |
        function expression
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ParsedAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/PenetrationAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: normal_smoothing_distance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Distance from edge in parametric coordinates over which to smooth contact normal
    - name: normal_smoothing_method
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Method to use to smooth normals (edge_based|nodal_normal_based)
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: FIRST SECOND THIRD FOURTH
      description: |
        The finite element order
    - name: paired_boundary
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary to be penetrated
    - name: quantity
      required: No
      default: !!str distance
      cpp_type: MooseEnum
      group_name: 
      options: distance tangential_distance normal_x normal_y normal_z closest_point_x closest_point_y closest_point_z element_id side incremental_slip_magnitude incremental_slip_x incremental_slip_y incremental_slip_z accumulated_slip force_x force_y force_z normal_force_magnitude normal_force_x normal_force_y normal_force_z tangential_force_magnitude tangential_force_x tangential_force_y tangential_force_z frictional_energy lagrange_multiplier mechanical_status
      description: |
        The quantity to recover from the available penetration information
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tangential_tolerance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Tangential distance to extend edges of contact surfaces
    - name: type
      required: No
      default: !!str PenetrationAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/ProcessorIDAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ProcessorIDAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/QuotientAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: denominator
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The downstairs of the quotient variable
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: numerator
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The upstairs of the quotient variable
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str QuotientAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/RadialDisplacementCylinderAux
    description: |
      
    parameters:
    - name: axis_vector
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Vector defining direction of cylindrical axis (3D Cartesian models)
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: origin
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Origin of cylinder axis of rotation for 2D and 3D Cartesian models
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str RadialDisplacementCylinderAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/RadialDisplacementSphereAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: origin
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Sphere origin for 3D Cartesian and 2D axisymmetric models
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str RadialDisplacementSphereAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/RankFourAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: index_i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ijkl for the tensor to output (0, 1, 2)
    - name: index_j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ijkl for the tensor to output (0, 1, 2)
    - name: index_k
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index k of ijkl for the tensor to output (0, 1, 2)
    - name: index_l
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index l of ijkl for the tensor to output (0, 1, 2)
    - name: rank_four_tensor
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The rank four material tensor name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str RankFourAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/RankTwoAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: index_i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ij for the tensor to output (0, 1, 2)
    - name: index_j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ij for the tensor to output (0, 1, 2)
    - name: patch_polynomial_order
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: CONSTANT FIRST SECOND THIRD FOURTH
      description: |
        Polynomial order used in least squares fitting of material property over the local patch of elements connected to a given node
    - name: rank_two_tensor
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The rank two material tensor name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: selected_qp
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        Evaluate the tensor at this specific quadpoint
    - name: type
      required: No
      default: !!str RankTwoAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/RankTwoScalarAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: No
      default: !!str 0 0 1
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Direction vector
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: patch_polynomial_order
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: CONSTANT FIRST SECOND THIRD FOURTH
      description: |
        Polynomial order used in least squares fitting of material property over the local patch of elements connected to a given node
    - name: point1
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Start point for axis used to calculate some cylinderical material tensor quantities
    - name: point2
      required: No
      default: !!str 0 1 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        End point for axis used to calculate some material tensor quantities
    - name: rank_two_tensor
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The rank two material tensor name
    - name: scalar_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: VonMisesStress EffectiveStrain Hydrostatic L2norm MaxPrincipal MidPrincipal MinPrincipal VolumetricStrain FirstInvariant SecondInvariant ThirdInvariant AxialStress HoopStress RadialStress TriaxialityStress Direction
      description: |
        Type of scalar output
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: selected_qp
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        Evaluate the tensor at this quadpoint.  This option only needs to be used if you are interested in a particular quadpoint in each element: otherwise do not include this parameter in your input file
    - name: type
      required: No
      default: !!str RankTwoScalarAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/SelfAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SelfAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/SolutionAux
    description: |
      
    parameters:
    - name: add_factor
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Add this value (b) to the solution (x): ax+b, where a is the 'scale_factor'
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direct
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true the meshes must be the same and then the values are simply copied over.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: from_variable
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the variable to extract from the file
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor (a)  to be applied to the solution (x): ax+b, where b is the 'add_factor'
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: solution
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The name of the SolutionUserObject
    - name: type
      required: No
      default: !!str SolutionAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/SpatialUserObjectAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SpatialUserObjectAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: user_object
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The UserObject UserObject to get values from.  Note that the UserObject _must_ implement the spatialValue() virtual function!
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/TagMatrixAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: matrix_tag
      required: No
      default: !!str TagName
      cpp_type: std::string
      group_name: 
      description: |
        Tag Name this Aux works on
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TagMatrixAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The coupled variable whose components are coupled to AuxVariable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/TagVectorAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TagVectorAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The coupled variable whose components are coupled to AuxVariable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: vector_tag
      required: No
      default: !!str TagName
      cpp_type: std::string
      group_name: 
      description: |
        Tag Name this Aux works on
    subblocks:
  - name: /Bounds/TestNewmarkTI
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacement
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable whose first/second derivative needs to be copied to the provided auxvariable.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: first
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Set to true to copy the first derivative to the auxvariable. If false, the second derivative is copied.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TestNewmarkTI
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/TotalFreeEnergy
    description: |
      
    parameters:
    - name: additional_free_energy
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable holding additional free energy contributions to be summed up
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: f_name
      required: No
      default: !!str F
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
         Base name of the free energy function
    - name: interfacial_vars
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable names that contribute to interfacial energy
    - name: kappa_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Vector of kappa names corresponding to each variable name in interfacial_vars in the same order.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TotalFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/VariableGradientComponent
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The gradient component to compute
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: gradient_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable from which to compute the gradient component
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VariableGradientComponent
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    subblocks:
  - name: /Bounds/VariableTimeIntegrationAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coefficient
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        A simple coefficient
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: order
      required: No
      default: !!str 2
      cpp_type: unsigned int
      group_name: 
      description: |
        The order of global truncation error: midpoint=1, trapazoidal=2, Simpson=3
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VariableTimeIntegrationAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: variable_to_integrate
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to be integrated
    subblocks:
  - name: /Bounds/VectorMagnitudeAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VectorMagnitudeAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: x
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        x-component of the vector
    - name: y
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        y-component of the vector
    - name: z
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        z-component of the vector
    subblocks:
  - name: /Bounds/VectorPostprocessorVisualizationAux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, PRE_DISPLACE.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VectorPostprocessorVisualizationAux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_broadcast
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Causes this AuxKernel to use a broadcasted version of the vector instead of a scattered version of the vector (the default).  This is slower - but is useful for debugging and testing
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The name of the variable that this object applies to
    - name: vector_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the vector to use from the VectorPostprocessor
    - name: vpp
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The name of the VectorPostprocessor to pull the data from.
    subblocks:
- name: /Constraints
  description: |
    
  parameters:
  subblocks:
  - name: /Constraints/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /Constraints/CoupledTiedValueConstraint
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: master
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary ID associated with the master side
    - name: master_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable on the master side of the domain
    - name: normal_smoothing_distance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Distance from edge in parametric coordinates over which to smooth contact normal
    - name: normal_smoothing_method
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Method to use to smooth normals (edge_based|nodal_normal_based)
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: FIRST SECOND THIRD FOURTH
      description: |
        The finite element order used for projections
    - name: scaling
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        scaling factor to be applied to constraint equations
    - name: slave
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary ID associated with the slave side
    - name: tangential_tolerance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Tangential distance to extend edges of contact surfaces
    - name: type
      required: No
      default: !!str CoupledTiedValueConstraint
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this constraint is applied to.
    subblocks:
  - name: /Constraints/EqualGradientConstraint
    description: |
      
    parameters:
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Gradient component to constrain
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: interface
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the interface.
    - name: master_variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Variable on master surface
    - name: slave_variable
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Variable on master surface
    - name: type
      required: No
      default: !!str EqualGradientConstraint
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this constraint is applied to.
    subblocks:
  - name: /Constraints/EqualValueBoundaryConstraint
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: formulation
      required: No
      default: !!str penalty
      cpp_type: MooseEnum
      group_name: 
      options: penalty kinematic
      description: |
        Formulation used to calculate constraint - penalty or kinematic.
    - name: master
      required: No
      default: !!str 4294967295
      cpp_type: unsigned int
      group_name: 
      description: |
        The ID of the master node. If no ID is provided, first node of slave set is chosen.
    - name: penalty
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The penalty used for the boundary term
    - name: slave
      required: No
      default: !!str NaN
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary ID associated with the slave side
    - name: slave_node_ids
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The IDs of the slave node
    - name: type
      required: No
      default: !!str EqualValueBoundaryConstraint
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this constraint is applied to.
    subblocks:
  - name: /Constraints/EqualValueConstraint
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: interface
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the interface.
    - name: master_variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Variable on master surface
    - name: slave_variable
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Variable on master surface
    - name: type
      required: No
      default: !!str EqualValueConstraint
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this constraint is applied to.
    subblocks:
  - name: /Constraints/EqualValueEmbeddedConstraint
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: formulation
      required: No
      default: !!str kinematic
      cpp_type: MooseEnum
      group_name: 
      options: kinematic penalty
      description: |
        Formulation used to enforce the constraint
    - name: master
      required: Yes
      default: !!str 
      cpp_type: SubdomainName
      group_name: 
      description: |
        master block id
    - name: master_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable on the master side of the domain
    - name: penalty
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Penalty parameter used in constraint enforcement for kinematic and penalty formulations.
    - name: slave
      required: Yes
      default: !!str 
      cpp_type: SubdomainName
      group_name: 
      description: |
        slave block id
    - name: type
      required: No
      default: !!str EqualValueEmbeddedConstraint
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this constraint is applied to.
    subblocks:
  - name: /Constraints/LinearNodalConstraint
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: formulation
      required: No
      default: !!str penalty
      cpp_type: MooseEnum
      group_name: 
      options: penalty kinematic
      description: |
        Formulation used to calculate constraint - penalty or kinematic.
    - name: master
      required: Yes
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The master node IDs.
    - name: penalty
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The penalty used for the boundary term
    - name: slave_node_ids
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The list of slave node ids
    - name: slave_node_set
      required: No
      default: !!str NaN
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary ID associated with the slave side
    - name: type
      required: No
      default: !!str LinearNodalConstraint
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this constraint is applied to.
    - name: weights
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The weights associated with the master node ids. Must be of the same size as master nodes
    subblocks:
  - name: /Constraints/TiedValueConstraint
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: master
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary ID associated with the master side
    - name: master_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable on the master side of the domain
    - name: normal_smoothing_distance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Distance from edge in parametric coordinates over which to smooth contact normal
    - name: normal_smoothing_method
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Method to use to smooth normals (edge_based|nodal_normal_based)
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: FIRST SECOND THIRD FOURTH
      description: |
        The finite element order used for projections
    - name: scaling
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        scaling factor to be applied to constraint equations
    - name: slave
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary ID associated with the slave side
    - name: tangential_tolerance
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Tangential distance to extend edges of contact surfaces
    - name: type
      required: No
      default: !!str TiedValueConstraint
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this constraint is applied to.
    subblocks:
- name: /Controls
  description: |
    
  parameters:
  subblocks:
  - name: /Controls/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /Controls/RealFunctionControl
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The Controls that this control relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The function to use for controlling the specified parameter.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: parameter
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The input parameter(s) to control. Specify a single parameter name and all parameters in all objects matching the name will be updated
    - name: type
      required: No
      default: !!str RealFunctionControl
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Controls/TimePeriod
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The Controls that this control relies upon (i.e. must execute before this one)
    - name: disable_objects
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        A list of object tags to disable.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_objects
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        A list of object tags to enable.
    - name: end_time
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The time at which the objects are to be enable/disabled.
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: set_outside_of_range
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When true the disable/enable lists are set to opposite values when outside of the given time range.
    - name: set_sync_times
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the start and end time as execute sync times.
    - name: start_time
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The time at which the objects are to be enabled/disabled.
    - name: type
      required: No
      default: !!str TimePeriod
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
- name: /DGKernels
  description: |
    
  parameters:
  subblocks:
  - name: /DGKernels/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /DGKernels/DGConvection
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: type
      required: No
      default: !!str DGConvection
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: velocity
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Velocity vector
    subblocks:
  - name: /DGKernels/DGDiffusion
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: diff
      required: No
      default: !!str 1
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The diffusion (or thermal conductivity or viscosity) coefficient.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: epsilon
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        epsilon
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: sigma
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        sigma
    - name: type
      required: No
      default: !!str DGDiffusion
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
- name: /Dampers
  description: |
    
  parameters:
  subblocks:
  - name: /Dampers/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /Dampers/BoundingValueElementDamper
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: max_value
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The maximum permissible iterative value for the variable.
    - name: min_damping
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Minimum value of computed damping. Damping lower than this will result in an exception being thrown and cutting the time step
    - name: min_value
      required: No
      default: !!str -1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The minimum permissible iterative value for the variable.
    - name: type
      required: No
      default: !!str BoundingValueElementDamper
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this damper operates on
    subblocks:
  - name: /Dampers/BoundingValueNodalDamper
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: max_value
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The maximum permissible iterative value for the variable.
    - name: min_damping
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Minimum value of computed damping. Damping lower than this will result in an exception being thrown and cutting the time step
    - name: min_value
      required: No
      default: !!str -1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The minimum permissible iterative value for the variable.
    - name: type
      required: No
      default: !!str BoundingValueNodalDamper
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this damper operates on
    subblocks:
  - name: /Dampers/ConstantDamper
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: damping
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The percentage (between 0 and 1) of the newton update to take.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: min_damping
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Minimum value of computed damping. Damping lower than this will result in an exception being thrown and cutting the time step
    - name: type
      required: No
      default: !!str ConstantDamper
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Dampers/ElementJacobianDamper
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: No
      default: !!str 
      cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
      group_name: 
      description: |
        The nonlinear displacement variables
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: max_increment
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The maximum permissible relative increment in the Jacobian per Newton iteration
    - name: min_damping
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Minimum value of computed damping. Damping lower than this will result in an exception being thrown and cutting the time step
    - name: type
      required: No
      default: !!str ElementJacobianDamper
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    subblocks:
  - name: /Dampers/MaxIncrement
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: increment_type
      required: No
      default: !!str absolute
      cpp_type: MooseEnum
      group_name: 
      options: absolute fractional
      description: |
        Type of increment to compare against max_increment. 'absolute': use variable increment. 'fractional': use variable increment divided by the variable value.
    - name: max_increment
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The maximum newton increment for the variable.
    - name: min_damping
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Minimum value of computed damping. Damping lower than this will result in an exception being thrown and cutting the time step
    - name: type
      required: No
      default: !!str MaxIncrement
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this damper operates on
    subblocks:
- name: /Debug
  description: |
    
  parameters:
  - name: inactive
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      If specified blocks matching these identifiers will be skipped.
  - name: show_actions
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Print out the actions being executed
  - name: show_material_props
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Print out the material properties supplied for each block, face, neighbor, and/or sideset
  - name: show_parser
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Shows parser block extraction and debugging information
  - name: show_top_residuals
    required: No
    default: !!str 0
    cpp_type: unsigned int
    group_name: 
    description: |
      The number of top residuals to print out (0 = no output)
  - name: show_var_residual_norms
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Print the residual norms of the individual solution variables at each nonlinear iteration
  - name: show_var_residual
    required: No
    default: !!str 
    cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
    group_name: 
    description: |
      Variables for which residuals will be sent to the output file
  subblocks:
  - name: /Debug/MaterialDerivativeTest
    description: |
      
    parameters:
    subblocks:
    - name: /Debug/MaterialDerivativeTest/*
      description: |
        
      parameters:
      - name: args
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName, std::allocator<VariableName> >
        group_name: 
        description: |
          Variables the tested material property depends on.
      - name: derivative_order
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          Highest order derivative to test derivatives of.
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: prop_name
        required: Yes
        default: !!str 
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          Name of the material property to test the derivatives of.
      - name: prop_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: Real RankTwoTensor RankFourTensor
        description: |
          Type of the material property to test the derivatives of.
      subblocks:
- name: /DeprecatedBlock
  description: |
    
  parameters:
  - name: DEPRECATED
    required: No
    default: !!str 
    cpp_type: bool
    group_name: 
    description: |
      *** WARNING: This block is deprecated - DO NOT USE ***
  - name: inactive
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      If specified blocks matching these identifiers will be skipped.
  subblocks:
- name: /DiracKernels
  description: |
    
  parameters:
  subblocks:
  - name: /DiracKernels/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /DiracKernels/ConstantPointSource
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: drop_duplicate_points
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        By default points added to a DiracKernel are dropped if a point at the same locationhas been added before. If this option is set to false duplicate points are retainedand contribute to residual and Jacobian.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: point
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The x,y,z coordinates of the point
    - name: type
      required: No
      default: !!str ConstantPointSource
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value of the point source
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /DiracKernels/FunctionDiracSource
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: drop_duplicate_points
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        By default points added to a DiracKernel are dropped if a point at the same locationhas been added before. If this option is set to false duplicate points are retainedand contribute to residual and Jacobian.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The function to use for controlling the specified dirac source.
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: point
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The x,y,z coordinates of the point
    - name: type
      required: No
      default: !!str FunctionDiracSource
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
- name: /Distributions
  description: |
    
  parameters:
  subblocks:
  - name: /Distributions/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
- name: /DomainIntegral
  description: |
    
  parameters:
  - name: 2d
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Treat body as two-dimensional
  - name: axis_2d
    required: No
    default: !!str 2
    cpp_type: unsigned int
    group_name: 
    description: |
      Out of plane axis for models treated as two-dimensional (0=x, 1=y, 2=z)
  - name: block
    required: No
    default: !!str 
    cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
    group_name: 
    description: |
      The block ids where integrals are defined
  - name: boundary
    required: No
    default: !!str 
    cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
    group_name: 
    description: |
      The list of boundary IDs from the mesh where this boundary condition applies
  - name: closed_loop
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Set of points forms forms a closed loop
  - name: convert_J_to_K
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Convert J-integral to stress intensity factor K.
  - name: crack_direction_method
    required: Yes
    default: !!str 
    cpp_type: MooseEnum
    group_name: 
    options: CrackDirectionVector CrackMouth CurvedCrackFront
    description: |
      Method to determine direction of crack propagation.  Choices are: CrackDirectionVector CrackMouth CurvedCrackFront
  - name: crack_direction_vector
    required: No
    default: !!str 
    cpp_type: libMesh::VectorValue<double>
    group_name: 
    description: |
      Direction of crack propagation
  - name: crack_direction_vector_end_1
    required: No
    default: !!str 
    cpp_type: libMesh::VectorValue<double>
    group_name: 
    description: |
      Direction of crack propagation for the node at end 1 of the crack
  - name: crack_direction_vector_end_2
    required: No
    default: !!str 
    cpp_type: libMesh::VectorValue<double>
    group_name: 
    description: |
      Direction of crack propagation for the node at end 2 of the crack
  - name: crack_end_direction_method
    required: No
    default: !!str NoSpecialTreatment
    cpp_type: MooseEnum
    group_name: 
    options: NoSpecialTreatment CrackDirectionVector
    description: |
      Method to determine direction of crack propagation at ends of crack.  Choices are: NoSpecialTreatment CrackDirectionVector
  - name: crack_front_points
    required: No
    default: !!str 
    cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
    group_name: 
    description: |
      Set of points to define crack front
  - name: crack_front_points_provider
    required: No
    default: !!str 
    cpp_type: UserObjectName
    group_name: 
    description: |
      The UserObject provides the crack front points from XFEM GeometricCutObject
  - name: crack_mouth_boundary
    required: No
    default: !!str 
    cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
    group_name: 
    description: |
      Boundaries whose average coordinate defines the crack mouth
  - name: disp_x
    required: No
    default: !!str 
    cpp_type: VariableName
    group_name: 
    description: |
      The x displacement
  - name: disp_y
    required: No
    default: !!str 
    cpp_type: VariableName
    group_name: 
    description: |
      The y displacement
  - name: disp_z
    required: No
    default: !!str 
    cpp_type: VariableName
    group_name: 
    description: |
      The z displacement
  - name: displacements
    required: No
    default: !!str 
    cpp_type: std::vector<VariableName, std::allocator<VariableName> >
    group_name: 
    description: |
      The displacements appropriate for the simulation geometry and coordinate system
  - name: eigenstrain_names
    required: No
    default: !!str 
    cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
    group_name: 
    description: |
      List of eigenstrains applied in the strain calculation
  - name: equivalent_k
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Calculate an equivalent K from KI, KII and KIII, assuming self-similar crack growth.
  - name: family
    required: No
    default: !!str LAGRANGE
    cpp_type: std::string
    group_name: 
    description: |
      Specifies the family of FE shape functions to use for q AuxVariables
  - name: first_ring
    required: No
    default: !!str 
    cpp_type: unsigned int
    group_name: 
    description: |
      The number of rings of nodes to generate
  - name: inactive
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      If specified blocks matching these identifiers will be skipped.
  - name: incremental
    required: Yes
    default: !!str 
    cpp_type: bool
    group_name: 
    description: |
      Flag to indicate whether an incremental or total model is being used.
  - name: integrals
    required: Yes
    default: !!str 
    cpp_type: MultiMooseEnum
    group_name: 
    options: JIntegral InteractionIntegralKI InteractionIntegralKII InteractionIntegralKIII InteractionIntegralT
    description: |
      Domain integrals to calculate.  Choices are: JIntegral InteractionIntegralKI InteractionIntegralKII InteractionIntegralKIII InteractionIntegralT
  - name: intersecting_boundary
    required: No
    default: !!str 
    cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
    group_name: 
    description: |
      Boundaries intersected by ends of crack
  - name: j_integral_radius_inner
    required: No
    default: !!str 
    cpp_type: std::vector<double, std::allocator<double> >
    group_name: 
    description: |
      Radius for J-Integral calculation
  - name: j_integral_radius_outer
    required: No
    default: !!str 
    cpp_type: std::vector<double, std::allocator<double> >
    group_name: 
    description: |
      Radius for J-Integral calculation
  - name: last_ring
    required: No
    default: !!str 
    cpp_type: unsigned int
    group_name: 
    description: |
      The number of rings of nodes to generate
  - name: nrings
    required: No
    default: !!str 
    cpp_type: unsigned int
    group_name: 
    description: |
      The number of rings of nodes to generate
  - name: number_points_from_provider
    required: No
    default: !!str 
    cpp_type: unsigned int
    group_name: 
    description: |
      The number of crack front points, only needed if crack_front_points_provider is used.
  - name: order
    required: No
    default: !!str FIRST
    cpp_type: std::string
    group_name: 
    description: |
      Specifies the order of the FE shape function to use for q AuxVariables
  - name: output_q
    required: No
    default: !!str 1
    cpp_type: bool
    group_name: 
    description: |
      Output q
  - name: output_variable
    required: No
    default: !!str 
    cpp_type: std::vector<VariableName, std::allocator<VariableName> >
    group_name: 
    description: |
      Variable values to be reported along the crack front
  - name: poissons_ratio
    required: No
    default: !!str 
    cpp_type: double
    group_name: 
    description: |
      Poisson's ratio
  - name: position_type
    required: No
    default: !!str Distance
    cpp_type: MooseEnum
    group_name: 
    options: Angle Distance
    description: |
      The method used to calculate position along crack front.  Options are: Angle Distance
  - name: q_function_rings
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Generate rings of nodes for q-function
  - name: q_function_type
    required: No
    default: !!str Geometry
    cpp_type: MooseEnum
    group_name: 
    options: Geometry Topology
    description: |
      The method used to define the integration domain. Options are: Geometry Topology
  - name: radius_inner
    required: No
    default: !!str 
    cpp_type: std::vector<double, std::allocator<double> >
    group_name: 
    description: |
      Inner radius for volume integral domain
  - name: radius_outer
    required: No
    default: !!str 
    cpp_type: std::vector<double, std::allocator<double> >
    group_name: 
    description: |
      Outer radius for volume integral domain
  - name: ring_first
    required: No
    default: !!str 
    cpp_type: unsigned int
    group_name: 
    description: |
      The first ring of elements for volume integral domain
  - name: ring_last
    required: No
    default: !!str 
    cpp_type: unsigned int
    group_name: 
    description: |
      The last ring of elements for volume integral domain
  - name: solid_mechanics
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Set to true if the solid_mechanics system is used.
  - name: symmetry_plane
    required: No
    default: !!str 
    cpp_type: unsigned int
    group_name: 
    description: |
      Account for a symmetry plane passing through the plane of the crack, normal to the specified axis (0=x, 1=y, 2=z)
  - name: t_stress
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Calculate T-stress
  - name: temperature
    required: No
    default: !!str 
    cpp_type: VariableName
    group_name: 
    description: |
      The temperature
  - name: youngs_modulus
    required: No
    default: !!str 
    cpp_type: double
    group_name: 
    description: |
      Young's modulus
  subblocks:
- name: /Executioner
  description: |
    
  parameters:
  - name: inactive
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      If specified blocks matching these identifiers will be skipped.
  - name: isObjectAction
    required: No
    default: !!str 1
    cpp_type: bool
    group_name: 
    description: |
      Indicates that this is a MooseObjectAction.
  - name: type
    required: Yes
    default: !!str 
    cpp_type: std::string
    group_name: 
    description: |
      A string representing the Moose Object that will be built by this Action
  subblocks:
  - name: /Executioner/<type>
    description: |
      
    parameters:
    subblocks:
    - name: /Executioner/<type>/Eigenvalue
      description: |
        
      parameters:
      - name: compute_initial_residual_before_preset_bcs
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Solver'
        description: |
          Use the residual norm computed *before* PresetBCs are imposed in relative convergence check
      - name: contact_line_search_allowed_lambda_cuts
        required: No
        default: !!str 2
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of times lambda is allowed to be cut in half in the contact line search. We recommend this number be roughly bounded by 0 <= allowed_lambda_cuts <= 3
      - name: contact_line_search_ltol
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The linear relative tolerance to be used while the contact state is changing between non-linear iterations. We recommend that this tolerance be looser than the standard linear tolerance
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: l_abs_step_tol
        required: No
        default: !!str -1
        cpp_type: double
        group_name: 'Solver'
        description: |
          Linear Absolute Step Tolerance
      - name: l_max_its
        required: No
        default: !!str 10000
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Linear Iterations
      - name: l_tol
        required: No
        default: !!str 1e-05
        cpp_type: double
        group_name: 'Solver'
        description: |
          Linear Tolerance
      - name: line_search
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 
        options: basic bt contact cp default l2 none shell
        description: |
          Specifies the line search type (Note: none = basic)
      - name: line_search_package
        required: No
        default: !!str petsc
        cpp_type: MooseEnum
        group_name: 
        options: petsc moose
        description: |
          The solver package to use to conduct the line-search
      - name: mffd_type
        required: No
        default: !!str wp
        cpp_type: MooseEnum
        group_name: 
        options: wp ds
        description: |
          Specifies the finite differencing type for Jacobian-free solve types. Note that the default is wp (for Walker and Pernice).
      - name: nl_abs_step_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Absolute step Tolerance
      - name: nl_abs_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Absolute Tolerance
      - name: nl_max_funcs
        required: No
        default: !!str 10000
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Nonlinear solver function evaluations
      - name: nl_max_its
        required: No
        default: !!str 50
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Nonlinear Iterations
      - name: nl_rel_step_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Relative step Tolerance
      - name: nl_rel_tol
        required: No
        default: !!str 1e-08
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Relative Tolerance
      - name: no_fe_reinit
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Specifies whether or not to reinitialize FEs
      - name: petsc_options
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -dm_moose_print_embedding -dm_view -ksp_converged_reason -ksp_gmres_modifiedgramschmidt -ksp_monitor -ksp_monitor_snes_lg-snes_ksp_ew -ksp_snes_ew -snes_converged_reason -snes_ksp -snes_ksp_ew -snes_linesearch_monitor -snes_mf -snes_mf_operator -snes_monitor -snes_test_display -snes_view
        description: |
          Singleton PETSc options
      - name: petsc_options_iname
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -ksp_atol -ksp_gmres_restart -ksp_max_it -ksp_pc_side -ksp_rtol -ksp_type -mat_fd_coloring_err -mat_fd_type -mat_mffd_type -pc_asm_overlap -pc_factor_levels -pc_factor_mat_ordering_type -pc_hypre_boomeramg_grid_sweeps_all -pc_hypre_boomeramg_max_iter -pc_hypre_boomeramg_strong_threshold -pc_hypre_type -pc_type -snes_atol -snes_linesearch_type -snes_ls -snes_max_it -snes_rtol -snes_type -sub_ksp_type -sub_pc_type
        description: |
          Names of PETSc name/value pairs
      - name: petsc_options_value
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Values of PETSc name/value pairs (must correspond with "petsc_options_iname"
      - name: restart_file_base
        required: No
        default: !!str 
        cpp_type: FileNameNoExtension
        group_name: 'Restart'
        description: |
          File base name used for restart
      - name: snesmf_reuse_base
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Specifies whether or not to reuse the base vector for matrix-free calculation
      - name: solve_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: PJFNK JFNK NEWTON FD LINEAR
        description: |
          PJFNK: Preconditioned Jacobian-Free Newton Krylov JFNK: Jacobian-Free Newton Krylov NEWTON: Full Newton Solve FD: Use finite differences to compute Jacobian LINEAR: Solving a linear problem
      - name: splitting
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Top-level splitting defining a hierarchical decomposition into subsystems to help the solver.
      - name: type
        required: No
        default: !!str Eigenvalue
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Executioner/<type>/InversePowerMethod
      description: |
        
      parameters:
      - name: Chebyshev_acceleration_on
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If Chebyshev acceleration is turned on
      - name: auto_initialization
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          True to ask the solver to set initial
      - name: bx_norm
        required: Yes
        default: !!str 
        cpp_type: PostprocessorName
        group_name: 
        description: |
          To evaluate |Bx| for the eigenvalue
      - name: compute_initial_residual_before_preset_bcs
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Solver'
        description: |
          Use the residual norm computed *before* PresetBCs are imposed in relative convergence check
      - name: contact_line_search_allowed_lambda_cuts
        required: No
        default: !!str 2
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of times lambda is allowed to be cut in half in the contact line search. We recommend this number be roughly bounded by 0 <= allowed_lambda_cuts <= 3
      - name: contact_line_search_ltol
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The linear relative tolerance to be used while the contact state is changing between non-linear iterations. We recommend that this tolerance be looser than the standard linear tolerance
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: eig_check_tol
        required: No
        default: !!str 1e-06
        cpp_type: double
        group_name: 
        description: |
          Eigenvalue convergence tolerance
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: k0
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Initial guess of the eigenvalue
      - name: l_abs_step_tol
        required: No
        default: !!str -1
        cpp_type: double
        group_name: 'Solver'
        description: |
          Linear Absolute Step Tolerance
      - name: l_max_its
        required: No
        default: !!str 10000
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Linear Iterations
      - name: l_tol
        required: No
        default: !!str 1e-05
        cpp_type: double
        group_name: 'Solver'
        description: |
          Linear Tolerance
      - name: line_search
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 
        options: basic bt contact cp default l2 none shell
        description: |
          Specifies the line search type (Note: none = basic)
      - name: line_search_package
        required: No
        default: !!str petsc
        cpp_type: MooseEnum
        group_name: 
        options: petsc moose
        description: |
          The solver package to use to conduct the line-search
      - name: max_power_iterations
        required: No
        default: !!str 300
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of power iterations
      - name: mffd_type
        required: No
        default: !!str wp
        cpp_type: MooseEnum
        group_name: 
        options: wp ds
        description: |
          Specifies the finite differencing type for Jacobian-free solve types. Note that the default is wp (for Walker and Pernice).
      - name: min_power_iterations
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Minimum number of power iterations
      - name: nl_abs_step_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Absolute step Tolerance
      - name: nl_abs_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Absolute Tolerance
      - name: nl_max_funcs
        required: No
        default: !!str 10000
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Nonlinear solver function evaluations
      - name: nl_max_its
        required: No
        default: !!str 50
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Nonlinear Iterations
      - name: nl_rel_step_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Relative step Tolerance
      - name: nl_rel_tol
        required: No
        default: !!str 1e-08
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Relative Tolerance
      - name: no_fe_reinit
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Specifies whether or not to reinitialize FEs
      - name: normal_factor
        required: No
        default: !!str 
        cpp_type: double
        group_name: 'Normalization'
        description: |
          Normalize x to make |x| equal to this factor
      - name: normalization
        required: No
        default: !!str 
        cpp_type: PostprocessorName
        group_name: 'Normalization'
        description: |
          To evaluate |x| for normalization
      - name: output_before_normalization
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Normalization'
        description: |
          True to output a step before normalization
      - name: petsc_options
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -dm_moose_print_embedding -dm_view -ksp_converged_reason -ksp_gmres_modifiedgramschmidt -ksp_monitor -ksp_monitor_snes_lg-snes_ksp_ew -ksp_snes_ew -snes_converged_reason -snes_ksp -snes_ksp_ew -snes_linesearch_monitor -snes_mf -snes_mf_operator -snes_monitor -snes_test_display -snes_view
        description: |
          Singleton PETSc options
      - name: petsc_options_iname
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -ksp_atol -ksp_gmres_restart -ksp_max_it -ksp_pc_side -ksp_rtol -ksp_type -mat_fd_coloring_err -mat_fd_type -mat_mffd_type -pc_asm_overlap -pc_factor_levels -pc_factor_mat_ordering_type -pc_hypre_boomeramg_grid_sweeps_all -pc_hypre_boomeramg_max_iter -pc_hypre_boomeramg_strong_threshold -pc_hypre_type -pc_type -snes_atol -snes_linesearch_type -snes_ls -snes_max_it -snes_rtol -snes_type -sub_ksp_type -sub_pc_type
        description: |
          Names of PETSc name/value pairs
      - name: petsc_options_value
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Values of PETSc name/value pairs (must correspond with "petsc_options_iname"
      - name: pfactor
        required: No
        default: !!str 0.01
        cpp_type: double
        group_name: 
        description: |
          Reduce residual norm per power iteration by this factor
      - name: restart_file_base
        required: No
        default: !!str 
        cpp_type: FileNameNoExtension
        group_name: 'Restart'
        description: |
          File base name used for restart
      - name: snesmf_reuse_base
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Specifies whether or not to reuse the base vector for matrix-free calculation
      - name: sol_check_tol
        required: No
        default: !!str 1.79769e+308
        cpp_type: double
        group_name: 
        description: |
          Convergence tolerance on |x-x_previous| when provided
      - name: solve_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: PJFNK JFNK NEWTON FD LINEAR
        description: |
          PJFNK: Preconditioned Jacobian-Free Newton Krylov JFNK: Jacobian-Free Newton Krylov NEWTON: Full Newton Solve FD: Use finite differences to compute Jacobian LINEAR: Solving a linear problem
      - name: splitting
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Top-level splitting defining a hierarchical decomposition into subsystems to help the solver.
      - name: time
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 'Advanced'
        description: |
          System time
      - name: type
        required: No
        default: !!str InversePowerMethod
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: xdiff
        required: No
        default: !!str 
        cpp_type: PostprocessorName
        group_name: 
        description: |
          To evaluate |x-x_previous| for power iterations
      subblocks:
    - name: /Executioner/<type>/NonlinearEigen
      description: |
        
      parameters:
      - name: auto_initialization
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          True to ask the solver to set initial
      - name: bx_norm
        required: Yes
        default: !!str 
        cpp_type: PostprocessorName
        group_name: 
        description: |
          To evaluate |Bx| for the eigenvalue
      - name: compute_initial_residual_before_preset_bcs
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Solver'
        description: |
          Use the residual norm computed *before* PresetBCs are imposed in relative convergence check
      - name: contact_line_search_allowed_lambda_cuts
        required: No
        default: !!str 2
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of times lambda is allowed to be cut in half in the contact line search. We recommend this number be roughly bounded by 0 <= allowed_lambda_cuts <= 3
      - name: contact_line_search_ltol
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The linear relative tolerance to be used while the contact state is changing between non-linear iterations. We recommend that this tolerance be looser than the standard linear tolerance
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: free_power_iterations
        required: No
        default: !!str 4
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of free power iterations
      - name: k0
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Initial guess of the eigenvalue
      - name: l_abs_step_tol
        required: No
        default: !!str -1
        cpp_type: double
        group_name: 'Solver'
        description: |
          Linear Absolute Step Tolerance
      - name: l_max_its
        required: No
        default: !!str 10000
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Linear Iterations
      - name: l_tol
        required: No
        default: !!str 1e-05
        cpp_type: double
        group_name: 'Solver'
        description: |
          Linear Tolerance
      - name: line_search
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 
        options: basic bt contact cp default l2 none shell
        description: |
          Specifies the line search type (Note: none = basic)
      - name: line_search_package
        required: No
        default: !!str petsc
        cpp_type: MooseEnum
        group_name: 
        options: petsc moose
        description: |
          The solver package to use to conduct the line-search
      - name: mffd_type
        required: No
        default: !!str wp
        cpp_type: MooseEnum
        group_name: 
        options: wp ds
        description: |
          Specifies the finite differencing type for Jacobian-free solve types. Note that the default is wp (for Walker and Pernice).
      - name: nl_abs_step_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Absolute step Tolerance
      - name: nl_abs_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Absolute Tolerance
      - name: nl_max_funcs
        required: No
        default: !!str 10000
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Nonlinear solver function evaluations
      - name: nl_max_its
        required: No
        default: !!str 50
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Nonlinear Iterations
      - name: nl_rel_step_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Relative step Tolerance
      - name: nl_rel_tol
        required: No
        default: !!str 1e-08
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Relative Tolerance
      - name: no_fe_reinit
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Specifies whether or not to reinitialize FEs
      - name: normal_factor
        required: No
        default: !!str 
        cpp_type: double
        group_name: 'Normalization'
        description: |
          Normalize x to make |x| equal to this factor
      - name: normalization
        required: No
        default: !!str 
        cpp_type: PostprocessorName
        group_name: 'Normalization'
        description: |
          To evaluate |x| for normalization
      - name: output_after_power_iterations
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          True to output solution after free power iterations
      - name: output_before_normalization
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Normalization'
        description: |
          True to output a step before normalization
      - name: petsc_options
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -dm_moose_print_embedding -dm_view -ksp_converged_reason -ksp_gmres_modifiedgramschmidt -ksp_monitor -ksp_monitor_snes_lg-snes_ksp_ew -ksp_snes_ew -snes_converged_reason -snes_ksp -snes_ksp_ew -snes_linesearch_monitor -snes_mf -snes_mf_operator -snes_monitor -snes_test_display -snes_view
        description: |
          Singleton PETSc options
      - name: petsc_options_iname
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -ksp_atol -ksp_gmres_restart -ksp_max_it -ksp_pc_side -ksp_rtol -ksp_type -mat_fd_coloring_err -mat_fd_type -mat_mffd_type -pc_asm_overlap -pc_factor_levels -pc_factor_mat_ordering_type -pc_hypre_boomeramg_grid_sweeps_all -pc_hypre_boomeramg_max_iter -pc_hypre_boomeramg_strong_threshold -pc_hypre_type -pc_type -snes_atol -snes_linesearch_type -snes_ls -snes_max_it -snes_rtol -snes_type -sub_ksp_type -sub_pc_type
        description: |
          Names of PETSc name/value pairs
      - name: petsc_options_value
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Values of PETSc name/value pairs (must correspond with "petsc_options_iname"
      - name: pfactor
        required: No
        default: !!str 0.01
        cpp_type: double
        group_name: 
        description: |
          The factor of residual to be reduced per free power iteration or per nonlinear step
      - name: restart_file_base
        required: No
        default: !!str 
        cpp_type: FileNameNoExtension
        group_name: 'Restart'
        description: |
          File base name used for restart
      - name: snesmf_reuse_base
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Specifies whether or not to reuse the base vector for matrix-free calculation
      - name: solve_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: PJFNK JFNK NEWTON FD LINEAR
        description: |
          PJFNK: Preconditioned Jacobian-Free Newton Krylov JFNK: Jacobian-Free Newton Krylov NEWTON: Full Newton Solve FD: Use finite differences to compute Jacobian LINEAR: Solving a linear problem
      - name: source_abs_tol
        required: No
        default: !!str 1e-06
        cpp_type: double
        group_name: 
        description: |
          Absolute tolernance on residual norm
      - name: source_rel_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 
        description: |
          Relative tolernance on residual norm after free power iterations
      - name: splitting
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Top-level splitting defining a hierarchical decomposition into subsystems to help the solver.
      - name: time
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 'Advanced'
        description: |
          System time
      - name: type
        required: No
        default: !!str NonlinearEigen
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Executioner/<type>/Steady
      description: |
        
      parameters:
      - name: compute_initial_residual_before_preset_bcs
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Solver'
        description: |
          Use the residual norm computed *before* PresetBCs are imposed in relative convergence check
      - name: contact_line_search_allowed_lambda_cuts
        required: No
        default: !!str 2
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of times lambda is allowed to be cut in half in the contact line search. We recommend this number be roughly bounded by 0 <= allowed_lambda_cuts <= 3
      - name: contact_line_search_ltol
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The linear relative tolerance to be used while the contact state is changing between non-linear iterations. We recommend that this tolerance be looser than the standard linear tolerance
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: l_abs_step_tol
        required: No
        default: !!str -1
        cpp_type: double
        group_name: 'Solver'
        description: |
          Linear Absolute Step Tolerance
      - name: l_max_its
        required: No
        default: !!str 10000
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Linear Iterations
      - name: l_tol
        required: No
        default: !!str 1e-05
        cpp_type: double
        group_name: 'Solver'
        description: |
          Linear Tolerance
      - name: line_search
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 
        options: basic bt contact cp default l2 none shell
        description: |
          Specifies the line search type (Note: none = basic)
      - name: line_search_package
        required: No
        default: !!str petsc
        cpp_type: MooseEnum
        group_name: 
        options: petsc moose
        description: |
          The solver package to use to conduct the line-search
      - name: mffd_type
        required: No
        default: !!str wp
        cpp_type: MooseEnum
        group_name: 
        options: wp ds
        description: |
          Specifies the finite differencing type for Jacobian-free solve types. Note that the default is wp (for Walker and Pernice).
      - name: nl_abs_step_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Absolute step Tolerance
      - name: nl_abs_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Absolute Tolerance
      - name: nl_max_funcs
        required: No
        default: !!str 10000
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Nonlinear solver function evaluations
      - name: nl_max_its
        required: No
        default: !!str 50
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Nonlinear Iterations
      - name: nl_rel_step_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Relative step Tolerance
      - name: nl_rel_tol
        required: No
        default: !!str 1e-08
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Relative Tolerance
      - name: no_fe_reinit
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Specifies whether or not to reinitialize FEs
      - name: petsc_options
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -dm_moose_print_embedding -dm_view -ksp_converged_reason -ksp_gmres_modifiedgramschmidt -ksp_monitor -ksp_monitor_snes_lg-snes_ksp_ew -ksp_snes_ew -snes_converged_reason -snes_ksp -snes_ksp_ew -snes_linesearch_monitor -snes_mf -snes_mf_operator -snes_monitor -snes_test_display -snes_view
        description: |
          Singleton PETSc options
      - name: petsc_options_iname
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -ksp_atol -ksp_gmres_restart -ksp_max_it -ksp_pc_side -ksp_rtol -ksp_type -mat_fd_coloring_err -mat_fd_type -mat_mffd_type -pc_asm_overlap -pc_factor_levels -pc_factor_mat_ordering_type -pc_hypre_boomeramg_grid_sweeps_all -pc_hypre_boomeramg_max_iter -pc_hypre_boomeramg_strong_threshold -pc_hypre_type -pc_type -snes_atol -snes_linesearch_type -snes_ls -snes_max_it -snes_rtol -snes_type -sub_ksp_type -sub_pc_type
        description: |
          Names of PETSc name/value pairs
      - name: petsc_options_value
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Values of PETSc name/value pairs (must correspond with "petsc_options_iname"
      - name: restart_file_base
        required: No
        default: !!str 
        cpp_type: FileNameNoExtension
        group_name: 'Restart'
        description: |
          File base name used for restart
      - name: snesmf_reuse_base
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Specifies whether or not to reuse the base vector for matrix-free calculation
      - name: solve_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: PJFNK JFNK NEWTON FD LINEAR
        description: |
          PJFNK: Preconditioned Jacobian-Free Newton Krylov JFNK: Jacobian-Free Newton Krylov NEWTON: Full Newton Solve FD: Use finite differences to compute Jacobian LINEAR: Solving a linear problem
      - name: splitting
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Top-level splitting defining a hierarchical decomposition into subsystems to help the solver.
      - name: type
        required: No
        default: !!str Steady
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Executioner/<type>/Transient
      description: |
        
      parameters:
      - name: abort_on_solve_fail
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          abort if solve not converged rather than cut timestep
      - name: compute_initial_residual_before_preset_bcs
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Solver'
        description: |
          Use the residual norm computed *before* PresetBCs are imposed in relative convergence check
      - name: contact_line_search_allowed_lambda_cuts
        required: No
        default: !!str 2
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of times lambda is allowed to be cut in half in the contact line search. We recommend this number be roughly bounded by 0 <= allowed_lambda_cuts <= 3
      - name: contact_line_search_ltol
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The linear relative tolerance to be used while the contact state is changing between non-linear iterations. We recommend that this tolerance be looser than the standard linear tolerance
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dt
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The timestep size between solves
      - name: dtmax
        required: No
        default: !!str 1e+30
        cpp_type: double
        group_name: 'Advanced'
        description: |
          The maximum timestep size in an adaptive run
      - name: dtmin
        required: No
        default: !!str 2e-14
        cpp_type: double
        group_name: 'Advanced'
        description: |
          The minimum timestep size in an adaptive run
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: end_time
        required: No
        default: !!str 1e+30
        cpp_type: double
        group_name: 
        description: |
          The end time of the simulation
      - name: l_abs_step_tol
        required: No
        default: !!str -1
        cpp_type: double
        group_name: 'Solver'
        description: |
          Linear Absolute Step Tolerance
      - name: l_max_its
        required: No
        default: !!str 10000
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Linear Iterations
      - name: l_tol
        required: No
        default: !!str 1e-05
        cpp_type: double
        group_name: 'Solver'
        description: |
          Linear Tolerance
      - name: line_search
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 
        options: basic bt contact cp default l2 none shell
        description: |
          Specifies the line search type (Note: none = basic)
      - name: line_search_package
        required: No
        default: !!str petsc
        cpp_type: MooseEnum
        group_name: 
        options: petsc moose
        description: |
          The solver package to use to conduct the line-search
      - name: max_xfem_update
        required: No
        default: !!str 4294967295
        cpp_type: unsigned int
        group_name: 
        description: |
          Maximum number of times to update XFEM crack topology in a step due to evolving cracks
      - name: mffd_type
        required: No
        default: !!str wp
        cpp_type: MooseEnum
        group_name: 
        options: wp ds
        description: |
          Specifies the finite differencing type for Jacobian-free solve types. Note that the default is wp (for Walker and Pernice).
      - name: n_startup_steps
        required: No
        default: !!str 0
        cpp_type: int
        group_name: 'Advanced'
        description: |
          The number of timesteps during startup
      - name: nl_abs_step_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Absolute step Tolerance
      - name: nl_abs_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Absolute Tolerance
      - name: nl_max_funcs
        required: No
        default: !!str 10000
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Nonlinear solver function evaluations
      - name: nl_max_its
        required: No
        default: !!str 50
        cpp_type: unsigned int
        group_name: 'Solver'
        description: |
          Max Nonlinear Iterations
      - name: nl_rel_step_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Relative step Tolerance
      - name: nl_rel_tol
        required: No
        default: !!str 1e-08
        cpp_type: double
        group_name: 'Solver'
        description: |
          Nonlinear Relative Tolerance
      - name: no_fe_reinit
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Specifies whether or not to reinitialize FEs
      - name: num_steps
        required: No
        default: !!str 4294967295
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of timesteps in a transient run
      - name: petsc_options
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -dm_moose_print_embedding -dm_view -ksp_converged_reason -ksp_gmres_modifiedgramschmidt -ksp_monitor -ksp_monitor_snes_lg-snes_ksp_ew -ksp_snes_ew -snes_converged_reason -snes_ksp -snes_ksp_ew -snes_linesearch_monitor -snes_mf -snes_mf_operator -snes_monitor -snes_test_display -snes_view
        description: |
          Singleton PETSc options
      - name: petsc_options_iname
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -ksp_atol -ksp_gmres_restart -ksp_max_it -ksp_pc_side -ksp_rtol -ksp_type -mat_fd_coloring_err -mat_fd_type -mat_mffd_type -pc_asm_overlap -pc_factor_levels -pc_factor_mat_ordering_type -pc_hypre_boomeramg_grid_sweeps_all -pc_hypre_boomeramg_max_iter -pc_hypre_boomeramg_strong_threshold -pc_hypre_type -pc_type -snes_atol -snes_linesearch_type -snes_ls -snes_max_it -snes_rtol -snes_type -sub_ksp_type -sub_pc_type
        description: |
          Names of PETSc name/value pairs
      - name: petsc_options_value
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Values of PETSc name/value pairs (must correspond with "petsc_options_iname"
      - name: picard_abs_tol
        required: No
        default: !!str 1e-50
        cpp_type: double
        group_name: 'Picard'
        description: |
          The absolute nonlinear residual to shoot for during Picard iterations.  This check is performed based on the Master app's nonlinear residual.
      - name: picard_max_its
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 'Picard'
        description: |
          Number of times each timestep will be solved.  Mainly used when wanting to do Picard iterations with MultiApps that are set to execute_on timestep_end or timestep_begin
      - name: picard_rel_tol
        required: No
        default: !!str 1e-08
        cpp_type: double
        group_name: 'Picard'
        description: |
          The relative nonlinear residual drop to shoot for during Picard iterations.  This check is performed based on the Master app's nonlinear residual.
      - name: relaxation_factor
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 'Picard'
        description: |
          Fraction of newly computed value to keep.Set between 0 and 2.
      - name: relaxed_variables
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Picard'
        description: |
          List of variables to relax during Picard Iteration
      - name: reset_dt
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Use when restarting a calculation to force a change in dt.
      - name: restart_file_base
        required: No
        default: !!str 
        cpp_type: FileNameNoExtension
        group_name: 'Restart'
        description: |
          File base name used for restart
      - name: scheme
        required: No
        default: !!str implicit-euler
        cpp_type: MooseEnum
        group_name: 
        options: implicit-euler explicit-euler crank-nicolson bdf2 explicit-midpoint dirk explicit-tvd-rk-2 newmark-beta
        description: |
          Time integration scheme used.
      - name: snesmf_reuse_base
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Specifies whether or not to reuse the base vector for matrix-free calculation
      - name: solve_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: PJFNK JFNK NEWTON FD LINEAR
        description: |
          PJFNK: Preconditioned Jacobian-Free Newton Krylov JFNK: Jacobian-Free Newton Krylov NEWTON: Full Newton Solve FD: Use finite differences to compute Jacobian LINEAR: Solving a linear problem
      - name: splitting
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Top-level splitting defining a hierarchical decomposition into subsystems to help the solver.
      - name: ss_check_tol
        required: No
        default: !!str 1e-08
        cpp_type: double
        group_name: 'Advanced'
        description: |
          Whenever the relative residual changes by less than this the solution will be considered to be at steady state.
      - name: ss_tmin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 'Advanced'
        description: |
          Minimum amount of time to run before checking for steady state conditions.
      - name: start_time
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 'Advanced'
        description: |
          The start time of the simulation
      - name: steady_state_detection
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Steady State Detection'
        description: |
          Whether or not to check for steady state conditions
      - name: steady_state_start_time
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 'Steady State Detection'
        description: |
          Minimum amount of time to run before checking for steady state conditions.
      - name: steady_state_tolerance
        required: No
        default: !!str 1e-08
        cpp_type: double
        group_name: 'Steady State Detection'
        description: |
          Whenever the relative residual changes by less than this the solution will be considered to be at steady state.
      - name: time_period_ends
        required: No
        default: !!str 
        cpp_type: std::vector<double, std::allocator<double> >
        group_name: 'Time Periods'
        description: |
          The end times of time periods
      - name: time_period_starts
        required: No
        default: !!str 
        cpp_type: std::vector<double, std::allocator<double> >
        group_name: 'Time Periods'
        description: |
          The start times of time periods
      - name: time_periods
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Time Periods'
        description: |
          The names of periods
      - name: timestep_tolerance
        required: No
        default: !!str 2e-14
        cpp_type: double
        group_name: 'Advanced'
        description: |
          the tolerance setting for final timestep size and sync times
      - name: trans_ss_check
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to check for steady state conditions
      - name: type
        required: No
        default: !!str Transient
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: update_xfem_at_timestep_begin
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Should XFEM update the mesh at the beginning of the timestep
      - name: use_multiapp_dt
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If true then the dt for the simulation will be chosen by the MultiApps.  If false (the default) then the minimum over the master dt and the MultiApps is used
      - name: verbose
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Print detailed diagnostics on timestep calculation
      subblocks:
  - name: /Executioner/Adaptivity
    description: |
      
    parameters:
    - name: coarsen_fraction
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The fraction of elements or error to coarsen. Should be between 0 and 1.
    - name: cycles_per_step
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of adaptivity cycles per step
    - name: error_estimator
      required: No
      default: !!str KellyErrorEstimator
      cpp_type: MooseEnum
      group_name: 
      options: KellyErrorEstimator LaplacianErrorEstimator PatchRecoveryErrorEstimator
      description: |
        The class name of the error estimator you want to use.
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: initial_adaptivity
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of adaptivity steps to perform using the initial conditions
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of time steps betweeen each adaptivity phase
    - name: max_h_level
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of times a single element can be refined. If 0 then infinite.
    - name: print_changed_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Determines whether information about the mesh is printed when adaptivity occurs
    - name: recompute_markers_during_cycles
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Recompute markers during adaptivity cycles
    - name: refine_fraction
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The fraction of elements or error to refine. Should be between 0 and 1.
    - name: show_initial_progress
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Show the progress of the initial adaptivity
    - name: start_time
      required: No
      default: !!str -1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The time that adaptivity will be active after.
    - name: steps
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of adaptivity steps to perform at any one time for steady state
    - name: stop_time
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The time after which adaptivity will no longer be active.
    - name: weight_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        List of names of variables that will be associated with weight_values
    - name: weight_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        List of values between 0 and 1 to weight the associated weight_names error by
    subblocks:
  - name: /Executioner/Predictor
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
    - name: /Executioner/Predictor/<type>
      description: |
        
      parameters:
      subblocks:
      - name: /Executioner/Predictor/<type>/AdamsPredictor
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: order
          required: No
          default: !!str 2
          cpp_type: int
          group_name: 
          description: |
            The maximum reachable order of the Adams-Bashforth Predictor
        - name: scale
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            The scale factor for the predictor (can range from 0 to 1)
        - name: skip_times
          required: No
          default: !!str 
          cpp_type: std::vector<double, std::allocator<double> >
          group_name: 
          description: |
            Skip the predictor if the current solution time is in this list of times
        - name: skip_times_old
          required: No
          default: !!str 
          cpp_type: std::vector<double, std::allocator<double> >
          group_name: 
          description: |
            Skip the predictor if the previous solution time is in this list of times
        - name: type
          required: No
          default: !!str AdamsPredictor
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/Predictor/<type>/SimplePredictor
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: scale
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            The scale factor for the predictor (can range from 0 to 1)
        - name: skip_times
          required: No
          default: !!str 
          cpp_type: std::vector<double, std::allocator<double> >
          group_name: 
          description: |
            Skip the predictor if the current solution time is in this list of times
        - name: skip_times_old
          required: No
          default: !!str 
          cpp_type: std::vector<double, std::allocator<double> >
          group_name: 
          description: |
            Skip the predictor if the previous solution time is in this list of times
        - name: type
          required: No
          default: !!str SimplePredictor
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
  - name: /Executioner/Quadrature
    description: |
      
    parameters:
    - name: element_order
      required: No
      default: !!str AUTO
      cpp_type: MooseEnum
      group_name: 
      options: AUTO CONSTANT FIRST SECOND THIRD FOURTH FIFTH SIXTH SEVENTH EIGHTH NINTH TENTH ELEVENTH TWELFTH THIRTEENTH FOURTEENTH FIFTEENTH SIXTEENTH SEVENTEENTH EIGHTTEENTH NINTEENTH TWENTIETH
      description: |
        Order of the quadrature for elements
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: order
      required: No
      default: !!str AUTO
      cpp_type: MooseEnum
      group_name: 
      options: AUTO CONSTANT FIRST SECOND THIRD FOURTH FIFTH SIXTH SEVENTH EIGHTH NINTH TENTH ELEVENTH TWELFTH THIRTEENTH FOURTEENTH FIFTEENTH SIXTEENTH SEVENTEENTH EIGHTTEENTH NINTEENTH TWENTIETH
      description: |
        Order of the quadrature
    - name: side_order
      required: No
      default: !!str AUTO
      cpp_type: MooseEnum
      group_name: 
      options: AUTO CONSTANT FIRST SECOND THIRD FOURTH FIFTH SIXTH SEVENTH EIGHTH NINTH TENTH ELEVENTH TWELFTH THIRTEENTH FOURTEENTH FIFTEENTH SIXTEENTH SEVENTEENTH EIGHTTEENTH NINTEENTH TWENTIETH
      description: |
        Order of the quadrature for sides
    - name: type
      required: No
      default: !!str GAUSS
      cpp_type: MooseEnum
      group_name: 
      options: CLOUGH CONICAL GAUSS GRID MONOMIAL SIMPSON TRAP GAUSS_LOBATTO
      description: |
        Type of the quadrature rule
    subblocks:
  - name: /Executioner/TimeIntegrator
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
    - name: /Executioner/TimeIntegrator/<type>
      description: |
        
      parameters:
      subblocks:
      - name: /Executioner/TimeIntegrator/<type>/AStableDirk4
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: safe_start
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 
          description: |
            If true, use LStableDirk4 to bootstrap this method.
        - name: type
          required: No
          default: !!str AStableDirk4
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/ActuallyExplicitEuler
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: solve_type
          required: No
          default: !!str consistent
          cpp_type: MooseEnum
          group_name: 
          options: consistent lumped lump_preconditioned
          description: |
            The way to solve the system.  A 'consistent' solve uses the full mass matrix and actually needs to use a linear solver to solve the problem.  'lumped' uses a lumped mass matrix with a simple inversion - incredibly fast but may be less accurate.  'lump_preconditioned' uses the lumped mass matrix as a preconditioner for the 'consistent' solve
        - name: type
          required: No
          default: !!str ActuallyExplicitEuler
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/BDF2
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str BDF2
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/CrankNicolson
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str CrankNicolson
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/ExplicitEuler
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str ExplicitEuler
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/ExplicitMidpoint
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str ExplicitMidpoint
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/ExplicitTVDRK2
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str ExplicitTVDRK2
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/Heun
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str Heun
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/ImplicitEuler
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str ImplicitEuler
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/ImplicitMidpoint
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str ImplicitMidpoint
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/LStableDirk2
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str LStableDirk2
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/LStableDirk3
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str LStableDirk3
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/LStableDirk4
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str LStableDirk4
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/NewmarkBeta
        description: |
          
        parameters:
        - name: beta
          required: No
          default: !!str 0.25
          cpp_type: double
          group_name: 
          description: |
            beta value
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: gamma
          required: No
          default: !!str 0.5
          cpp_type: double
          group_name: 
          description: |
            gamma value
        - name: type
          required: No
          default: !!str NewmarkBeta
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeIntegrator/<type>/Ralston
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: type
          required: No
          default: !!str Ralston
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
  - name: /Executioner/TimeStepper
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
    - name: /Executioner/TimeStepper/<type>
      description: |
        
      parameters:
      subblocks:
      - name: /Executioner/TimeStepper/<type>/AB2PredictorCorrector
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: dt
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Initial time step size
        - name: e_max
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Maximum acceptable error.
        - name: e_tol
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Target error tolerance.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: max_increase
          required: No
          default: !!str 1e+09
          cpp_type: double
          group_name: 
          description: |
            Maximum ratio that the time step can increase.
        - name: reset_dt
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Use when restarting a calculation to force a change in dt.
        - name: scaling_parameter
          required: No
          default: !!str 0.8
          cpp_type: double
          group_name: 
          description: |
            scaling parameter for dt selection
        - name: start_adapting
          required: No
          default: !!str 2
          cpp_type: int
          group_name: 
          description: |
            when to start taking adaptive time steps
        - name: steps_between_increase
          required: No
          default: !!str 1
          cpp_type: int
          group_name: 
          description: |
            the number of time steps before recalculating dt
        - name: type
          required: No
          default: !!str AB2PredictorCorrector
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeStepper/<type>/CSVTimeSequenceStepper
        description: |
          
        parameters:
        - name: column_index
          required: No
          default: !!str 
          cpp_type: unsigned int
          group_name: 
          description: |
            index of the column which contains the time sequence
        - name: column_name
          required: No
          default: !!str time
          cpp_type: std::string
          group_name: 
          description: |
            name of the column which contains the time sequence
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: delimiter
          required: No
          default: !!str ","
          cpp_type: std::string
          group_name: 
          description: |
            delimiter used to parse the file
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: file_name
          required: Yes
          default: !!str 
          cpp_type: FileName
          group_name: 
          description: |
            name of the file in which the time sequence is read
        - name: header
          required: No
          default: !!str 
          cpp_type: bool
          group_name: 
          description: |
            indicates whether the file contains a header with the column names
        - name: reset_dt
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Use when restarting a calculation to force a change in dt.
        - name: type
          required: No
          default: !!str CSVTimeSequenceStepper
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeStepper/<type>/ConstantDT
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: dt
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Size of the time step
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: growth_factor
          required: No
          default: !!str 2
          cpp_type: double
          group_name: 
          description: |
            Maximum ratio of new to previous timestep sizes following a step that required the time step to be cut due to a failed solve.
        - name: reset_dt
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Use when restarting a calculation to force a change in dt.
        - name: type
          required: No
          default: !!str ConstantDT
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeStepper/<type>/DT2
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: dt
          required: No
          default: !!str 1
          cpp_type: double
          group_name: 
          description: |
            The initial time step size.
        - name: e_max
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Maximum acceptable error.
        - name: e_tol
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Target error tolerance.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: max_increase
          required: No
          default: !!str 1e+09
          cpp_type: double
          group_name: 
          description: |
            Maximum ratio that the time step can increase.
        - name: reset_dt
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Use when restarting a calculation to force a change in dt.
        - name: type
          required: No
          default: !!str DT2
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeStepper/<type>/ExodusTimeSequenceStepper
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: mesh
          required: Yes
          default: !!str 
          cpp_type: MeshFileName
          group_name: 
          description: |
            The name of the mesh file to extract the time sequence from (must be an exodusII file).
        - name: reset_dt
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Use when restarting a calculation to force a change in dt.
        - name: type
          required: No
          default: !!str ExodusTimeSequenceStepper
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeStepper/<type>/FunctionDT
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: function
          required: No
          default: !!str 
          cpp_type: FunctionName
          group_name: 
          description: |
            The name of the time-dependent function that prescribes the time step size.
        - name: growth_factor
          required: No
          default: !!str 1.79769e+308
          cpp_type: double
          group_name: 
          description: |
            Maximum ratio of new to previous timestep sizes following a step that required the time step to be cut due to a failed solve.
        - name: interpolate
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 
          description: |
            Whether or not to interpolate DT between times.  This is true by default for historical reasons.
        - name: min_dt
          required: No
          default: !!str 0
          cpp_type: double
          group_name: 
          description: |
            The minimal dt to take.
        - name: reset_dt
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Use when restarting a calculation to force a change in dt.
        - name: time_dt
          required: No
          default: !!str 
          cpp_type: std::vector<double, std::allocator<double> >
          group_name: 
          description: |
            The values of dt
        - name: time_t
          required: No
          default: !!str 
          cpp_type: std::vector<double, std::allocator<double> >
          group_name: 
          description: |
            The values of t
        - name: type
          required: No
          default: !!str FunctionDT
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeStepper/<type>/IterationAdaptiveDT
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: cutback_factor
          required: No
          default: !!str 0.5
          cpp_type: double
          group_name: 
          description: |
            Factor to apply to timestep if difficult convergence (if 'optimal_iterations' is specified) or if solution failed
        - name: dt
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            The default timestep size between solves
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: force_step_every_function_point
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Forces the timestepper to take a step that is consistent with points defined in the function
        - name: growth_factor
          required: No
          default: !!str 2
          cpp_type: double
          group_name: 
          description: |
            Factor to apply to timestep if easy convergence (if 'optimal_iterations' is specified) or if recovering from failed solve
        - name: iteration_window
          required: No
          default: !!str 
          cpp_type: int
          group_name: 
          description: |
            Attempt to grow/shrink timestep if the iteration count is below/above 'optimal_iterations plus/minus iteration_window' (default = optimal_iterations/5).
        - name: linear_iteration_ratio
          required: No
          default: !!str 
          cpp_type: unsigned int
          group_name: 
          description: |
            The ratio of linear to nonlinear iterations to determine target linear iterations and window for adaptive timestepping (default = 25)
        - name: max_function_change
          required: No
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            The absolute value of the maximum change in timestep_limiting_function over a timestep
        - name: optimal_iterations
          required: No
          default: !!str 
          cpp_type: int
          group_name: 
          description: |
            The target number of nonlinear iterations for adaptive timestepping
        - name: postprocessor_dtlim
          required: No
          default: !!str 
          cpp_type: PostprocessorName
          group_name: 
          description: |
            If specified, the postprocessor value is used as an upper limit for the current time step length
        - name: reject_large_step
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            If 'true', time steps that are too large compared to the ideal time step will be rejected and repeated
        - name: reject_large_step_threshold
          required: No
          default: !!str 0.1
          cpp_type: double
          group_name: 
          description: |
            Ratio between the the ideal time step size and the current time step size below which a time step will be rejected if 'reject_large_step' is 'true'
        - name: reset_dt
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Use when restarting a calculation to force a change in dt.
        - name: time_dt
          required: No
          default: !!str 
          cpp_type: std::vector<double, std::allocator<double> >
          group_name: 
          description: |
            The values of dt
        - name: time_t
          required: No
          default: !!str 
          cpp_type: std::vector<double, std::allocator<double> >
          group_name: 
          description: |
            The values of t
        - name: timestep_limiting_function
          required: No
          default: !!str 
          cpp_type: FunctionName
          group_name: 
          description: |
            A 'PiecewiseBase' type function used to control the timestep by limiting the change in the function over a timestep
        - name: type
          required: No
          default: !!str IterationAdaptiveDT
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeStepper/<type>/LogConstantDT
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: first_dt
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Initial time step (in absolute time)
        - name: growth_factor
          required: No
          default: !!str 2
          cpp_type: double
          group_name: 
          description: |
            Maximum ratio of new to previous timestep sizes following a step that required the time step to be cut due to a failed solve.
        - name: log_dt
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Time step in log10(time)
        - name: reset_dt
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Use when restarting a calculation to force a change in dt.
        - name: type
          required: No
          default: !!str LogConstantDT
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeStepper/<type>/PostprocessorDT
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: dt
          required: No
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Initial value of dt
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: factor
          required: No
          default: !!str 0
          cpp_type: double
          group_name: 
          description: |
            Add a factor to the supplied postprocessor value.
        - name: postprocessor
          required: Yes
          default: !!str 
          cpp_type: PostprocessorName
          group_name: 
          description: |
            The name of the postprocessor that computes the dt
        - name: reset_dt
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Use when restarting a calculation to force a change in dt.
        - name: scale
          required: No
          default: !!str 1
          cpp_type: double
          group_name: 
          description: |
            Multiple scale and supplied postprocessor value.
        - name: type
          required: No
          default: !!str PostprocessorDT
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeStepper/<type>/SolutionTimeAdaptiveDT
        description: |
          
        parameters:
        - name: adapt_log
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Output adaptive time step log
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: dt
          required: Yes
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            The timestep size between solves
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: initial_direction
          required: No
          default: !!str 1
          cpp_type: int
          group_name: 
          description: |
            Direction for the first step.  1 for up... -1 for down. 
        - name: percent_change
          required: No
          default: !!str 0.1
          cpp_type: double
          group_name: 
          description: |
            Percentage to change the timestep by.  Should be between 0 and 1
        - name: reset_dt
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Use when restarting a calculation to force a change in dt.
        - name: type
          required: No
          default: !!str SolutionTimeAdaptiveDT
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Executioner/TimeStepper/<type>/TimeSequenceStepper
        description: |
          
        parameters:
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: reset_dt
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Use when restarting a calculation to force a change in dt.
        - name: time_sequence
          required: Yes
          default: !!str 
          cpp_type: std::vector<double, std::allocator<double> >
          group_name: 
          description: |
            The values of t
        - name: type
          required: No
          default: !!str TimeSequenceStepper
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
- name: /Functions
  description: |
    
  parameters:
  subblocks:
  - name: /Functions/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /Functions/Axisymmetric2D3DSolutionFunction
    description: |
      
    parameters:
    - name: 2d_axis_point1
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Start point for axis of symmetry for the 2d model
    - name: 2d_axis_point2
      required: No
      default: !!str 0 1 0
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        End point for axis of symmetry for the 2d model
    - name: 3d_axis_point1
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Start point for axis of symmetry for the 3d model
    - name: 3d_axis_point2
      required: No
      default: !!str 0 1 0
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        End point for axis of symmetry for the 3d model
    - name: add_factor
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Add this value (b) to the solution (x): ax+b, where a is the 'scale_factor'
    - name: axial_dimension_ratio
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Ratio of the axial dimension in the 3d model to that in the 2d model. Optinally permits the 3d model to be larger than the 2d model in that dimension, and scales vector solutions in that direction by this factor.
    - name: component
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Component of the variable to be computed if it is a vector
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: from_variables
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The names of the variables in the file that are to be extracted, in x, y order if they are vector components
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor (a) to be applied to the solution (x): ax+b, where b is the 'add_factor'
    - name: solution
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The SolutionUserObject to extract data from.
    - name: type
      required: No
      default: !!str Axisymmetric2D3DSolutionFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Functions/BicubicSplineFunction
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: normal_component
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The component of the geometry that is normal to the spline x1/x2 values
    - name: type
      required: No
      default: !!str BicubicSplineFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: x1
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The first independent coordinate.
    - name: x2
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The second independent coordinate.
    - name: y
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The dependent values
    - name: yx1
      required: No
      default: !!str 1e30
      cpp_type: FunctionName
      group_name: 
      description: |
        The functional form of the derivative with respect to x1.
    - name: yx11
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The values of the derivative wrt x1 on the lower interpolation grid points.
    - name: yx1n
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The values of the derivative wrt x1 on the upper interpolation grid points.
    - name: yx2
      required: No
      default: !!str 1e30
      cpp_type: FunctionName
      group_name: 
      description: |
        The functional form of the derivative with respect to x2.
    - name: yx21
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The values of the derivative wrt x2 on the lower interpolation grid points.
    - name: yx2n
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The values of the derivative wrt x2 on the upper interpolation grid points.
    subblocks:
  - name: /Functions/CompositeFunction
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: functions
      required: No
      default: !!str 
      cpp_type: std::vector<FunctionName, std::allocator<FunctionName> >
      group_name: 
      description: |
        The functions to be multiplied together.
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor to be applied to the ordinate values
    - name: type
      required: No
      default: !!str CompositeFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Functions/ConstantFunction
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: type
      required: No
      default: !!str ConstantFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The constant value
    subblocks:
  - name: /Functions/ImageFunction
    description: |
      
    parameters:
    - name: component
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The image RGB-component to return, leaving this blank will result in a greyscale value for the image to be created. The component number is zero based, i.e. 0 returns the first (RED) component of the image.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: dimensions
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        x,y,z dimensions of the image (defaults to mesh dimensions)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of single image file to extract mesh parameters from.  If provided, a 2D mesh is created.
    - name: file_base
      required: No
      default: !!str 
      cpp_type: FileNameNoExtension
      group_name: 
      description: |
        Image file base to open, use this option when a stack of images must be read (ignored if 'file' is given)
    - name: file_range
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Range of images to analyze, used with 'file_base' (ignored if 'file' is given)
    - name: file_suffix
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Suffix of the file to open, e.g. 'png'
    - name: flip_x
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Flip'
      description: |
        Flip the image along the x-axis
    - name: flip_y
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Flip'
      description: |
        Flip the image along the y-axis
    - name: flip_z
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Flip'
      description: |
        Flip the image along the z-axis
    - name: lower_value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 'Threshold'
      description: |
        The value to set for data less than the threshold value
    - name: origin
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Origin of the image (defaults to mesh origin)
    - name: scale
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 'Rescale'
      description: |
        Multiplier to apply to all pixel values; occurs after shifting
    - name: shift
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 'Rescale'
      description: |
        Value to add to all pixels; occurs prior to scaling
    - name: threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Threshold'
      description: |
        The threshold value
    - name: type
      required: No
      default: !!str ImageFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: upper_value
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 'Threshold'
      description: |
        The value to set for data greater than the threshold value
    subblocks:
  - name: /Functions/LinearCombinationFunction
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: functions
      required: Yes
      default: !!str 
      cpp_type: std::vector<FunctionName, std::allocator<FunctionName> >
      group_name: 
      description: |
        This function will return Sum_over_i(w_i * functions_i)
    - name: type
      required: No
      default: !!str LinearCombinationFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: w
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        This function will return Sum_over_i(w_i * functions_i)
    subblocks:
  - name: /Functions/ParsedFunction
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: type
      required: No
      default: !!str ParsedFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: vals
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Constant numeric values or postprocessor names for vars.
    - name: value
      required: Yes
      default: !!str 
      cpp_type: FunctionExpression
      group_name: 
      description: |
        The user defined function.
    - name: vars
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The constant variables (excluding t,x,y,z) in the forcing function.
    subblocks:
  - name: /Functions/ParsedGradFunction
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: grad_x
      required: No
      default: !!str 0
      cpp_type: std::string
      group_name: 
      description: |
        Partial with respect to x.
    - name: grad_y
      required: No
      default: !!str 0
      cpp_type: std::string
      group_name: 
      description: |
        Partial with respect to y.
    - name: grad_z
      required: No
      default: !!str 0
      cpp_type: std::string
      group_name: 
      description: |
        Partial with respect to z.
    - name: type
      required: No
      default: !!str ParsedGradFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: vals
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Constant numeric values or postprocessor names for vars.
    - name: value
      required: No
      default: !!str 0
      cpp_type: std::string
      group_name: 
      description: |
        User defined function.
    - name: vars
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The constant variables (excluding t,x,y,z) in the forcing function.
    subblocks:
  - name: /Functions/ParsedVectorFunction
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: type
      required: No
      default: !!str ParsedVectorFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: vals
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Constant numeric values or postprocessor names for vars.
    - name: value_x
      required: No
      default: !!str 0
      cpp_type: std::string
      group_name: 
      description: |
        x-component of function.
    - name: value_y
      required: No
      default: !!str 0
      cpp_type: std::string
      group_name: 
      description: |
        y-component of function.
    - name: value_z
      required: No
      default: !!str 0
      cpp_type: std::string
      group_name: 
      description: |
        z-component of function.
    - name: vars
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The constant variables (excluding t,x,y,z) in the forcing function.
    subblocks:
  - name: /Functions/PiecewiseBilinear
    description: |
      
    parameters:
    - name: axis
      required: No
      default: !!str -1
      cpp_type: int
      group_name: 
      description: |
        The axis used (0, 1, or 2 for x, y, or z).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: data_file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File holding csv data for use with PiecewiseBilinear
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: radial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true if you want to interpolate along a radius rather that along a specific axis, and note that you have to define xaxis and yaxis in the input file
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor to be applied to the axis, yaxis, or xaxis values
    - name: type
      required: No
      default: !!str PiecewiseBilinear
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: x
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The x abscissa values
    - name: xaxis
      required: No
      default: !!str -1
      cpp_type: int
      group_name: 
      description: |
        The coordinate used for x-axis data (0, 1, or 2 for x, y, or z).
    - name: y
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The y abscissa values
    - name: yaxis
      required: No
      default: !!str -1
      cpp_type: int
      group_name: 
      description: |
        The coordinate used for y-axis data (0, 1, or 2 for x, y, or z).
    - name: z
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The ordinate values
    subblocks:
  - name: /Functions/PiecewiseConstant
    description: |
      
    parameters:
    - name: axis
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z 0 1 2
      description: |
        The axis used (x, y, or z) if this is to be a function of position
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: data_file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File holding csv data for use with Piecewise
    - name: direction
      required: No
      default: !!str left
      cpp_type: MooseEnum
      group_name: 
      options: left right
      description: |
        Direction to look to find value: left right
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: format
      required: No
      default: !!str rows
      cpp_type: MooseEnum
      group_name: 
      options: columns rows
      description: |
        Format of csv data file that is in either in columns or rows
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor to be applied to the ordinate values
    - name: type
      required: No
      default: !!str PiecewiseConstant
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: x
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The abscissa values
    - name: x_index_in_file
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The abscissa index in the data file
    - name: xy_data
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        All function data, supplied in abscissa, ordinate pairs
    - name: xy_in_file_only
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        If the data file only contains abscissa and ordinate data
    - name: y
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The ordinate values
    - name: y_index_in_file
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        The ordinate index in the data file
    subblocks:
  - name: /Functions/PiecewiseLinear
    description: |
      
    parameters:
    - name: axis
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z 0 1 2
      description: |
        The axis used (x, y, or z) if this is to be a function of position
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: data_file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File holding csv data for use with Piecewise
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: format
      required: No
      default: !!str rows
      cpp_type: MooseEnum
      group_name: 
      options: columns rows
      description: |
        Format of csv data file that is in either in columns or rows
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor to be applied to the ordinate values
    - name: type
      required: No
      default: !!str PiecewiseLinear
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: x
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The abscissa values
    - name: x_index_in_file
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The abscissa index in the data file
    - name: xy_data
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        All function data, supplied in abscissa, ordinate pairs
    - name: xy_in_file_only
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        If the data file only contains abscissa and ordinate data
    - name: y
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The ordinate values
    - name: y_index_in_file
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        The ordinate index in the data file
    subblocks:
  - name: /Functions/PiecewiseMulticonstant
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: data_file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File holding data for use with PiecewiseMultiInterpolation.  Format: any empty line and any line beginning with # are ignored, all other lines are assumed to contain relevant information.  The file must begin with specification of the grid.  This is done through lines containing the keywords: AXIS X; AXIS Y; AXIS Z; or AXIS T.  Immediately following the keyword line must be a space-separated line of real numbers which define the grid along the specified axis.  These data must be monotonically increasing.  After all the axes and their grids have been specified, there must be a line that is DATA.  Following that line, function values are given in the correct order (they may be on individual lines, or be space-separated on a number of lines).  When the function is evaluated, f[i,j,k,l] corresponds to the i + j*Ni + k*Ni*Nj + l*Ni*Nj*Nk data value.  Here i>=0 corresponding to the index along the first AXIS, j>=0 corresponding to the index along the second AXIS, etc, and Ni = number of grid points along the first AXIS, etc.
    - name: direction
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: left right
      description: |
        Direction to look to find value for each interpolation dimension.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: type
      required: No
      default: !!str PiecewiseMulticonstant
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Functions/PiecewiseMultilinear
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: data_file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File holding data for use with PiecewiseMultiInterpolation.  Format: any empty line and any line beginning with # are ignored, all other lines are assumed to contain relevant information.  The file must begin with specification of the grid.  This is done through lines containing the keywords: AXIS X; AXIS Y; AXIS Z; or AXIS T.  Immediately following the keyword line must be a space-separated line of real numbers which define the grid along the specified axis.  These data must be monotonically increasing.  After all the axes and their grids have been specified, there must be a line that is DATA.  Following that line, function values are given in the correct order (they may be on individual lines, or be space-separated on a number of lines).  When the function is evaluated, f[i,j,k,l] corresponds to the i + j*Ni + k*Ni*Nj + l*Ni*Nj*Nk data value.  Here i>=0 corresponding to the index along the first AXIS, j>=0 corresponding to the index along the second AXIS, etc, and Ni = number of grid points along the first AXIS, etc.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: type
      required: No
      default: !!str PiecewiseMultilinear
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Functions/SolutionFunction
    description: |
      
    parameters:
    - name: add_factor
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Add this value (b) to the solution (x): ax+b, where a is the 'scale_factor'
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: from_variable
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the variable in the file that is to be extracted
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor (a) to be applied to the solution (x): ax+b, where b is the 'add_factor'
    - name: solution
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The SolutionUserObject to extract data from.
    - name: type
      required: No
      default: !!str SolutionFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Functions/SplineFunction
    description: |
      
    parameters:
    - name: component
      required: No
      default: !!str x
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The component of the geometry point to interpolate with
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: type
      required: No
      default: !!str SplineFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: x
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The abscissa values
    - name: y
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The ordinate values
    - name: yp1
      required: No
      default: !!str 1e+30
      cpp_type: double
      group_name: 
      description: |
        The value of the first derivative of the interpolating function at point 1
    - name: ypn
      required: No
      default: !!str 1e+30
      cpp_type: double
      group_name: 
      description: |
        The value of the first derivative of the interpolating function at point n
    subblocks:
  - name: /Functions/TestSetupPostprocessorDataActionFunction
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        A postprocessor to test against
    - name: type
      required: No
      default: !!str TestSetupPostprocessorDataActionFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Functions/VectorPostprocessorFunction
    description: |
      
    parameters:
    - name: argument_column
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        VectorPostprocessor column tabulating the abscissa of the sampled function
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Component of the function evaluation point used to sample the VectorPostprocessor
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: type
      required: No
      default: !!str VectorPostprocessorFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: value_column
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        VectorPostprocessor column tabulating the ordinate (function values) of the sampled function
    - name: vectorpostprocessor_name
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The name of the PointValueSampler that you want to use
    subblocks:
- name: /GlobalParams
  description: |
    
  parameters:
  subblocks:
- name: /ICs
  description: |
    
  parameters:
  subblocks:
  - name: /ICs/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /ICs/BimodalInverseSuperellipsoidsIC
    description: |
      
    parameters:
    - name: as
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Semiaxis a for each superellipsoid
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bs
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Semiaxis b for each superellipsoid
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cs
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Semiaxis c for each superellipsoid
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the superellipsoid
    - name: large_spac
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        minimum spacing between large and small particles, measured from closest edge to closest edge
    - name: nestedvalue
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value for nested particles inside the superellipsoid in inverse configuration
    - name: npart
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of random (small) particles to place
    - name: ns
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Exponent n for each superellipsoid
    - name: numtries
      required: No
      default: !!str 1000
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of tries to place the random particles
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the superellipsoid
    - name: rand_seed
      required: No
      default: !!str 12345
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: size_variation
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Plus or minus fraction of random variation in the semiaxes for uniform, standard deviation for normal
    - name: size_variation_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: uniform normal none
      description: |
        Type of distribution that random semiaxes will follow
    - name: small_a
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Mean semiaxis a value for the randomly placed (small) superellipsoids
    - name: small_b
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Mean semiaxis b value for the randomly placed (small) superellipsoids
    - name: small_c
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Mean semiaxis c value for the randomly placed (small) superellipsoids
    - name: small_n
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Exponent n for the randomly placed (small) superellipsoids
    - name: small_spac
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        minimum spacing between small particles, measured from closest edge to closest edge
    - name: type
      required: No
      default: !!str BimodalInverseSuperellipsoidsIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: x_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The x-coordinate for each superellipsoid center
    - name: y_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The y-coordinate for each superellipsoid center
    - name: z_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The z-coordinate for each superellipsoid center
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
    subblocks:
  - name: /ICs/BimodalSuperellipsoidsIC
    description: |
      
    parameters:
    - name: as
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Semiaxis a for each superellipsoid
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bs
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Semiaxis b for each superellipsoid
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cs
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Semiaxis c for each superellipsoid
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the superellipsoid
    - name: large_spac
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        minimum spacing between large and small particles, measured from closest edge to closest edge
    - name: nestedvalue
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value for nested particles inside the superellipsoid in inverse configuration
    - name: npart
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of random (small) particles to place
    - name: ns
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Exponent n for each superellipsoid
    - name: numtries
      required: No
      default: !!str 1000
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of tries to place the random particles
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the superellipsoid
    - name: rand_seed
      required: No
      default: !!str 12345
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: size_variation
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Plus or minus fraction of random variation in the semiaxes for uniform, standard deviation for normal
    - name: size_variation_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: uniform normal none
      description: |
        Type of distribution that random semiaxes will follow
    - name: small_a
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Mean semiaxis a value for the randomly placed (small) superellipsoids
    - name: small_b
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Mean semiaxis b value for the randomly placed (small) superellipsoids
    - name: small_c
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Mean semiaxis c value for the randomly placed (small) superellipsoids
    - name: small_n
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Exponent n for the randomly placed (small) superellipsoids
    - name: small_spac
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        minimum spacing between small particles, measured from closest edge to closest edge
    - name: type
      required: No
      default: !!str BimodalSuperellipsoidsIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: x_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The x-coordinate for each superellipsoid center
    - name: y_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The y-coordinate for each superellipsoid center
    - name: z_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The z-coordinate for each superellipsoid center
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
    subblocks:
  - name: /ICs/BoundingBoxIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: inside
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The value of the variable inside the box
    - name: outside
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The value of the variable outside the box
    - name: type
      required: No
      default: !!str BoundingBoxIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: x1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the lower left-hand corner of the box
    - name: x2
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the upper right-hand corner of the box
    - name: y1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the lower left-hand corner of the box
    - name: y2
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the upper right-hand corner of the box
    - name: z1
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The z coordinate of the lower left-hand corner of the box
    - name: z2
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The z coordinate of the upper right-hand corner of the box
    subblocks:
  - name: /ICs/ClosePackIC
    description: |
      
    parameters:
    - name: 3D_spheres
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        in 3D, whether the objects are spheres or columns
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the circle
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the circle
    - name: profile
      required: No
      default: !!str COS
      cpp_type: MooseEnum
      group_name: 
      options: COS TANH
      description: |
        Functional dependence for the interface profile
    - name: radius
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The radius of a circle
    - name: rand_seed
      required: No
      default: !!str 12345
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: type
      required: No
      default: !!str ClosePackIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
    subblocks:
  - name: /ICs/ConstantIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: type
      required: No
      default: !!str ConstantIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: value
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value to be set in IC
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/CrossIC
    description: |
      
    parameters:
    - name: amplitude
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The amplitude
    - name: average
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The average value
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: buffer
      required: No
      default: !!str 0.03125
      cpp_type: double
      group_name: 
      description: |
        A small area between the max value and the interface
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: interface
      required: No
      default: !!str 0.03125
      cpp_type: double
      group_name: 
      description: |
        The interface width
    - name: length
      required: No
      default: !!str 0.75
      cpp_type: double
      group_name: 
      description: |
        The length
    - name: type
      required: No
      default: !!str CrossIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: width
      required: No
      default: !!str 0.125
      cpp_type: double
      group_name: 
      description: |
        The width
    - name: x1
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the lower left-hand corner of the box
    - name: x2
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the upper right-hand corner of the box
    - name: y1
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the lower left-hand corner of the box
    - name: y2
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the upper right-hand corner of the box
    subblocks:
  - name: /ICs/FunctionIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The initial condition function.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: type
      required: No
      default: !!str FunctionIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/FunctionScalarIC
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: std::vector<FunctionName, std::allocator<FunctionName> >
      group_name: 
      description: |
        The initial condition function.
    - name: type
      required: No
      default: !!str FunctionScalarIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/LatticeSmoothCircleIC
    description: |
      
    parameters:
    - name: 3D_spheres
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        in 3D, whether the objects are spheres or columns
    - name: Rnd_variation
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Variation from central lattice position
    - name: avoid_bounds
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Don't place any bubbles on the simulation cell boundaries
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: circles_per_side
      required: Yes
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Vector containing the number of bubbles along each side
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the circle
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the circle
    - name: pos_variation
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Variation from central lattice position
    - name: profile
      required: No
      default: !!str COS
      cpp_type: MooseEnum
      group_name: 
      options: COS TANH
      description: |
        Functional dependence for the interface profile
    - name: radius
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Mean radius value for the circels
    - name: radius_variation
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Plus or minus fraction of random variation in the bubble radius
    - name: radius_variation_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: uniform normal none
      description: |
        Type of distribution that random circle radii will follow
    - name: rand_seed
      required: No
      default: !!str 2000
      cpp_type: unsigned int
      group_name: 
      description: |
        random seed
    - name: type
      required: No
      default: !!str LatticeSmoothCircleIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
    subblocks:
  - name: /ICs/MultiBoundingBoxIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: corners
      required: Yes
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        The corner coordinates boxes
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: inside
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The value of the variable inside each box (one value per box or a single value for all boxes)
    - name: opposite_corners
      required: Yes
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        The coordinates of the opposite corners of the boxes
    - name: outside
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The value of the variable outside the box
    - name: type
      required: No
      default: !!str MultiBoundingBoxIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/MultiSmoothCircleIC
    description: |
      
    parameters:
    - name: 3D_spheres
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        in 3D, whether the objects are spheres or columns
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bubspac
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        minimum spacing of bubbles, measured from center to center
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the circle
    - name: numbub
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of bubbles to place
    - name: numtries
      required: No
      default: !!str 1000
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of tries
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the circle
    - name: profile
      required: No
      default: !!str COS
      cpp_type: MooseEnum
      group_name: 
      options: COS TANH
      description: |
        Functional dependence for the interface profile
    - name: radius
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Mean radius value for the circles
    - name: radius_variation
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Plus or minus fraction of random variation in the bubble radius for uniform, standard deviation for normal
    - name: radius_variation_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: uniform normal none
      description: |
        Type of distribution that random circle radii will follow
    - name: rand_seed
      required: No
      default: !!str 12345
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: type
      required: No
      default: !!str MultiSmoothCircleIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
    subblocks:
  - name: /ICs/MultiSmoothSuperellipsoidIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bubspac
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of the minimum spacing of bubbles of one type, measured from center to center
    - name: check_extremes
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Check all Superellipsoid extremes (center +- each semiaxis) for overlap, must have prevent_overlap set to True.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: exponent
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of exponents for each superellipsoid, n=2 is a normal ellipse
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the superellipsoid
    - name: max_num_tries
      required: No
      default: !!str 1000
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of tries
    - name: nestedvalue
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value for nested particles inside the superellipsoid in inverse configuration
    - name: numbub
      required: Yes
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Vector of the number of bubbles to place
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the superellipsoid
    - name: prevent_overlap
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Check all Superellipsoid centers for overlap with other Superellipsoids.
    - name: rand_seed
      required: No
      default: !!str 12345
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: semiaxis_a
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of mean semiaxis values in the x direction for the ellipse
    - name: semiaxis_a_variation
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of plus or minus fractions of random variation in the bubble semiaxis in the x direction for uniform, standard deviation for normal
    - name: semiaxis_b
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of mean semiaxis values in the y direction for the ellipse
    - name: semiaxis_b_variation
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of plus or minus fractions of random variation in the bubble semiaxis in the y direction for uniform, standard deviation for normal
    - name: semiaxis_c
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of mean semiaxis values in the z direction for the ellipse, must be greater than 0 even if 2D.
    - name: semiaxis_c_variation
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of plus or minus fractions of random variation in the bubble semiaxis in the z direction for uniform, standard deviation for normal. Must be set to 0 if 2D.
    - name: semiaxis_variation_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: uniform normal none
      description: |
        Type of distribution that random superellipsoid semiaxes will follow
    - name: type
      required: No
      default: !!str MultiSmoothSuperellipsoidIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: vary_axes_independently
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        If true the length of each semiaxis is randomly chosen within the provided parameters, if false then one random number is generated and applied to all semiaxes.
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
    subblocks:
  - name: /ICs/PFCFreezingIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crystal_structure
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: FCC BCC
      description: |
        The type of crystal structure
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: inside
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Value inside sinusoids
    - name: lc
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The lattice constant off the crystal structure
    - name: max
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Upper bound of the randomly generated values
    - name: min
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Lower bound of the randomly generated values
    - name: outside
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Value outside sinusoids
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: type
      required: No
      default: !!str PFCFreezingIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: x1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the lower left-hand corner of the frozen box
    - name: x2
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the upper right-hand corner of the box
    - name: y1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the lower left-hand corner of the frozen box
    - name: y2
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the upper right-hand corner of the box
    - name: z1
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The z coordinate of the lower left-hand corner of the box
    - name: z2
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The z coordinate of the upper right-hand corner of the box
    subblocks:
  - name: /ICs/PolycrystalColoringIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: op_index
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index for the current order parameter
    - name: polycrystal_ic_uo
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        TODO
    - name: type
      required: No
      default: !!str PolycrystalColoringIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/PolycrystalICs
    description: |
      
    parameters:
    subblocks:
    - name: /ICs/PolycrystalICs/BicrystalBoundingBoxIC
      description: |
        
      parameters:
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: op_num
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of grains, should be 2
      - name: var_name_base
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          specifies the base name of the variables
      - name: x1
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The x coordinate of the lower left-hand corner of the box
      - name: x2
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The x coordinate of the upper right-hand corner of the box
      - name: y1
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The y coordinate of the lower left-hand corner of the box
      - name: y2
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The y coordinate of the upper right-hand corner of the box
      - name: z1
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The z coordinate of the lower left-hand corner of the box
      - name: z2
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The z coordinate of the upper right-hand corner of the box
      subblocks:
    - name: /ICs/PolycrystalICs/BicrystalCircleGrainIC
      description: |
        
      parameters:
      - name: 3D_sphere
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          in 3D, whether the smaller grain is a spheres or columnar grain
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: int_width
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The interfacial width of the void surface.  Defaults to sharp interface
      - name: op_num
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of grains, should be 2
      - name: radius
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Void radius
      - name: var_name_base
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          specifies the base name of the variables
      - name: x
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The x coordinate of the circle grain center
      - name: y
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The y coordinate of the circle grain center
      - name: z
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The z coordinate of the circle grain center
      subblocks:
    - name: /ICs/PolycrystalICs/PolycrystalColoringIC
      description: |
        
      parameters:
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: op_num
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          number of order parameters to create
      - name: polycrystal_ic_uo
        required: Yes
        default: !!str 
        cpp_type: UserObjectName
        group_name: 
        description: |
          Optional: TODO
      - name: var_name_base
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          specifies the base name of the variables
      subblocks:
    - name: /ICs/PolycrystalICs/PolycrystalRandomIC
      description: |
        
      parameters:
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: op_num
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          number of order parameters to create
      - name: random_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: continuous discrete
        description: |
          The type of random polycrystal initial condition. Whether one order parameter is chosen to be 1 at each node or if each order parameter continuously varies from 0 to 1
      - name: var_name_base
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          specifies the base name of the variables
      subblocks:
    - name: /ICs/PolycrystalICs/PolycrystalVoronoiVoidIC
      description: |
        
      parameters:
      - name: 3D_spheres
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          in 3D, whether the objects are spheres or columns
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          The list of block ids (SubdomainID) that this object will be applied
      - name: boundary
        required: No
        default: !!str 
        cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
        group_name: 
        description: |
          The list of boundary IDs from the mesh where this boundary condition applies
      - name: bubspac
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          minimum spacing of bubbles, measured from center to center
      - name: columnar_3D
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          3D microstructure will be columnar in the z-direction?
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: file_name
        required: No
        default: !!str 
        cpp_type: FileName
        group_name: 
        description: |
          File containing grain centroids, if file_name is provided, the centroids from the file will be used.
      - name: grain_num
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of grains being represented by the order parameters
      - name: ignore_uo_dependency
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          When set to true, a UserObject retrieved by this IC will not be executed before the this IC
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: int_width
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The interfacial width of the void surface.  Defaults to sharp interface
      - name: invalue
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The variable value inside the circle
      - name: numbub
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of bubbles to place
      - name: numtries
        required: No
        default: !!str 1000
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of tries
      - name: op_num
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of order parameters
      - name: outvalue
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The variable value outside the circle
      - name: profile
        required: No
        default: !!str COS
        cpp_type: MooseEnum
        group_name: 
        options: COS TANH
        description: |
          Functional dependence for the interface profile
      - name: radius
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Mean radius value for the circles
      - name: radius_variation
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Plus or minus fraction of random variation in the bubble radius for uniform, standard deviation for normal
      - name: radius_variation_type
        required: No
        default: !!str none
        cpp_type: MooseEnum
        group_name: 
        options: uniform normal none
        description: |
          Type of distribution that random circle radii will follow
      - name: rand_seed
        required: No
        default: !!str 12444
        cpp_type: unsigned int
        group_name: 
        description: |
          The random seed
      - name: var_name_base
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          specifies the base name of the variables
      - name: zero_gradient
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
      subblocks:
    - name: /ICs/PolycrystalICs/Tricrystal2CircleGrainsIC
      description: |
        
      parameters:
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: op_num
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          number of order parameters to create
      - name: var_name_base
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          specifies the base name of the variables
      subblocks:
  - name: /ICs/PolycrystalRandomIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: op_index
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index for the current order parameter
    - name: op_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of order parameters
    - name: random_type
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Type of random grain structure (formerly called 'typ')
    - name: type
      required: No
      default: !!str PolycrystalRandomIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/PolycrystalVoronoiVoidIC
    description: |
      
    parameters:
    - name: 3D_spheres
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        in 3D, whether the objects are spheres or columns
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bubspac
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        minimum spacing of bubbles, measured from center to center
    - name: columnar_3D
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        3D microstructure will be columnar in the z-direction?
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File containing grain centroids, if file_name is provided, the centroids from the file will be used.
    - name: grain_num
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of grains being represented by the order parameters
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the circle
    - name: numbub
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of bubbles to place
    - name: numtries
      required: No
      default: !!str 1000
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of tries
    - name: op_index
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The index for the current order parameter, not needed if structure_type = voids
    - name: op_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of order parameters
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the circle
    - name: profile
      required: No
      default: !!str COS
      cpp_type: MooseEnum
      group_name: 
      options: COS TANH
      description: |
        Functional dependence for the interface profile
    - name: radius
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Mean radius value for the circles
    - name: radius_variation
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Plus or minus fraction of random variation in the bubble radius for uniform, standard deviation for normal
    - name: radius_variation_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: uniform normal none
      description: |
        Type of distribution that random circle radii will follow
    - name: rand_seed
      required: No
      default: !!str 12444
      cpp_type: unsigned int
      group_name: 
      description: |
        The random seed
    - name: structure_type
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: grains voids
      description: |
        Which structure type is being initialized, grains or voids
    - name: type
      required: No
      default: !!str PolycrystalVoronoiVoidIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
    subblocks:
  - name: /ICs/RampIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: type
      required: No
      default: !!str RampIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: value_left
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value on left (xmin) boundary.
    - name: value_right
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value on right (xmax) boundary.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/RandomIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: distribution
      required: No
      default: !!str 
      cpp_type: DistributionName
      group_name: 
      description: |
        Name of distribution defining distribution of randomly generated values
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: legacy_generator
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Determines whether or not the legacy generator (deprecated) should be used.
    - name: max
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Upper bound of uniformly distributed randomly generated values
    - name: min
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Lower bound of uniformly distributed randomly generated values
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: type
      required: No
      default: !!str RandomIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/ReconPhaseVarIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: ebsd_reader
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The EBSDReader object holding the EBSD data
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: phase
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        EBSD phase number this variable is to represent
    - name: type
      required: No
      default: !!str ReconPhaseVarIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/RndBoundingBoxIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: mn_invalue
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The min value of the variable invalue the box
    - name: mn_outvalue
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The min value of the variable outvalue the box
    - name: mx_invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The max value of the variable invalue the box
    - name: mx_outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The max value of the variable outvalue the box
    - name: type
      required: No
      default: !!str RndBoundingBoxIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: x1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the lower left-hand corner of the box
    - name: x2
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the upper right-hand corner of the box
    - name: y1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the lower left-hand corner of the box
    - name: y2
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the upper right-hand corner of the box
    - name: z1
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The z coordinate of the lower left-hand corner of the box
    - name: z2
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The z coordinate of the upper right-hand corner of the box
    subblocks:
  - name: /ICs/RndSmoothCircleIC
    description: |
      
    parameters:
    - name: 3D_spheres
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        in 3D, whether the objects are spheres or columns
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the circle
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the circle
    - name: profile
      required: No
      default: !!str COS
      cpp_type: MooseEnum
      group_name: 
      options: COS TANH
      description: |
        Functional dependence for the interface profile
    - name: radius
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The radius of a circle
    - name: rand_seed
      required: No
      default: !!str 12345
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: type
      required: No
      default: !!str RndSmoothCircleIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: variation_invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Plus or minus this amount on the invalue
    - name: variation_outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Plus or minus this amount on the outvalue
    - name: x1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the circle center
    - name: y1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the circle center
    - name: z1
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The z coordinate of the circle center
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
    subblocks:
  - name: /ICs/ScalarComponentIC
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: type
      required: No
      default: !!str ScalarComponentIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: values
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Initial values to initialize the scalar variable.
    - name: variable
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/ScalarConstantIC
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: type
      required: No
      default: !!str ScalarConstantIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        
    - name: variable
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/SmoothCircleFromFileIC
    description: |
      
    parameters:
    - name: 3D_spheres
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        in 3D, whether the objects are spheres or columns
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: file_name
      required: Yes
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File containing circle centers and radii
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the circle
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the circle
    - name: profile
      required: No
      default: !!str COS
      cpp_type: MooseEnum
      group_name: 
      options: COS TANH
      description: |
        Functional dependence for the interface profile
    - name: rand_seed
      required: No
      default: !!str 12345
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: type
      required: No
      default: !!str SmoothCircleFromFileIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
    subblocks:
  - name: /ICs/SmoothCircleIC
    description: |
      
    parameters:
    - name: 3D_spheres
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        in 3D, whether the objects are spheres or columns
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the circle
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the circle
    - name: profile
      required: No
      default: !!str COS
      cpp_type: MooseEnum
      group_name: 
      options: COS TANH
      description: |
        Functional dependence for the interface profile
    - name: radius
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The radius of a circle
    - name: rand_seed
      required: No
      default: !!str 12345
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: type
      required: No
      default: !!str SmoothCircleIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: x1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the circle center
    - name: y1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the circle center
    - name: z1
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The z coordinate of the circle center
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
    subblocks:
  - name: /ICs/SmoothSuperellipsoidIC
    description: |
      
    parameters:
    - name: a
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Semiaxis a of the superellipsoid
    - name: b
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Semiaxis b of the superellipsoid
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Semiaxis c of the superellipsoid
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the superellipsoid
    - name: n
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Exponent n of the superellipsoid
    - name: nestedvalue
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value for nested particles inside the superellipsoid in inverse configuration
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the superellipsoid
    - name: rand_seed
      required: No
      default: !!str 12345
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: type
      required: No
      default: !!str SmoothSuperellipsoidIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: x1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the superellipsoid center
    - name: y1
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the superellipsoid center
    - name: z1
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The z coordinate of the superellipsoid center
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
    subblocks:
  - name: /ICs/SpecifiedSmoothCircleIC
    description: |
      
    parameters:
    - name: 3D_spheres
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        in 3D, whether the objects are spheres or columns
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the circle
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the circle
    - name: profile
      required: No
      default: !!str COS
      cpp_type: MooseEnum
      group_name: 
      options: COS TANH
      description: |
        Functional dependence for the interface profile
    - name: radii
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The radius for each circle
    - name: rand_seed
      required: No
      default: !!str 12345
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: type
      required: No
      default: !!str SpecifiedSmoothCircleIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: x_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The x-coordinate for each circle center
    - name: y_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The y-coordinate for each circle center
    - name: z_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The z-coordinate for each circle center
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
    subblocks:
  - name: /ICs/SpecifiedSmoothSuperellipsoidIC
    description: |
      
    parameters:
    - name: as
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Semiaxis a for each superellipsoid
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bs
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Semiaxis b for each superellipsoid
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cs
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Semiaxis c for each superellipsoid
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of the void surface.  Defaults to sharp interface
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the superellipsoid
    - name: nestedvalue
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value for nested particles inside the superellipsoid in inverse configuration
    - name: ns
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Exponent n for each superellipsoid
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the superellipsoid
    - name: rand_seed
      required: No
      default: !!str 12345
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: type
      required: No
      default: !!str SpecifiedSmoothSuperellipsoidIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: x_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The x-coordinate for each superellipsoid center
    - name: y_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The y-coordinate for each superellipsoid center
    - name: z_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The z-coordinate for each superellipsoid center
    - name: zero_gradient
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
    subblocks:
  - name: /ICs/ThumbIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: height
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The z coordinate of the circle center
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: invalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value inside the circle
    - name: outvalue
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The variable value outside the circle
    - name: type
      required: No
      default: !!str ThumbIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: width
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The y coordinate of the circle center
    - name: xcoord
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The x coordinate of the circle center
    subblocks:
  - name: /ICs/Tricrystal2CircleGrainsIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: op_index
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Index for the current grain order parameter
    - name: op_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of grain order parameters
    - name: type
      required: No
      default: !!str Tricrystal2CircleGrainsIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/TricrystalTripleJunctionIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: junction
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The point where the triple junction is located. Default is the center of the mesh
    - name: op_index
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Index for the current grain order parameter
    - name: op_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of grain order parameters
    - name: theta1
      required: No
      default: !!str 135
      cpp_type: double
      group_name: 
      description: |
        Angle of first grain at triple junction in degrees
    - name: theta2
      required: No
      default: !!str 135
      cpp_type: double
      group_name: 
      description: |
        Angle of second grain at triple junction in degrees
    - name: type
      required: No
      default: !!str TricrystalTripleJunctionIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    subblocks:
  - name: /ICs/VectorConstantIC
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ignore_uo_dependency
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        When set to true, a UserObject retrieved by this IC will not be executed before the this IC
    - name: type
      required: No
      default: !!str VectorConstantIC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable this initial condition is supposed to provide values for.
    - name: x_value
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The x value to be set in IC
    - name: y_value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The y value to be set in IC
    - name: z_value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The z value to be set in IC
    subblocks:
- name: /InterfaceKernels
  description: |
    
  parameters:
  subblocks:
  - name: /InterfaceKernels/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /InterfaceKernels/EqualGradientLagrangeInterface
    description: |
      
    parameters:
    - name: _moose_base
      required: No
      default: !!str InterfaceKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Gradient component to constrain
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: diag_save_in_var_side
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: m s
      description: |
        This parameter must exist if diag_save_in variables are specified and must have the same length as diag_save_in. This vector specifies whether the corresponding aux_var should save-in jacobian contributions from the master ('m') or slave side ('s').
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: lambda
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The gradient constrained variable on this side of the interface.
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: neighbor_var
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable on the other side of the interface.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: save_in_var_side
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: m s
      description: |
        This parameter must exist if save_in variables are specified and must have the same length as save_in. This vector specifies whether the corresponding aux_var should save-in residual contributions from the master ('m') or slave side ('s').
    - name: type
      required: No
      default: !!str EqualGradientLagrangeInterface
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /InterfaceKernels/EqualGradientLagrangeMultiplier
    description: |
      
    parameters:
    - name: _moose_base
      required: No
      default: !!str InterfaceKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Gradient component to constrain
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: diag_save_in_var_side
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: m s
      description: |
        This parameter must exist if diag_save_in variables are specified and must have the same length as diag_save_in. This vector specifies whether the corresponding aux_var should save-in jacobian contributions from the master ('m') or slave side ('s').
    - name: element_var
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The gradient constrained variable on this side of the interface.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: jacobian_fill
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Compensate on diagonal Jacobian fill term when using a NullKernel on the Lagrange multiplier variable
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: neighbor_var
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable on the other side of the interface.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: save_in_var_side
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: m s
      description: |
        This parameter must exist if save_in variables are specified and must have the same length as save_in. This vector specifies whether the corresponding aux_var should save-in residual contributions from the master ('m') or slave side ('s').
    - name: type
      required: No
      default: !!str EqualGradientLagrangeMultiplier
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /InterfaceKernels/InterfaceDiffusionBoundaryTerm
    description: |
      
    parameters:
    - name: D
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Diffusion coefficient
    - name: D_neighbor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Neighbor variable diffusion coefficient
    - name: _moose_base
      required: No
      default: !!str InterfaceKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: diag_save_in_var_side
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: m s
      description: |
        This parameter must exist if diag_save_in variables are specified and must have the same length as diag_save_in. This vector specifies whether the corresponding aux_var should save-in jacobian contributions from the master ('m') or slave side ('s').
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: neighbor_var
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable on the other side of the interface.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: save_in_var_side
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: m s
      description: |
        This parameter must exist if save_in variables are specified and must have the same length as save_in. This vector specifies whether the corresponding aux_var should save-in residual contributions from the master ('m') or slave side ('s').
    - name: type
      required: No
      default: !!str InterfaceDiffusionBoundaryTerm
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /InterfaceKernels/InterfaceDiffusionFluxMatch
    description: |
      
    parameters:
    - name: D
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Diffusion coefficient
    - name: D_neighbor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Neighbor variable diffusion coefficient
    - name: _moose_base
      required: No
      default: !!str InterfaceKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: diag_save_in_var_side
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: m s
      description: |
        This parameter must exist if diag_save_in variables are specified and must have the same length as diag_save_in. This vector specifies whether the corresponding aux_var should save-in jacobian contributions from the master ('m') or slave side ('s').
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: neighbor_var
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable on the other side of the interface.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: save_in_var_side
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: m s
      description: |
        This parameter must exist if save_in variables are specified and must have the same length as save_in. This vector specifies whether the corresponding aux_var should save-in residual contributions from the master ('m') or slave side ('s').
    - name: type
      required: No
      default: !!str InterfaceDiffusionFluxMatch
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
- name: /Kernels
  description: |
    
  parameters:
  subblocks:
  - name: /Kernels/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /Kernels/ACBarrierFunction
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: gamma
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The interface profile coefficient to use with the kernel
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACBarrierFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled order parameter names for other order parameters
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACGBPoly
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Other species concentration
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: en_ratio
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Ratio of surface energy to GB energy
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACGBPoly
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACGrGrElasticDrivingForce
    description: |
      
    parameters:
    - name: D_tensor_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The elastic tensor derivative for the specific order parameter
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACGrGrElasticDrivingForce
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACGrGrMulti
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: gamma_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of gamma material property names for each other order parameter. Place in same order as order parameters (v)!
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACGrGrMulti
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled order parameter names for other order parameters
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACGrGrPoly
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACGrGrPoly
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled order parameter names for other order parameters
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACInterface
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of nonlinear variable arguments this object depends on
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: No
      default: !!str kappa_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa used with the kernel
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACInterface
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: variable_L
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        The mobility is a function of any MOOSE variable (if this is set to false L must be constant over the entire domain!)
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACInterface2DMultiPhase1
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of nonlinear variable arguments this object depends on
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: d2kappadgrad_etaa_name
      required: No
      default: !!str d2kappadgrad_etaa
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The second derivative of the kappa with respect to grad_etaa
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: dkappadgrad_etaa_name
      required: No
      default: !!str dkappadgrad_etaa
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The derivative of the kappa with respect to grad_etaa
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        All other coupled order parameters eta_i of the multiphase problem
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: No
      default: !!str kappa_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa used with the kernel
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACInterface2DMultiPhase1
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: variable_L
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        The mobility is a function of any MOOSE variable (if this is set to false L must be constant over the entire domain!)
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACInterface2DMultiPhase2
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of nonlinear variable arguments this object depends on
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: dkappadgrad_etaa_name
      required: No
      default: !!str dkappadgrad_etaa
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The derivative of the kappa with respect to grad_etaa
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: No
      default: !!str kappa_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa used with the kernel
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACInterface2DMultiPhase2
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: variable_L
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        The mobility is a function of any MOOSE variable (if this is set to false L must be constant over the entire domain!)
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACInterfaceKobayashi1
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of nonlinear variable arguments this object depends on
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: ddepsdgrad_op_name
      required: No
      default: !!str ddepsdgrad_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The derivative of deps with respect to grad_op
    - name: deps_name
      required: No
      default: !!str deps
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The derivative of the anisotropic interface parameter with respect to angle
    - name: depsdgrad_op_name
      required: No
      default: !!str depsdgrad_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The derivative of the anisotropic interface parameter eps with respect to grad_op
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eps_name
      required: No
      default: !!str eps
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The anisotropic interface parameter
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACInterfaceKobayashi1
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACInterfaceKobayashi2
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of nonlinear variable arguments this object depends on
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depsdgrad_op_name
      required: No
      default: !!str depsdgrad_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The derivative of the anisotropic interface parameter eps with respect to grad_op
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eps_name
      required: No
      default: !!str eps
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The anisotropic parameter
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACInterfaceKobayashi2
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACInterfaceStress
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: op_range
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Range over which order parameters change across an interface. By default order parameters are assumed to vary from 0 to 1
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stress
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Planar stress
    - name: type
      required: No
      default: !!str ACInterfaceStress
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACKappaFunction
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: No
      default: !!str kappa_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa function name
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACKappaFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of additional nonlinear variables that affect the gradient energy
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACMultiInterface
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        All eta_i order parameters of the multiphase problem
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        The kappa used with the kernel
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACMultiInterface
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACSEDGPoly
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: deformed_grain_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of OP representing deformed grains
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: grain_tracker
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The GrainTracker UserObject to get values from.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: op_index
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index for the current order parameter
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACSEDGPoly
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variable names
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ACSwitching
    description: |
      
    parameters:
    - name: Fj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of free energies for each phase. Place in same order as hj_names!
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: hj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide h. Place in same order as Fj_names!
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ACSwitching
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/AllenCahn
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: f_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F defined in a DerivativeParsedMaterial
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str AllenCahn
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/AllenCahnElasticEnergyOffDiag
    description: |
      
    parameters:
    - name: F_name
      required: No
      default: !!str E_el
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property storing the elastic energy
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The vector of displacements suitable for the problem statement
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str AllenCahnElasticEnergyOffDiag
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/AnisotropicDiffusion
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tensor_coeff
      required: Yes
      default: !!str 
      cpp_type: libMesh::TensorValue<double>
      group_name: 
      description: |
        The Tensor to multiply the Diffusion operator by
    - name: type
      required: No
      default: !!str AnisotropicDiffusion
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/BodyForce
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: No
      default: !!str 1
      cpp_type: FunctionName
      group_name: 
      description: |
        A function that describes the body force
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: postprocessor
      required: No
      default: !!str 1
      cpp_type: PostprocessorName
      group_name: 
      description: |
        A postprocessor whose value is multiplied by the body force
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str BodyForce
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Coefficent to multiply by the body force term
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CHBulkPFCTrad
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str M
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CHBulkPFCTrad
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CHInterface
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa used with the kernel
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CHInterface
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CHInterfaceAniso
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa used with the kernel
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CHInterfaceAniso
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CHMath
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str M
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CHMath
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CHPFCRFF
    description: |
      
    parameters:
    - name: Dmob_name
      required: No
      default: !!str DM
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The D mobility used with the kernel
    - name: a
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Constants on Taylor Series
    - name: b
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Constants on Taylor Series
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Constants on Taylor Series
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: has_MJac
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Jacobian information for the mobility is defined
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: log_approach
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: tolerance cancelation expansion nothing
      description: |
        Which approach will be used to handle the natural log
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str M
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: n_exp_terms
      required: No
      default: !!str 4
      cpp_type: double
      group_name: 
      description: |
        Number of terms used in the Taylor expansion of the natural log term
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tol
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Tolerance used when the tolerance approach is chosen
    - name: type
      required: No
      default: !!str CHPFCRFF
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of names of the real parts of the L variables
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CHPFCRFFSplitKernel
    description: |
      
    parameters:
    - name: L_name_base
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Base name for the complex L variables
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: log_approach
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: tolerance cancelation expansion
      description: |
        Which approach will be used to handle the natural log
    - name: mob_name
      required: No
      default: !!str M
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used for n in this model
    - name: n_exp_terms
      required: No
      default: !!str 4
      cpp_type: double
      group_name: 
      description: |
        Number of terms used in the Taylor expansion of the natural log term
    - name: n_name
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        Variable name used for the n variable
    - name: num_L
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of complex L variables will be solved for
    - name: tol
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Tolerance used when the tolerance approach is chosen
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels
    subblocks:
  - name: /Kernels/CHSplitChemicalPotential
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration
    - name: chemical_potential_prop
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Chemical potential property name
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CHSplitChemicalPotential
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CHSplitConcentration
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: chemical_potential_var
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Chemical potential variable
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mobility
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Mobility property name
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CHSplitConcentration
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CHSplitFlux
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Flux component
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mobility_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Mobility property name
    - name: mu
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Chemical Potential
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CHSplitFlux
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CahnHilliard
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacement_gradients
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of displacement gradient variables (see Modules/PhaseField/DisplacementGradients action)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: f_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F defined in a DerivativeParsedMaterial
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str M
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CahnHilliard
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CahnHilliardAniso
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacement_gradients
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of displacement gradient variables (see Modules/PhaseField/DisplacementGradients action)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: f_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F defined in a DerivativeParsedMaterial
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str M
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CahnHilliardAniso
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CoefCoupledTimeDerivative
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: coef
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Coefficient
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CoefCoupledTimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CoefReaction
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: coefficient
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Coefficient of the term
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CoefReaction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CoefTimeDerivative
    description: |
      
    parameters:
    - name: Coefficient
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The coefficient for the time derivative kernel
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: lumping
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        True for mass matrix lumping, false otherwise
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CoefTimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/ConservativeAdvection
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ConservativeAdvection
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: upwinding_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: none full
      description: |
        Type of upwinding used.  None: Typically results in overshoots and undershoots, but numerical diffusion is minimized.  Full: Overshoots and undershoots are avoided, but numerical diffusion is large
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: velocity
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Velocity vector
    subblocks:
  - name: /Kernels/ConservedLangevinNoise
    description: |
      
    parameters:
    - name: amplitude
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Amplitude
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: multiplier
      required: No
      default: !!str 1
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Material property to multiply the random numbers with (defaults to 1.0 if omitted)
    - name: noise
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        ConservedNoise userobject that produces the random numbers
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ConservedLangevinNoise
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CosseratStressDivergenceTensors
    description: |
      
    parameters:
    - name: Cosserat_rotations
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The 3 Cosserat rotation variables
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        An integer corresponding to the direction the variable this kernel acts in. (0 for x, 1 for y, 2 for z)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The string of displacements suitable for the problem statement
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out_of_plane_strain variable used in the WeakPlaneStress kernel.
    - name: out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the out_of_plane_strain variable used in the WeakPlaneStress kernel. Required only if want to provide off-diagonal Jacobian in plane stress analysis using weak formulation.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the temperature variable used in the ComputeThermalExpansionEigenstrain.  (Not required for simulations without temperature coupling.)
    - name: thermal_eigenstrain_name
      required: No
      default: !!str thermal_eigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        The eigenstrain_name used in the ComputeThermalExpansionEigenstrain.
    - name: type
      required: No
      default: !!str CosseratStressDivergenceTensors
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_finite_deform_jacobian
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Jacobian for corotational finite strain
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to false to turn off volumetric locking correction
    subblocks:
  - name: /Kernels/CoupledAllenCahn
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: f_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F defined in a DerivativeParsedMaterial
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CoupledAllenCahn
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CoupledForce
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: coef
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Coefficent ($\sigma$) multiplier for the coupled force term.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CoupledForce
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The coupled variable which provides the force
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CoupledMaterialDerivative
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of other nonlinear variables F depends on (used for computing Jacobian entries)
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: f_name
      required: No
      default: !!str F
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Function material to take the derivative of (should provide derivative properties - such as a DerivativeParsedMaterial)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CoupledMaterialDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable to take the derivative with respect to
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CoupledSusceptibilityTimeDerivative
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the susceptibility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: f_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Susceptibility function F defined in a FunctionMaterial
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CoupledSusceptibilityTimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CoupledSwitchingTimeDerivative
    description: |
      
    parameters:
    - name: Fj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of functions for each phase. Place in same order as hj_names!
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of Fj and hj
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: hj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide h. Place in same order as Fj_names!
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CoupledSwitchingTimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/CoupledTimeDerivative
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CoupledTimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/Diffusion
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str Diffusion
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/DiscreteNucleationForce
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: map
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        DiscreteNucleationMap user object
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: no_nucleus_value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Variable value indicating no nucleus is present
    - name: nucleus_value
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Variable value indicating the presence of a nucleus
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DiscreteNucleationForce
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/DynamicStressDivergenceTensors
    description: |
      
    parameters:
    - name: alpha
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        alpha parameter for HHT time integration
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        An integer corresponding to the direction the variable this kernel acts in. (0 for x, 1 for y, 2 for z)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The string of displacements suitable for the problem statement
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out_of_plane_strain variable used in the WeakPlaneStress kernel.
    - name: out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the out_of_plane_strain variable used in the WeakPlaneStress kernel. Required only if want to provide off-diagonal Jacobian in plane stress analysis using weak formulation.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: static_initialization
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to get the system to equillibrium under gravity by running a quasi-static analysis (by solving Ku = F) in the first time step
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the temperature variable used in the ComputeThermalExpansionEigenstrain.  (Not required for simulations without temperature coupling.)
    - name: thermal_eigenstrain_name
      required: No
      default: !!str thermal_eigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        The eigenstrain_name used in the ComputeThermalExpansionEigenstrain.
    - name: type
      required: No
      default: !!str DynamicStressDivergenceTensors
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_finite_deform_jacobian
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Jacobian for corotational finite strain
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to false to turn off volumetric locking correction
    - name: zeta
      required: No
      default: !!str 0
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property or a constant real number defining the zeta parameter for the Rayleigh damping.
    subblocks:
  - name: /Kernels/DynamicTensorMechanics
    description: |
      
    parameters:
    - name: add_variables
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Add the displacement variables
    - name: additional_generate_output
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 'Output'
      options: creep_strain_xx creep_strain_xy creep_strain_xz creep_strain_yx creep_strain_yy creep_strain_yz creep_strain_zx creep_strain_zy creep_strain_zz elastic_strain_xx elastic_strain_xy elastic_strain_xz elastic_strain_yx elastic_strain_yy elastic_strain_yz elastic_strain_zx elastic_strain_zy elastic_strain_zz plastic_strain_xx plastic_strain_xy plastic_strain_xz plastic_strain_yx plastic_strain_yy plastic_strain_yz plastic_strain_zx plastic_strain_zy plastic_strain_zz strain_xx strain_xy strain_xz strain_yx strain_yy strain_yz strain_zx strain_zy strain_zz stress_xx stress_xy stress_xz stress_yx stress_yy stress_yz stress_zx stress_zy stress_zz firstinv_stress firstinv_strain hydrostatic_stress max_principal_stress mid_principal_stress min_principal_stress secondinv_stress secondinv_strain thirdinv_stress thirdinv_strain vonmises_stress
      description: |
        Add scalar quantity output for stress and/or strain (will be appended to the list in `generate_output`)
    - name: alpha
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        alpha parameter for HHT time integration
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 'Advanced'
      description: |
        The list of ids of the blocks (subdomain) that the stress divergence kernels will be applied to
    - name: decomposition_method
      required: No
      default: !!str TaylorExpansion
      cpp_type: MooseEnum
      group_name: 
      options: TaylorExpansion EigenSolution
      description: |
        Methods to calculate the finite strain and rotation increments
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The displacement diagonal preconditioner terms
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
      group_name: 
      description: |
        The nonlinear displacement variables for the problem
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: generate_output
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 'Output'
      options: creep_strain_xx creep_strain_xy creep_strain_xz creep_strain_yx creep_strain_yy creep_strain_yz creep_strain_zx creep_strain_zy creep_strain_zz elastic_strain_xx elastic_strain_xy elastic_strain_xz elastic_strain_yx elastic_strain_yy elastic_strain_yz elastic_strain_zx elastic_strain_zy elastic_strain_zz plastic_strain_xx plastic_strain_xy plastic_strain_xz plastic_strain_yx plastic_strain_yy plastic_strain_yz plastic_strain_zx plastic_strain_zy plastic_strain_zz strain_xx strain_xy strain_xz strain_yx strain_yy strain_yz strain_zx strain_zy strain_zz stress_xx stress_xy stress_xz stress_yx stress_yy stress_yz stress_zx stress_zy stress_zz firstinv_stress firstinv_strain hydrostatic_stress max_principal_stress mid_principal_stress min_principal_stress secondinv_stress secondinv_strain thirdinv_stress thirdinv_strain vonmises_stress
      description: |
        Add scalar quantity output for stress and/or strain
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the global strain material to be applied in this strain calculation. The global strain tensor is constant over the whole domain and allows visualization of the deformed shape with the periodic BC
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: incremental
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Use incremental or total strain
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 'Out-of-plane stress/strain'
      options: x y z
      description: |
        The direction of the out-of-plane strain.
    - name: out_of_plane_pressure
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 'Out-of-plane stress/strain'
      description: |
        Function used to prescribe pressure in the out-of-plane direction (y for 1D Axisymmetric or z for 2D Cartesian problems)
    - name: planar_formulation
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Out-of-plane stress/strain'
      options: NONE PLANE_STRAIN GENERALIZED_PLANE_STRAIN
      description: |
        Out-of-plane stress/strain formulation
    - name: pressure_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 'Out-of-plane stress/strain'
      description: |
        Scale factor applied to prescribed pressure
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The displacement residuals
    - name: scalar_out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 'Out-of-plane stress/strain'
      description: |
        Scalar variable for the out-of-plane strain (in y direction for 1D Axisymmetric or in z direction for 2D Cartesian problems)
    - name: static_initialization
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true get the system to equillibrium under gravity by running a quasi-static analysis (by solving Ku = F) in the first time step.
    - name: strain
      required: No
      default: !!str SMALL
      cpp_type: MooseEnum
      group_name: 
      options: SMALL FINITE
      description: |
        Strain formulation
    - name: strain_base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The base name used for the strain. If not provided, it will be set equal to base_name
    - name: temperature
      required: No
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The temperature
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels
    - name: use_finite_deform_jacobian
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Jacobian for corrotational finite strain
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    - name: zeta
      required: No
      default: !!str 0
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property or a constant real number defining the zeta parameter for the Rayleigh damping.
    subblocks:
  - name: /Kernels/GeneralizedPlaneStrainOffDiag
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
      group_name: 
      description: |
        Variable for the displacements
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out-of-plane strain.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: scalar_out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Scalar variable for generalized plane strain
    - name: scalar_out_of_plane_strain_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index number of scalar_out_of_plane_strain this kernel acts on
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: subblock_index_provider
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        SubblockIndexProvider user object name
    - name: temperature
      required: No
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        Variable for the temperature
    - name: type
      required: No
      default: !!str GeneralizedPlaneStrainOffDiag
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/GradientComponent
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Component of the gradient of the coupled variable v
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str GradientComponent
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable to match gradient component of
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/Gravity
    description: |
      
    parameters:
    - name: alpha
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        alpha parameter required for HHT time integration scheme
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: No
      default: !!str 1
      cpp_type: FunctionName
      group_name: 
      description: |
        A function that describes the gravitational force
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str Gravity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Displaced mesh defaults to true
    - name: value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/HHPFCRFF
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coupled_var
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the coupled variable, if one is used in the kernel
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: positive
      required: Yes
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        If the kernel is positive, this is true, if negative, it is false
    - name: prop_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property to be used in the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str HHPFCRFF
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/HHPFCRFFSplitKernel
    description: |
      
    parameters:
    - name: L_name_base
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Base name for the complex L variables
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: log_approach
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: tolerance cancelation expansion
      description: |
        Which approach will be used to handle the natural log
    - name: mob_name
      required: No
      default: !!str M
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used for n in this model
    - name: n_exp_terms
      required: No
      default: !!str 4
      cpp_type: double
      group_name: 
      description: |
        Number of terms used in the Taylor expansion of the natural log term
    - name: n_name
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Variable name used for the n variable
    - name: num_L
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of complex L variables will be solved for
    - name: tol
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Tolerance used when the tolerance approach is chosen
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels
    subblocks:
  - name: /Kernels/InertialForce
    description: |
      
    parameters:
    - name: acceleration
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        acceleration variable
    - name: alpha
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        alpha parameter for mass dependent numerical damping induced by HHT time integration scheme
    - name: beta
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        beta parameter for Newmark Time integration
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: density
      required: No
      default: !!str density
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of Material Property that provides the density
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta
      required: No
      default: !!str 0
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property or a constant real number defining the eta parameter for the Rayleigh damping.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: gamma
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        gamma parameter for Newmark Time integration
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str InertialForce
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: velocity
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        velocity variable
    subblocks:
  - name: /Kernels/InertialForceBeam
    description: |
      
    parameters:
    - name: Ay
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable containing first moment of area about y axis
    - name: Az
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable containing first moment of area about z axis
    - name: Ix
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable containing second moment of area about x axis. Defaults to Iy+Iz
    - name: Iy
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable containing second moment of area about y axis
    - name: Iz
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable containing second moment of area about z axis
    - name: accelerations
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Translational acceleration variables
    - name: alpha
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Alpha parameter for mass dependent numerical damping induced by HHT time integration scheme
    - name: area
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable containing cross-section area
    - name: beta
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        beta parameter for Newmark Time integration
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        An integer corresponding to the direction the variable this kernel acts in. (0 for disp_x, 1 for disp_y, 2 for disp_z, 3 for rot_x, 4 for rot_y and 5 for rot_z)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: density
      required: No
      default: !!str density
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of Material Property  or a constant real number defining the density of the beam.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacement variables appropriate for the simulation geometry and coordinate system
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta
      required: No
      default: !!str 0
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property or a constant real number defining the eta parameter for the Rayleigh damping.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: gamma
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        gamma parameter for Newmark Time integration
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: rotational_accelerations
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Rotational acceleration variables
    - name: rotational_velocities
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Rotational velocity variables
    - name: rotations
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The rotational variables appropriate for the simulation geometry and coordinate system
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str InertialForceBeam
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: velocities
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Translational velocity variables
    subblocks:
  - name: /Kernels/InertialTorque
    description: |
      
    parameters:
    - name: accelerations
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The 3 acceleration variables
    - name: alpha
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        alpha parameter for mass dependent numerical damping induced by HHT time integration scheme
    - name: beta
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        beta parameter for Newmark Time integration
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The component of the Cosserat rotation Variable prescribed to this Kernel (0 for x, 1 for y, 2 for z)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: density
      required: No
      default: !!str density
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of Material Property that provides the density
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The 3 displacement variables
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta
      required: No
      default: !!str 0
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property or a constant real number defining the eta parameter for the Rayleigh damping.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: gamma
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        gamma parameter for Newmark Time integration
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str InertialTorque
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: velocities
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The 3 velocity variables
    subblocks:
  - name: /Kernels/KKSACBulkC
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: ca
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        a-phase concentration
    - name: cb
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        b-phase concentration
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: fa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_base in the corresponding KKSBaseMaterial)
    - name: fb_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_base in the corresponding KKSBaseMaterial)
    - name: h_name
      required: No
      default: !!str h
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name for the switching function h(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSACBulkC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/KKSACBulkF
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: fa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_base in the corresponding KKSBaseMaterial)
    - name: fb_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_base in the corresponding KKSBaseMaterial)
    - name: g_name
      required: No
      default: !!str g
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name for the double well function g(eta)
    - name: h_name
      required: No
      default: !!str h
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name for the switching function h(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSACBulkF
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: w
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Double well height parameter
    subblocks:
  - name: /Kernels/KKSCHBulk
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: args_a
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of additional arguments to Fa
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: ca
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        phase concentration corresponding to the non-linear variable of this kernel
    - name: cb
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        phase concentration corresponding to the non-linear variable of this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: fa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_name in the corresponding derivative function material)
    - name: fb_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_name in the corresponding derivative function material)
    - name: h_name
      required: No
      default: !!str h
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name for the switching function h(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str M
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSCHBulk
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/KKSMultiACBulkC
    description: |
      
    parameters:
    - name: Fj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of free energies for each phase. Place in same order as hj_names!
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: cj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of phase concentrations cj. Place in same order as Fj_names!
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta_i
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter that derivatives are taken with respect to
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: hj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide h. Place in same order as Fj_names!
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSMultiACBulkC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/KKSMultiACBulkF
    description: |
      
    parameters:
    - name: Fj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of free energies for each phase. Place in same order as hj_names!
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta_i
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter that derivatives are taken with respect to
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: gi_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name for the double well function g_i(eta_i)
    - name: hj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide h. Place in same order as Fj_names!
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSMultiACBulkF
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: wi
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Double well height parameter
    subblocks:
  - name: /Kernels/KKSMultiPhaseConcentration
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Physical concentration
    - name: cj
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of phase concentrations cj. Place in same order as hj_names!
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameters for all phases
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: hj_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide $h(\eta_1, \eta_2,\dots)$
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSMultiPhaseConcentration
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/KKSPhaseChemicalPotential
    description: |
      
    parameters:
    - name: args_a
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of further parameters to Fa (optional, to add in second cross derivatives of Fa)
    - name: args_b
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of further parameters to Fb (optional, to add in second cross derivatives of Fb)
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: cb
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Phase b concentration
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: fa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function Fa (f_name in the corresponding derivative function material)
    - name: fb_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function Fb (f_name in the corresponding derivative function material)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSPhaseChemicalPotential
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/KKSPhaseConcentration
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Real concentration
    - name: ca
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Phase a concentration
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Phase a/b order parameter
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: h_name
      required: No
      default: !!str h
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name for the switching function h(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSPhaseConcentration
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/KKSSplitCHCRes
    description: |
      
    parameters:
    - name: args_a
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of additional arguments to Fa
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: ca
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        phase concentration corresponding to the non-linear variable of this kernel
    - name: cb
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        phase concentration corresponding to the non-linear variable of this kernel
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: fa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_base in the corresponding KKSBaseMaterial)
    - name: fb_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F (f_base in the corresponding KKSBaseMaterial)
    - name: h_name
      required: No
      default: !!str h
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name for the switching function h(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str KKSSplitCHCRes
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: w
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Chemical potenial non-linear helper variable for the split solve
    subblocks:
  - name: /Kernels/LangevinNoise
    description: |
      
    parameters:
    - name: amplitude
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Amplitude
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: multiplier
      required: No
      default: !!str 1
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Material property to multiply the random numbers with (defaults to 1.0 if omitted)
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str LangevinNoise
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/LaplacianSplit
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Field variable to take the Laplacian of
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str LaplacianSplit
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MaskedBodyForce
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: No
      default: !!str 1
      cpp_type: FunctionName
      group_name: 
      description: |
        A function that describes the body force
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: mask
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Material property defining the mask
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: postprocessor
      required: No
      default: !!str 1
      cpp_type: PostprocessorName
      group_name: 
      description: |
        A postprocessor whose value is multiplied by the body force
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaskedBodyForce
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Coefficent to multiply by the body force term
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MassEigenKernel
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: eigen
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Use for eigenvalue problem (true) or source problem (false)
    - name: eigen_postprocessor
      required: No
      default: !!str 1
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor that provides the eigenvalue.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MassEigenKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MassLumpedTimeDerivative
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MassLumpedTimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MatAnisoDiffusion
    description: |
      
    parameters:
    - name: D_name
      required: No
      default: !!str D
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The name of the diffusivity
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the diffusivity
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: conc
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled concentration variable for kernel to operate on; if this is not specified, the kernel's nonlinear variable will be used as usual
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MatAnisoDiffusion
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MatDiffusion
    description: |
      
    parameters:
    - name: D_name
      required: No
      default: !!str D
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The name of the diffusivity
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the diffusivity
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: conc
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled concentration variable for kernel to operate on; if this is not specified, the kernel's nonlinear variable will be used as usual
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MatDiffusion
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MatGradSquareCoupled
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments to prefactor
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: elec_potential
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Electric potential
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: prefactor
      required: No
      default: !!str prefactor
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Material property providing a prefactor of electric potential contribution
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MatGradSquareCoupled
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MatReaction
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of nonlinear variable arguments this object depends on
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The reaction rate used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MatReaction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Set this to make v a coupled variable, otherwise it will use the kernel's nonlinear variable for v
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MaterialDerivativeRankFourTestKernel
    description: |
      
    parameters:
    - name: args
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        List of variables the material property depends on
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 
      description: |
        Select derivative to test derivatives of (leave empty for checking derivatives of the original material property)
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Tensor component
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Tensor component
    - name: k
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Tensor component
    - name: l
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Tensor component
    - name: material_property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property for which derivatives are to be tested.
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialDerivativeRankFourTestKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MaterialDerivativeRankTwoTestKernel
    description: |
      
    parameters:
    - name: args
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        List of variables the material property depends on
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 
      description: |
        Select derivative to test derivatives of (leave empty for checking derivatives of the original material property)
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Tensor component
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Tensor component
    - name: material_property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property for which derivatives are to be tested.
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialDerivativeRankTwoTestKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MaterialDerivativeTestKernel
    description: |
      
    parameters:
    - name: args
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        List of variables the material property depends on
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 
      description: |
        Select derivative to test derivatives of (leave empty for checking derivatives of the original material property)
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: material_property
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property for which derivatives are to be tested.
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialDerivativeTestKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MomentBalancing
    description: |
      
    parameters:
    - name: Cosserat_rotations
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The 3 Cosserat rotation variables
    - name: appended_property_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name appended to material properties to make them unique
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        An integer corresponding to the direction the variable this kernel acts in. (0 for x, 1 for y, 2 for z)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The 3 displacement variables
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MomentBalancing
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/MultiGrainRigidBodyMotion
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define type of force density under consideration
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: grain_force
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        UserObject for getting force and torque acting on grains
    - name: grain_tracker_object
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: grain_volumes
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The feature volume VectorPostprocessorValue.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variable names (num_name)
    - name: rotation_constant
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain rotation
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: translation_constant
      required: No
      default: !!str 500
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain translation
    - name: type
      required: No
      default: !!str MultiGrainRigidBodyMotion
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variable names
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variable names (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/NullKernel
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: jacobian_fill
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        On diagonal Jacobian fill term to retain an invertable matrix for the preconditioner
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NullKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/OutOfPlanePressure
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor applied to prescribed pressure
    - name: function
      required: No
      default: !!str 1.0
      cpp_type: FunctionName
      group_name: 
      description: |
        Function used to prescribe pressure
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: postprocessor
      required: No
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        Postprocessor used to prescribe pressure
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str OutOfPlanePressure
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/PFCRFFKernel
    description: |
      
    parameters:
    - name: L_name_base
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Base name for the complex L variables
    - name: a
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Parameter in the Taylor series expansion
    - name: b
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Parameter in the Taylor series expansion
    - name: c
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Parameter in the Taylor series expansion
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: log_approach
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: tolerance cancelation expansion
      description: |
        Which approach will be used to handle the natural log
    - name: mob_name
      required: No
      default: !!str M
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used for n in this model
    - name: n_exp_terms
      required: No
      default: !!str 4
      cpp_type: double
      group_name: 
      description: |
        Number of terms used in the Taylor expansion of the natural log term
    - name: n_name
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Variable name used for the n variable
    - name: num_L
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of complex L variables will be solved for
    - name: tol
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Tolerance used when the tolerance approach is chosen
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels
    subblocks:
  - name: /Kernels/PhaseFieldFractureMechanicsOffDiag
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Phase field damage variable: Used to indicate calculation of Off Diagonal Jacobian term
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        An integer corresponding to the direction the variable this kernel acts in. (0 for x, 1 for y, 2 for z)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PhaseFieldFractureMechanicsOffDiag
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/PlasticHeatEnergy
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: coeff
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Heat energy density = coeff * stress * plastic_strain_rate
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The string of displacements suitable for the problem statement
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PlasticHeatEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/PolycrystalElasticDrivingForce
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: op_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of grains to create
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels
    - name: var_name_base
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        specifies the base name of the variables
    subblocks:
  - name: /Kernels/PolycrystalKernel
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 
      description: |
        Vector of variable arguments L depends on
    - name: c
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Name of coupled concentration variable
    - name: en_ratio
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Ratio of surface to GB energy
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether kernels are implicit or not
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: ndef
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of deformed grains to create
    - name: op_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the total number of grains (deformed + recrystallized) to create
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels
    - name: var_name_base
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        specifies the base name of the variables
    - name: variable_mobility
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        The mobility is a function of any MOOSE variable (if this is set to false, L must be constant over the entire domain!)
    subblocks:
  - name: /Kernels/PolycrystalStoredEnergy
    description: |
      
    parameters:
    - name: T
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Name of temperature variable
    - name: c
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Name of coupled concentration variable
    - name: deformed_grain_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of deformed grains to create
    - name: grain_tracker
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The GrainTracker UserObject to get values from.
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: op_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the total number of OPs representing all grains (deformed + undeformed (recrystallized)) to create
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels
    - name: var_name_base
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        specifies the base name of the variables
    subblocks:
  - name: /Kernels/PoroMechanics
    description: |
      
    parameters:
    - name: add_variables
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Add the displacement variables
    - name: additional_generate_output
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 'Output'
      options: creep_strain_xx creep_strain_xy creep_strain_xz creep_strain_yx creep_strain_yy creep_strain_yz creep_strain_zx creep_strain_zy creep_strain_zz elastic_strain_xx elastic_strain_xy elastic_strain_xz elastic_strain_yx elastic_strain_yy elastic_strain_yz elastic_strain_zx elastic_strain_zy elastic_strain_zz plastic_strain_xx plastic_strain_xy plastic_strain_xz plastic_strain_yx plastic_strain_yy plastic_strain_yz plastic_strain_zx plastic_strain_zy plastic_strain_zz strain_xx strain_xy strain_xz strain_yx strain_yy strain_yz strain_zx strain_zy strain_zz stress_xx stress_xy stress_xz stress_yx stress_yy stress_yz stress_zx stress_zy stress_zz firstinv_stress firstinv_strain hydrostatic_stress max_principal_stress mid_principal_stress min_principal_stress secondinv_stress secondinv_strain thirdinv_stress thirdinv_strain vonmises_stress
      description: |
        Add scalar quantity output for stress and/or strain (will be appended to the list in `generate_output`)
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 'Advanced'
      description: |
        The list of ids of the blocks (subdomain) that the stress divergence kernels will be applied to
    - name: decomposition_method
      required: No
      default: !!str TaylorExpansion
      cpp_type: MooseEnum
      group_name: 
      options: TaylorExpansion EigenSolution
      description: |
        Methods to calculate the finite strain and rotation increments
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The displacement diagonal preconditioner terms
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
      group_name: 
      description: |
        The nonlinear displacement variables for the problem
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: generate_output
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 'Output'
      options: creep_strain_xx creep_strain_xy creep_strain_xz creep_strain_yx creep_strain_yy creep_strain_yz creep_strain_zx creep_strain_zy creep_strain_zz elastic_strain_xx elastic_strain_xy elastic_strain_xz elastic_strain_yx elastic_strain_yy elastic_strain_yz elastic_strain_zx elastic_strain_zy elastic_strain_zz plastic_strain_xx plastic_strain_xy plastic_strain_xz plastic_strain_yx plastic_strain_yy plastic_strain_yz plastic_strain_zx plastic_strain_zy plastic_strain_zz strain_xx strain_xy strain_xz strain_yx strain_yy strain_yz strain_zx strain_zy strain_zz stress_xx stress_xy stress_xz stress_yx stress_yy stress_yz stress_zx stress_zy stress_zz firstinv_stress firstinv_strain hydrostatic_stress max_principal_stress mid_principal_stress min_principal_stress secondinv_stress secondinv_strain thirdinv_stress thirdinv_strain vonmises_stress
      description: |
        Add scalar quantity output for stress and/or strain
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the global strain material to be applied in this strain calculation. The global strain tensor is constant over the whole domain and allows visualization of the deformed shape with the periodic BC
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: incremental
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Use incremental or total strain
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 'Out-of-plane stress/strain'
      options: x y z
      description: |
        The direction of the out-of-plane strain.
    - name: out_of_plane_pressure
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 'Out-of-plane stress/strain'
      description: |
        Function used to prescribe pressure in the out-of-plane direction (y for 1D Axisymmetric or z for 2D Cartesian problems)
    - name: planar_formulation
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Out-of-plane stress/strain'
      options: NONE PLANE_STRAIN GENERALIZED_PLANE_STRAIN
      description: |
        Out-of-plane stress/strain formulation
    - name: porepressure
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The porepressure variable
    - name: pressure_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 'Out-of-plane stress/strain'
      description: |
        Scale factor applied to prescribed pressure
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The displacement residuals
    - name: scalar_out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 'Out-of-plane stress/strain'
      description: |
        Scalar variable for the out-of-plane strain (in y direction for 1D Axisymmetric or in z direction for 2D Cartesian problems)
    - name: strain
      required: No
      default: !!str SMALL
      cpp_type: MooseEnum
      group_name: 
      options: SMALL FINITE
      description: |
        Strain formulation
    - name: strain_base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The base name used for the strain. If not provided, it will be set equal to base_name
    - name: temperature
      required: No
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The temperature
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels
    - name: use_finite_deform_jacobian
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Jacobian for corrotational finite strain
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Kernels/PoroMechanicsCoupling
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The gradient direction (0 for x, 1 for y and 2 for z)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: porepressure
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Porepressure, $p_s$.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PoroMechanicsCoupling
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/Reaction
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str Reaction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/RigidBodyMultiKernel
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define type of force density under consideration
    - name: c
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Name of coupled concentration variable
    - name: f_name
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F defined in a DerivativeParsedMaterial
    - name: grain_force
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        userobject for getting force and torque acting on grains
    - name: grain_tracker_object
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: grain_volumes
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The feature volume VectorPostprocessorValue.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether kernels are implicit or not
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: kappa_name
      required: No
      default: !!str kappa_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa used with the kernel
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: op_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of grains to create
    - name: rotation_constant
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain rotation
    - name: translation_constant
      required: No
      default: !!str 500
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain translation
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels
    - name: var_name_base
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        specifies the base name of the variables
    subblocks:
  - name: /Kernels/SimpleACInterface
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: No
      default: !!str kappa_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa used with the kernel
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SimpleACInterface
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/SimpleCHInterface
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa used with the kernel, should be constant value
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel, should be constant value
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SimpleCHInterface
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/SimpleCoupledACInterface
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: No
      default: !!str kappa_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa used with the kernel
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SimpleCoupledACInterface
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable that the Laplacian is taken of
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/SimpleSplitCHWRes
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str M
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel, should be a constant value
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SimpleSplitCHWRes
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/SingleGrainRigidBodyMotion
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define type of force density under consideration
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: grain_force
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        UserObject for getting force and torque acting on grains
    - name: grain_tracker_object
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: grain_volumes
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The feature volume VectorPostprocessorValue.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: op_index
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Grain number for the kernel to be applied
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variable names (num_name)
    - name: rotation_constant
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain rotation
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: translation_constant
      required: No
      default: !!str 500
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain translation
    - name: type
      required: No
      default: !!str SingleGrainRigidBodyMotion
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variable names
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variable names (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/SoretDiffusion
    description: |
      
    parameters:
    - name: Q_name
      required: No
      default: !!str Qheat
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The material name for the heat of transport
    - name: T
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Temperature
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: diff_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The diffusivity used with the kernel
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SoretDiffusion
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/SplitCHMath
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa used with the kernel
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SplitCHMath
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: w
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        chem poten
    subblocks:
  - name: /Kernels/SplitCHParsed
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of additional arguments to F
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: f_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Base name of the free energy function F defined in a DerivativeParsedMaterial
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The kappa used with the kernel
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SplitCHParsed
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: w
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        chem poten
    subblocks:
  - name: /Kernels/SplitCHVoltage
    description: |
      
    parameters:
    - name: T
      required: No
      default: !!str 298
      cpp_type: double
      group_name: 
      description: |
        Temperature value in Kelvin
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: diff_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The diffusivity used with the kernel
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SplitCHVoltage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: volt
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Voltage
    - name: z_name
      required: No
      default: !!str zeff
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Effective charge number of the species
    subblocks:
  - name: /Kernels/SplitCHWRes
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str mobtemp
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SplitCHWRes
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/SplitCHWResAniso
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the mobility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: mob_name
      required: No
      default: !!str mobtemp
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The mobility used with the kernel
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SplitCHWResAniso
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/StressDivergenceBeam
    description: |
      
    parameters:
    - name: alpha
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        alpha parameter for HHT time integration
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        An integer corresponding to the direction the variable this kernel acts in. (0 for disp_x, 1 for disp_y, 2 for disp_z, 3 for rot_x, 4 for rot_y and 5 for rot_z)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: rotations
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The rotations appropriate for the simulation geometry and coordinate system
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str StressDivergenceBeam
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: zeta
      required: No
      default: !!str 0
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property or a constant real number defining the zeta parameter for the Rayleigh damping.
    subblocks:
  - name: /Kernels/StressDivergenceRSphericalTensors
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        An integer corresponding to the direction the variable this kernel acts in. (0 for x, 1 for y, 2 for z; note in this kernel disp_x refers to the radial displacement and disp_y refers to the axial displacement.)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The string of displacements suitable for the problem statement
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out_of_plane_strain variable used in the WeakPlaneStress kernel.
    - name: out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the out_of_plane_strain variable used in the WeakPlaneStress kernel. Required only if want to provide off-diagonal Jacobian in plane stress analysis using weak formulation.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the temperature variable used in the ComputeThermalExpansionEigenstrain.  (Not required for simulations without temperature coupling.)
    - name: thermal_eigenstrain_name
      required: No
      default: !!str thermal_eigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        The eigenstrain_name used in the ComputeThermalExpansionEigenstrain.
    - name: type
      required: No
      default: !!str StressDivergenceRSphericalTensors
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_finite_deform_jacobian
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Jacobian for corotational finite strain
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to false to turn off volumetric locking correction
    subblocks:
  - name: /Kernels/StressDivergenceRZTensors
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        An integer corresponding to the direction the variable this kernel acts in. (0 for x, 1 for y, 2 for z; note in this kernel disp_x refers to the radial displacement and disp_y refers to the axial displacement.)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The string of displacements suitable for the problem statement
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out_of_plane_strain variable used in the WeakPlaneStress kernel.
    - name: out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the out_of_plane_strain variable used in the WeakPlaneStress kernel. Required only if want to provide off-diagonal Jacobian in plane stress analysis using weak formulation.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the temperature variable used in the ComputeThermalExpansionEigenstrain.  (Not required for simulations without temperature coupling.)
    - name: thermal_eigenstrain_name
      required: No
      default: !!str thermal_eigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        The eigenstrain_name used in the ComputeThermalExpansionEigenstrain.
    - name: type
      required: No
      default: !!str StressDivergenceRZTensors
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_finite_deform_jacobian
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Jacobian for corotational finite strain
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to false to turn off volumetric locking correction
    subblocks:
  - name: /Kernels/StressDivergenceTensors
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        An integer corresponding to the direction the variable this kernel acts in. (0 for x, 1 for y, 2 for z)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The string of displacements suitable for the problem statement
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out_of_plane_strain variable used in the WeakPlaneStress kernel.
    - name: out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the out_of_plane_strain variable used in the WeakPlaneStress kernel. Required only if want to provide off-diagonal Jacobian in plane stress analysis using weak formulation.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the temperature variable used in the ComputeThermalExpansionEigenstrain.  (Not required for simulations without temperature coupling.)
    - name: thermal_eigenstrain_name
      required: No
      default: !!str thermal_eigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        The eigenstrain_name used in the ComputeThermalExpansionEigenstrain.
    - name: type
      required: No
      default: !!str StressDivergenceTensors
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_finite_deform_jacobian
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Jacobian for corotational finite strain
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to false to turn off volumetric locking correction
    subblocks:
  - name: /Kernels/StressDivergenceTensorsTruss
    description: |
      
    parameters:
    - name: area
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Cross-sectional area of truss element
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        An integer corresponding to the direction the variable this kernel acts in. (0 for x, 1 for y, 2 for z)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: displacements
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The string of displacements suitable for the problem statement
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The temperature
    - name: type
      required: No
      default: !!str StressDivergenceTensorsTruss
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/SusceptibilityTimeDerivative
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of arguments of the susceptibility
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: f_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Susceptibility function F defined in a FunctionMaterial
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: lumping
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        True for mass matrix lumping, false otherwise
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SusceptibilityTimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/SwitchingFunctionConstraintEta
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: h_name
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Switching Function Materials that provides h(eta_i)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: lambda
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Lagrange multiplier
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SwitchingFunctionConstraintEta
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/SwitchingFunctionConstraintLagrange
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: epsilon
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Shift factor to avoid a zero pivot
    - name: etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        eta_i order parameters, one for each h
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: h_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide h(eta_i)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SwitchingFunctionConstraintLagrange
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/SwitchingFunctionPenalty
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        eta_i order parameters, one for each h
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: h_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide h(eta_i)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: penalty
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Penalty scaling factor
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SwitchingFunctionPenalty
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/TensorMechanics
    description: |
      
    parameters:
    - name: add_variables
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Add the displacement variables
    - name: additional_generate_output
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 'Output'
      options: creep_strain_xx creep_strain_xy creep_strain_xz creep_strain_yx creep_strain_yy creep_strain_yz creep_strain_zx creep_strain_zy creep_strain_zz elastic_strain_xx elastic_strain_xy elastic_strain_xz elastic_strain_yx elastic_strain_yy elastic_strain_yz elastic_strain_zx elastic_strain_zy elastic_strain_zz plastic_strain_xx plastic_strain_xy plastic_strain_xz plastic_strain_yx plastic_strain_yy plastic_strain_yz plastic_strain_zx plastic_strain_zy plastic_strain_zz strain_xx strain_xy strain_xz strain_yx strain_yy strain_yz strain_zx strain_zy strain_zz stress_xx stress_xy stress_xz stress_yx stress_yy stress_yz stress_zx stress_zy stress_zz firstinv_stress firstinv_strain hydrostatic_stress max_principal_stress mid_principal_stress min_principal_stress secondinv_stress secondinv_strain thirdinv_stress thirdinv_strain vonmises_stress
      description: |
        Add scalar quantity output for stress and/or strain (will be appended to the list in `generate_output`)
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 'Advanced'
      description: |
        The list of ids of the blocks (subdomain) that the stress divergence kernels will be applied to
    - name: decomposition_method
      required: No
      default: !!str TaylorExpansion
      cpp_type: MooseEnum
      group_name: 
      options: TaylorExpansion EigenSolution
      description: |
        Methods to calculate the finite strain and rotation increments
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The displacement diagonal preconditioner terms
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
      group_name: 
      description: |
        The nonlinear displacement variables for the problem
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: generate_output
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 'Output'
      options: creep_strain_xx creep_strain_xy creep_strain_xz creep_strain_yx creep_strain_yy creep_strain_yz creep_strain_zx creep_strain_zy creep_strain_zz elastic_strain_xx elastic_strain_xy elastic_strain_xz elastic_strain_yx elastic_strain_yy elastic_strain_yz elastic_strain_zx elastic_strain_zy elastic_strain_zz plastic_strain_xx plastic_strain_xy plastic_strain_xz plastic_strain_yx plastic_strain_yy plastic_strain_yz plastic_strain_zx plastic_strain_zy plastic_strain_zz strain_xx strain_xy strain_xz strain_yx strain_yy strain_yz strain_zx strain_zy strain_zz stress_xx stress_xy stress_xz stress_yx stress_yy stress_yz stress_zx stress_zy stress_zz firstinv_stress firstinv_strain hydrostatic_stress max_principal_stress mid_principal_stress min_principal_stress secondinv_stress secondinv_strain thirdinv_stress thirdinv_strain vonmises_stress
      description: |
        Add scalar quantity output for stress and/or strain
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the global strain material to be applied in this strain calculation. The global strain tensor is constant over the whole domain and allows visualization of the deformed shape with the periodic BC
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: incremental
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Use incremental or total strain
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 'Out-of-plane stress/strain'
      options: x y z
      description: |
        The direction of the out-of-plane strain.
    - name: out_of_plane_pressure
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 'Out-of-plane stress/strain'
      description: |
        Function used to prescribe pressure in the out-of-plane direction (y for 1D Axisymmetric or z for 2D Cartesian problems)
    - name: planar_formulation
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Out-of-plane stress/strain'
      options: NONE PLANE_STRAIN GENERALIZED_PLANE_STRAIN
      description: |
        Out-of-plane stress/strain formulation
    - name: pressure_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 'Out-of-plane stress/strain'
      description: |
        Scale factor applied to prescribed pressure
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The displacement residuals
    - name: scalar_out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 'Out-of-plane stress/strain'
      description: |
        Scalar variable for the out-of-plane strain (in y direction for 1D Axisymmetric or in z direction for 2D Cartesian problems)
    - name: strain
      required: No
      default: !!str SMALL
      cpp_type: MooseEnum
      group_name: 
      options: SMALL FINITE
      description: |
        Strain formulation
    - name: strain_base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The base name used for the strain. If not provided, it will be set equal to base_name
    - name: temperature
      required: No
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The temperature
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use displaced mesh in the kernels
    - name: use_finite_deform_jacobian
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Jacobian for corrotational finite strain
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Kernels/TimeDerivative
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: lumping
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        True for mass matrix lumping, false otherwise
    - name: matrix_tags
      required: No
      default: !!str system time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system time
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/UserForcingFunction
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: No
      default: !!str 1
      cpp_type: FunctionName
      group_name: 
      description: |
        A function that describes the body force
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: postprocessor
      required: No
      default: !!str 1
      cpp_type: PostprocessorName
      group_name: 
      description: |
        A postprocessor whose value is multiplied by the body force
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str UserForcingFunction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Coefficent to multiply by the body force term
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/VectorBodyForce
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function_x
      required: No
      default: !!str 1
      cpp_type: FunctionName
      group_name: 
      description: |
        A function that describes the x-component of the body force
    - name: function_y
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        A function that describes the y-component of the body force
    - name: function_z
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        A function that describes the z-component of the body force
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: postprocessor
      required: No
      default: !!str 1
      cpp_type: PostprocessorName
      group_name: 
      description: |
        A postprocessor whose value is multiplied by the body force
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VectorBodyForce
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Coefficent to multiply by the body force term
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/VectorDiffusion
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VectorDiffusion
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /Kernels/WeakPlaneStress
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's diagonal Jacobian contributions to. Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out-of-plane strain variable
    - name: displacements
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The string of displacements suitable for the problem statement
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: out_of_plane_strain_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out-of-plane strain variable
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 'Advanced'
      description: |
        The name of auxiliary variables to save this Kernel's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the temperature variable used in the ComputeThermalExpansionEigenstrain.  (Not required for simulations without temperature coupling.)
    - name: thermal_eigenstrain_name
      required: No
      default: !!str thermal_eigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        The eigenstrain_name used in the ComputeThermalExpansionEigenstrain.
    - name: type
      required: No
      default: !!str WeakPlaneStress
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation. Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this Kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
- name: /Materials
  description: |
    
  parameters:
  subblocks:
  - name: /Materials/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /Materials/AbruptSoftening
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: residual_stress
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The fraction of the cracking stress allowed to be maintained following a crack.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str AbruptSoftening
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/AsymmetricCrossTermBarrierFunctionMaterial
    description: |
      
    parameters:
    - name: W_ij
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Terms controlling barrier height set W=1 in DerivativeMultiPhaseMaterial for these to apply
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        eta_i order parameters, one for each h
    - name: function_name
      required: No
      default: !!str g
      cpp_type: std::string
      group_name: 
      description: |
        actual name for g(eta_i)
    - name: g_order
      required: No
      default: !!str SIMPLE
      cpp_type: MooseEnum
      group_name: 
      options: SIMPLE LOW
      description: |
        Polynomial order of the barrier function g(eta)
    - name: hi_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide h(eta_i)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str AsymmetricCrossTermBarrierFunctionMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/BarrierFunctionMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter variable
    - name: function_name
      required: No
      default: !!str g
      cpp_type: std::string
      group_name: 
      description: |
        actual name for f(eta), i.e. 'h' or 'g'
    - name: g_order
      required: No
      default: !!str SIMPLE
      cpp_type: MooseEnum
      group_name: 
      options: SIMPLE LOW HIGH
      description: |
        Polynomial order of the barrier function g(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str BarrierFunctionMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: well_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Make the g zero in [0:1] so it only contributes to enforcing the eta range and not to the phase transformation berrier.
    subblocks:
  - name: /Materials/CappedDruckerPragerCosseratStressUpdate
    description: |
      
    parameters:
    - name: DP_model
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsPlasticDruckerPrager UserObject that defines the Drucker-Prager parameters (cohesion, friction angle and dilation angle)
    - name: admissible_stress
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        A single admissible value of the value of the stress parameters for internal parameters = 0.  This is used to initialize the return-mapping algorithm during the first nonlinear iteration.  If not given then it is assumed that stress parameters = 0 is admissible.
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compressive_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the compressive strength.  In physical situations this is positive.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: host_poissons_ratio
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Poisson's ratio for the isotropic host medium
    - name: host_youngs_modulus
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Young's modulus for the isotropic host medium
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: max_NR_iterations
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of Newton-Raphson iterations allowed during the return-map algorithm
    - name: min_step_size
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        In order to help the Newton-Raphson procedure, the applied strain increment may be applied in sub-increments of size greater than this value.  Usually it is better for Moose's nonlinear convergence to increase max_NR_iterations rather than decrease this parameter.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perfect_guess
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Provide a guess to the Newton-Raphson proceedure that is the result from perfect plasticity.  With severe hardening/softening this may be suboptimal.
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: small_dilation
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        If true, and if the trial stress exceeds the tensile strength, then the user gaurantees that the returned stress will be independent of the compressive strength.
    - name: smoothing_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Intersections of the yield surfaces will be smoothed by this amount (this is measured in units of stress).  Often this is related to other physical parameters (eg, 0.1*cohesion) but it is important to set this small enough so that the individual yield surfaces do not mix together in the smoothing process to produce a result where no stress is admissible (for example, mixing together tensile and compressive failure envelopes).
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the tensile strength.  In physical situations this is positive (and always must be greater than negative compressive-strength.
    - name: tip_smoother
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The cone vertex at J2 = 0 will be smoothed by the given amount.  Typical value is 0.1*cohesion
    - name: type
      required: No
      default: !!str CappedDruckerPragerCosseratStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: warn_about_precision_loss
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output a message to the console every time precision-loss is encountered during the Newton-Raphson process
    - name: yield_function_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The return-map process will be deemed to have converged if all yield functions are within yield_function_tol of zero.  If this is set very low then precision-loss might be encountered: if the code detects precision loss then it also deems the return-map process has converged.
    subblocks:
  - name: /Materials/CappedDruckerPragerStressUpdate
    description: |
      
    parameters:
    - name: DP_model
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsPlasticDruckerPrager UserObject that defines the Drucker-Prager parameters (cohesion, friction angle and dilation angle)
    - name: admissible_stress
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        A single admissible value of the value of the stress parameters for internal parameters = 0.  This is used to initialize the return-mapping algorithm during the first nonlinear iteration.  If not given then it is assumed that stress parameters = 0 is admissible.
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compressive_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the compressive strength.  In physical situations this is positive.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: max_NR_iterations
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of Newton-Raphson iterations allowed during the return-map algorithm
    - name: min_step_size
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        In order to help the Newton-Raphson procedure, the applied strain increment may be applied in sub-increments of size greater than this value.  Usually it is better for Moose's nonlinear convergence to increase max_NR_iterations rather than decrease this parameter.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perfect_guess
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Provide a guess to the Newton-Raphson proceedure that is the result from perfect plasticity.  With severe hardening/softening this may be suboptimal.
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: small_dilation
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        If true, and if the trial stress exceeds the tensile strength, then the user gaurantees that the returned stress will be independent of the compressive strength.
    - name: smoothing_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Intersections of the yield surfaces will be smoothed by this amount (this is measured in units of stress).  Often this is related to other physical parameters (eg, 0.1*cohesion) but it is important to set this small enough so that the individual yield surfaces do not mix together in the smoothing process to produce a result where no stress is admissible (for example, mixing together tensile and compressive failure envelopes).
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the tensile strength.  In physical situations this is positive (and always must be greater than negative compressive-strength.
    - name: tip_smoother
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The cone vertex at J2 = 0 will be smoothed by the given amount.  Typical value is 0.1*cohesion
    - name: type
      required: No
      default: !!str CappedDruckerPragerStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: warn_about_precision_loss
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output a message to the console every time precision-loss is encountered during the Newton-Raphson process
    - name: yield_function_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The return-map process will be deemed to have converged if all yield functions are within yield_function_tol of zero.  If this is set very low then precision-loss might be encountered: if the code detects precision loss then it also deems the return-map process has converged.
    subblocks:
  - name: /Materials/CappedMohrCoulombCosseratStressUpdate
    description: |
      
    parameters:
    - name: admissible_stress
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        A single admissible value of the value of the stress parameters for internal parameters = 0.  This is used to initialize the return-mapping algorithm during the first nonlinear iteration.  If not given then it is assumed that stress parameters = 0 is admissible.
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: cohesion
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the cohesion
    - name: compressive_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the compressive strength.  In physical situations this is positive.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: dilation_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the dilation angle (in radians).  Unless you are quite confident, this should be set positive and not greater than the friction angle.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: friction_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the friction angle (in radians)
    - name: host_poissons_ratio
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Poisson's ratio for the isotropic host medium
    - name: host_youngs_modulus
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Young's modulus for the isotropic host medium
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: max_NR_iterations
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of Newton-Raphson iterations allowed during the return-map algorithm
    - name: min_step_size
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        In order to help the Newton-Raphson procedure, the applied strain increment may be applied in sub-increments of size greater than this value.  Usually it is better for Moose's nonlinear convergence to increase max_NR_iterations rather than decrease this parameter.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perfect_guess
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Provide a guess to the Newton-Raphson proceedure that is the result from perfect plasticity.  With severe hardening/softening this may be suboptimal.
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: smoothing_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Intersections of the yield surfaces will be smoothed by this amount (this is measured in units of stress).  Often this is related to other physical parameters (eg, 0.1*cohesion) but it is important to set this small enough so that the individual yield surfaces do not mix together in the smoothing process to produce a result where no stress is admissible (for example, mixing together tensile and compressive failure envelopes).
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the tensile strength.  In physical situations this is positive (and always must be greater than negative compressive-strength.
    - name: type
      required: No
      default: !!str CappedMohrCoulombCosseratStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: warn_about_precision_loss
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output a message to the console every time precision-loss is encountered during the Newton-Raphson process
    - name: yield_function_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The return-map process will be deemed to have converged if all yield functions are within yield_function_tol of zero.  If this is set very low then precision-loss might be encountered: if the code detects precision loss then it also deems the return-map process has converged.
    subblocks:
  - name: /Materials/CappedMohrCoulombStressUpdate
    description: |
      
    parameters:
    - name: admissible_stress
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        A single admissible value of the value of the stress parameters for internal parameters = 0.  This is used to initialize the return-mapping algorithm during the first nonlinear iteration.  If not given then it is assumed that stress parameters = 0 is admissible.
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: cohesion
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the cohesion
    - name: compressive_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the compressive strength.  In physical situations this is positive.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: dilation_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the dilation angle (in radians).  Unless you are quite confident, this should be set positive and not greater than the friction angle.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: friction_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the friction angle (in radians)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: max_NR_iterations
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of Newton-Raphson iterations allowed during the return-map algorithm
    - name: min_step_size
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        In order to help the Newton-Raphson procedure, the applied strain increment may be applied in sub-increments of size greater than this value.  Usually it is better for Moose's nonlinear convergence to increase max_NR_iterations rather than decrease this parameter.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perfect_guess
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Provide a guess to the Newton-Raphson proceedure that is the result from perfect plasticity.  With severe hardening/softening this may be suboptimal.
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: smoothing_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Intersections of the yield surfaces will be smoothed by this amount (this is measured in units of stress).  Often this is related to other physical parameters (eg, 0.1*cohesion) but it is important to set this small enough so that the individual yield surfaces do not mix together in the smoothing process to produce a result where no stress is admissible (for example, mixing together tensile and compressive failure envelopes).
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the tensile strength.  In physical situations this is positive (and always must be greater than negative compressive-strength.
    - name: type
      required: No
      default: !!str CappedMohrCoulombStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: warn_about_precision_loss
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output a message to the console every time precision-loss is encountered during the Newton-Raphson process
    - name: yield_function_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The return-map process will be deemed to have converged if all yield functions are within yield_function_tol of zero.  If this is set very low then precision-loss might be encountered: if the code detects precision loss then it also deems the return-map process has converged.
    subblocks:
  - name: /Materials/CappedWeakInclinedPlaneStressUpdate
    description: |
      
    parameters:
    - name: admissible_stress
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        A single admissible value of the value of the stress parameters for internal parameters = 0.  This is used to initialize the return-mapping algorithm during the first nonlinear iteration.  If not given then it is assumed that stress parameters = 0 is admissible.
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: cohesion
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the cohesion.  Physically the cohesion should not be negative.
    - name: compressive_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the weak-plane compressive strength.  In physical situations this is positive.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: max_NR_iterations
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of Newton-Raphson iterations allowed during the return-map algorithm
    - name: min_step_size
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        In order to help the Newton-Raphson procedure, the applied strain increment may be applied in sub-increments of size greater than this value.  Usually it is better for Moose's nonlinear convergence to increase max_NR_iterations rather than decrease this parameter.
    - name: normal_vector
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The normal vector to the weak plane
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perfect_guess
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Provide a guess to the Newton-Raphson proceedure that is the result from perfect plasticity.  With severe hardening/softening this may be suboptimal.
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: smoothing_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Intersections of the yield surfaces will be smoothed by this amount (this is measured in units of stress).  Often this is related to other physical parameters (eg, 0.1*cohesion) but it is important to set this small enough so that the individual yield surfaces do not mix together in the smoothing process to produce a result where no stress is admissible (for example, mixing together tensile and compressive failure envelopes).
    - name: tan_dilation_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the tan(dilation angle).  Usually the dilation angle is not greater than the friction angle, and it is between 0 and 90deg.
    - name: tan_friction_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of tan(friction angle).  Physically the friction angle should be between 0 and 90deg.
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the weak-plane tensile strength.  In physical situations this is positive (and always must be greater than negative compressive-strength.
    - name: tip_smoother
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The cone vertex at shear-stress = 0 will be smoothed by the given amount.  Typical value is 0.1*cohesion
    - name: type
      required: No
      default: !!str CappedWeakInclinedPlaneStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: warn_about_precision_loss
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output a message to the console every time precision-loss is encountered during the Newton-Raphson process
    - name: yield_function_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The return-map process will be deemed to have converged if all yield functions are within yield_function_tol of zero.  If this is set very low then precision-loss might be encountered: if the code detects precision loss then it also deems the return-map process has converged.
    subblocks:
  - name: /Materials/CappedWeakPlaneCosseratStressUpdate
    description: |
      
    parameters:
    - name: admissible_stress
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        A single admissible value of the value of the stress parameters for internal parameters = 0.  This is used to initialize the return-mapping algorithm during the first nonlinear iteration.  If not given then it is assumed that stress parameters = 0 is admissible.
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: cohesion
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the cohesion.  Physically the cohesion should not be negative.
    - name: compressive_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the weak-plane compressive strength.  In physical situations this is positive.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: max_NR_iterations
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of Newton-Raphson iterations allowed during the return-map algorithm
    - name: min_step_size
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        In order to help the Newton-Raphson procedure, the applied strain increment may be applied in sub-increments of size greater than this value.  Usually it is better for Moose's nonlinear convergence to increase max_NR_iterations rather than decrease this parameter.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perfect_guess
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Provide a guess to the Newton-Raphson proceedure that is the result from perfect plasticity.  With severe hardening/softening this may be suboptimal.
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: smoothing_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Intersections of the yield surfaces will be smoothed by this amount (this is measured in units of stress).  Often this is related to other physical parameters (eg, 0.1*cohesion) but it is important to set this small enough so that the individual yield surfaces do not mix together in the smoothing process to produce a result where no stress is admissible (for example, mixing together tensile and compressive failure envelopes).
    - name: tan_dilation_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the tan(dilation angle).  Usually the dilation angle is not greater than the friction angle, and it is between 0 and 90deg.
    - name: tan_friction_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of tan(friction angle).  Physically the friction angle should be between 0 and 90deg.
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the weak-plane tensile strength.  In physical situations this is positive (and always must be greater than negative compressive-strength.
    - name: tip_smoother
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The cone vertex at shear-stress = 0 will be smoothed by the given amount.  Typical value is 0.1*cohesion
    - name: type
      required: No
      default: !!str CappedWeakPlaneCosseratStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: warn_about_precision_loss
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output a message to the console every time precision-loss is encountered during the Newton-Raphson process
    - name: yield_function_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The return-map process will be deemed to have converged if all yield functions are within yield_function_tol of zero.  If this is set very low then precision-loss might be encountered: if the code detects precision loss then it also deems the return-map process has converged.
    subblocks:
  - name: /Materials/CappedWeakPlaneStressUpdate
    description: |
      
    parameters:
    - name: admissible_stress
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        A single admissible value of the value of the stress parameters for internal parameters = 0.  This is used to initialize the return-mapping algorithm during the first nonlinear iteration.  If not given then it is assumed that stress parameters = 0 is admissible.
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: cohesion
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the cohesion.  Physically the cohesion should not be negative.
    - name: compressive_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the weak-plane compressive strength.  In physical situations this is positive.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: max_NR_iterations
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of Newton-Raphson iterations allowed during the return-map algorithm
    - name: min_step_size
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        In order to help the Newton-Raphson procedure, the applied strain increment may be applied in sub-increments of size greater than this value.  Usually it is better for Moose's nonlinear convergence to increase max_NR_iterations rather than decrease this parameter.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perfect_guess
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Provide a guess to the Newton-Raphson proceedure that is the result from perfect plasticity.  With severe hardening/softening this may be suboptimal.
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: smoothing_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Intersections of the yield surfaces will be smoothed by this amount (this is measured in units of stress).  Often this is related to other physical parameters (eg, 0.1*cohesion) but it is important to set this small enough so that the individual yield surfaces do not mix together in the smoothing process to produce a result where no stress is admissible (for example, mixing together tensile and compressive failure envelopes).
    - name: tan_dilation_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the tan(dilation angle).  Usually the dilation angle is not greater than the friction angle, and it is between 0 and 90deg.
    - name: tan_friction_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of tan(friction angle).  Physically the friction angle should be between 0 and 90deg.
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the weak-plane tensile strength.  In physical situations this is positive (and always must be greater than negative compressive-strength.
    - name: tip_smoother
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The cone vertex at shear-stress = 0 will be smoothed by the given amount.  Typical value is 0.1*cohesion
    - name: type
      required: No
      default: !!str CappedWeakPlaneStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: warn_about_precision_loss
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output a message to the console every time precision-loss is encountered during the Newton-Raphson process
    - name: yield_function_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The return-map process will be deemed to have converged if all yield functions are within yield_function_tol of zero.  If this is set very low then precision-loss might be encountered: if the code detects precision loss then it also deems the return-map process has converged.
    subblocks:
  - name: /Materials/CombinedScalarDamage
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: combination_type
      required: No
      default: !!str Maximum
      cpp_type: MooseEnum
      group_name: 
      options: Maximum Product
      description: |
        How the damage models are combined
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: damage_index_name
      required: No
      default: !!str damage_index
      cpp_type: std::string
      group_name: 
      description: |
        name of the material property where the damage index is stored
    - name: damage_models
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialName, std::allocator<MaterialName> >
      group_name: 
      description: |
        Name of the damage models used to compute the damage index
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: maximum_damage_increment
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        maximum damage increment allowed for simulations with adaptative time step
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: residual_stiffness_fraction
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        Minimum fraction of original material stiffness retained for fully damaged material (when damage_index=1)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CombinedScalarDamage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_old_damage
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the damage index from the previous step in the stress computation
    subblocks:
  - name: /Materials/CompositeEigenstrain
    description: |
      
    parameters:
    - name: args
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        variable dependencies for the prefactor
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain tensor computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: incremental_form
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Should the eigenstrain be in incremental form (for incremental models)?
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tensors
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Component tensors
    - name: type
      required: No
      default: !!str CompositeEigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: weights
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Component weights
    subblocks:
  - name: /Materials/CompositeElasticityTensor
    description: |
      
    parameters:
    - name: args
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        variable dependencies for the prefactor
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tensors
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Component tensors
    - name: type
      required: No
      default: !!str CompositeElasticityTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: weights
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Component weights
    subblocks:
  - name: /Materials/CompositeMobilityTensor
    description: |
      
    parameters:
    - name: M_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the mobility tensor property to generate
    - name: args
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        variable dependencies for the prefactor
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tensors
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Component tensors
    - name: type
      required: No
      default: !!str CompositeMobilityTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: weights
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Component weights
    subblocks:
  - name: /Materials/ComputeAxisymmetric1DFiniteStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: decomposition_method
      required: No
      default: !!str TaylorExpansion
      cpp_type: MooseEnum
      group_name: 
      options: TaylorExpansion EigenSolution
      description: |
        Methods to calculate the strain and rotation increments
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Nonlinear variable for axisymmetric 1D problem
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scalar_out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Scalar variable for axisymmetric 1D problem
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: subblock_index_provider
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        SubblockIndexProvider user object name
    - name: type
      required: No
      default: !!str ComputeAxisymmetric1DFiniteStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeAxisymmetric1DIncrementalStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Nonlinear variable for axisymmetric 1D problem
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scalar_out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Scalar variable for axisymmetric 1D problem
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: subblock_index_provider
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        SubblockIndexProvider user object name
    - name: type
      required: No
      default: !!str ComputeAxisymmetric1DIncrementalStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeAxisymmetric1DSmallStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Nonlinear variable for axisymmetric 1D problem
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scalar_out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Scalar variable for axisymmetric 1D problem
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: subblock_index_provider
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        SubblockIndexProvider user object name
    - name: type
      required: No
      default: !!str ComputeAxisymmetric1DSmallStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeAxisymmetricRZFiniteStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: decomposition_method
      required: No
      default: !!str TaylorExpansion
      cpp_type: MooseEnum
      group_name: 
      options: TaylorExpansion EigenSolution
      description: |
        Methods to calculate the strain and rotation increments
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out-of-plane strain.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeAxisymmetricRZFiniteStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeAxisymmetricRZIncrementalStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out-of-plane strain.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeAxisymmetricRZIncrementalStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeAxisymmetricRZSmallStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out-of-plane strain.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeAxisymmetricRZSmallStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeBeamResultants
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeBeamResultants
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeConcentrationDependentElasticityTensor
    description: |
      
    parameters:
    - name: C0_ijkl
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Stiffness tensor for zero concentration phase
    - name: C1_ijkl
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Stiffness tensor for phase having concentration 1.0
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elasticity_tensor_prefactor
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Optional function to use as a scalar prefactor on the elasticity tensor.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: euler_angle_1
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Euler angle in direction 1
    - name: euler_angle_2
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Euler angle in direction 2
    - name: euler_angle_3
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Euler angle in direction 3
    - name: fill_method0
      required: No
      default: !!str symmetric9
      cpp_type: MooseEnum
      group_name: 
      options: antisymmetric symmetric9 symmetric21 general_isotropic symmetric_isotropic symmetric_isotropic_E_nu antisymmetric_isotropic axisymmetric_rz general principal
      description: |
        The fill method
    - name: fill_method1
      required: No
      default: !!str symmetric9
      cpp_type: MooseEnum
      group_name: 
      options: antisymmetric symmetric9 symmetric21 general_isotropic symmetric_isotropic symmetric_isotropic_E_nu antisymmetric_isotropic axisymmetric_rz general principal
      description: |
        The fill method
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeConcentrationDependentElasticityTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeCosseratElasticityTensor
    description: |
      
    parameters:
    - name: B_ijkl
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Flexural bending rigidity tensor.
    - name: E_ijkl
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Elastic stiffness tensor for material
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elasticity_tensor_prefactor
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Optional function to use as a scalar prefactor on the elasticity tensor.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: fill_method
      required: No
      default: !!str symmetric9
      cpp_type: MooseEnum
      group_name: 
      options: antisymmetric symmetric9 symmetric21 general_isotropic symmetric_isotropic symmetric_isotropic_E_nu antisymmetric_isotropic axisymmetric_rz general principal
      description: |
        The fill method
    - name: fill_method_bending
      required: No
      default: !!str antisymmetric_isotropic
      cpp_type: MooseEnum
      group_name: 
      options: antisymmetric symmetric9 symmetric21 general_isotropic symmetric_isotropic symmetric_isotropic_E_nu antisymmetric_isotropic axisymmetric_rz general principal
      description: |
        The fill method for the 'bending' tensor.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeCosseratElasticityTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeCosseratIncrementalSmallStrain
    description: |
      
    parameters:
    - name: Cosserat_rotations
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The 3 Cosserat rotation variables
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeCosseratIncrementalSmallStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeCosseratLinearElasticStress
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: type
      required: No
      default: !!str ComputeCosseratLinearElasticStress
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Materials/ComputeCosseratSmallStrain
    description: |
      
    parameters:
    - name: Cosserat_rotations
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The 3 Cosserat rotation variables
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeCosseratSmallStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeCrackedStress
    description: |
      
    parameters:
    - name: F_name
      required: No
      default: !!str E_el
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property storing the elastic energy
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The base name used to save the cracked stress
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter for damage
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: finite_strain_model
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        The model is using finite strain
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: No
      default: !!str kappa_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property being created to store the interfacial parameter kappa
    - name: kdamage
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Stiffness of damaged matrix
    - name: mobility_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property being created to store the mobility L
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeCrackedStress
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: uncracked_base_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The base name used to calculate the original stress
    - name: use_current_history_variable
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Use the current value of the history variable.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeDamageStress
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: damage_model
      required: Yes
      default: !!str 
      cpp_type: MaterialName
      group_name: 
      description: |
        Name of the damage model
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: type
      required: No
      default: !!str ComputeDamageStress
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Materials/ComputeDeformGradBasedStress
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: deform_grad_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of deformation gradient variable
    - name: elasticity_tensor_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of elasticity tensor variable
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: jacobian_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of jacobian variable
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stress_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of stress variable
    - name: type
      required: No
      default: !!str ComputeDeformGradBasedStress
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeEigenstrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigen_base
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of values defining the constant base tensor for the Eigenstrain
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain tensor computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: incremental_form
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Should the eigenstrain be in incremental form (for incremental models)?
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: prefactor
      required: No
      default: !!str 1
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material defining the variable dependence
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeEigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeEigenstrainBeamFromVariable
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacement_eigenstrain_variables
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        A list of variable names describing the displacement eigenstrain. If provided, there must be 3 entries, corresponding to the axial and shear eigenstrains in the global coordinate system.
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain vector computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: rotational_eigenstrain_variables
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        A list of variable names describing the rotational eigenstrain. If provided, there must be 3 entries, corresponding to the rotational eigenstrain in the global coordinate system.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeEigenstrainBeamFromVariable
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeEigenstrainFromInitialStress
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The base_name for the elasticity tensor that will be used to compute strain from stress.  Do not provide any base_name if your elasticity tensor does not use one.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain tensor computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: incremental_form
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Should the eigenstrain be in incremental form (for incremental models)?
    - name: initial_stress
      required: Yes
      default: !!str 
      cpp_type: std::vector<FunctionName, std::allocator<FunctionName> >
      group_name: 
      description: |
        A list of functions describing the initial stress.  If provided, there must be 9 of these, corresponding to the xx, yx, zx, xy, yy, zy, xz, yz, zz components respectively.  To compute the eigenstrain correctly, your elasticity tensor should not be time-varying in the first timestep
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeEigenstrainFromInitialStress
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeElasticityBeam
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elasticity_prefactor
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Optional function to use as a scalar prefactor on the elasticity vector for the beam.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poissons_ratio
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Poisson's ratio of the material. Can be supplied as either a number or a variable name.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: shear_coefficient
      required: No
      default: !!str 1
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Scale factor for the shear modulus. Can be supplied as either a number or a variable name.
    - name: type
      required: No
      default: !!str ComputeElasticityBeam
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: youngs_modulus
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Young's modulus of the material. Can be supplied as either a number or a variable name.
    subblocks:
  - name: /Materials/ComputeElasticityTensor
    description: |
      
    parameters:
    - name: C_ijkl
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Stiffness tensor for material
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elasticity_tensor_prefactor
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Optional function to use as a scalar prefactor on the elasticity tensor.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: euler_angle_1
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Euler angle in direction 1
    - name: euler_angle_2
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Euler angle in direction 2
    - name: euler_angle_3
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Euler angle in direction 3
    - name: fill_method
      required: No
      default: !!str symmetric9
      cpp_type: MooseEnum
      group_name: 
      options: antisymmetric symmetric9 symmetric21 general_isotropic symmetric_isotropic symmetric_isotropic_E_nu antisymmetric_isotropic axisymmetric_rz general principal
      description: |
        The fill method
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeElasticityTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeElasticityTensorCP
    description: |
      
    parameters:
    - name: C_ijkl
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Stiffness tensor for material
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elasticity_tensor_prefactor
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Optional function to use as a scalar prefactor on the elasticity tensor.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: euler_angle_1
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Euler angle in direction 1
    - name: euler_angle_2
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Euler angle in direction 2
    - name: euler_angle_3
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Euler angle in direction 3
    - name: fill_method
      required: No
      default: !!str symmetric9
      cpp_type: MooseEnum
      group_name: 
      options: antisymmetric symmetric9 symmetric21 general_isotropic symmetric_isotropic symmetric_isotropic_E_nu antisymmetric_isotropic axisymmetric_rz general principal
      description: |
        The fill method
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: read_prop_user_object
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The ElementReadPropertyFile GeneralUserObject to read element specific property values from file
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeElasticityTensorCP
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeExtraStressConstant
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_stress_tensor
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of values defining the constant extra stress to add, in order 11, 22, 33, 23, 13, 12
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: prefactor
      required: No
      default: !!str 1
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material defining additional constant prefactor
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeExtraStressConstant
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeFiniteBeamStrain
    description: |
      
    parameters:
    - name: Ay
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        First moment of area of the beam about y axis. Can be supplied as either a number or a variable name.
    - name: Az
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        First moment of area of the beam about z asix. Can be supplied as either a number or a variable name.
    - name: Ix
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Second moment of area of the beam about x axis. Can be supplied as either a number or a variable name. Defaults to Iy+Iz.
    - name: Iy
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Second moment of area of the beam about y axis. Can be supplied as either a number or a variable name.
    - name: Iz
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Second moment of area of the beam about z axis. Can be supplied as either a number or a variable name.
    - name: area
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Cross-section area of the beam. Can be supplied as either a number or a variable name.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of beam eigenstrains to be applied in this strain calculation.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: large_strain
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true if large strain are to be calculated.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: rotations
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The rotations appropriate for the simulation geometry and coordinate system
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeFiniteBeamStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: y_orientation
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Orientation of the y direction along with Iyy is provided. This should be perpendicular to the axis of the beam.
    subblocks:
  - name: /Materials/ComputeFiniteStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: decomposition_method
      required: No
      default: !!str TaylorExpansion
      cpp_type: MooseEnum
      group_name: 
      options: TaylorExpansion EigenSolution
      description: |
        Methods to calculate the strain and rotation increments
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeFiniteStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeFiniteStrainElasticStress
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: type
      required: No
      default: !!str ComputeFiniteStrainElasticStress
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Materials/ComputeGlobalStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the displacement variables
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain_uo
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The name of the GlobalStrainUserObject
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scalar_global_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Scalar variable for global strain
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeGlobalStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeIncrementalBeamStrain
    description: |
      
    parameters:
    - name: Ay
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        First moment of area of the beam about y axis. Can be supplied as either a number or a variable name.
    - name: Az
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        First moment of area of the beam about z asix. Can be supplied as either a number or a variable name.
    - name: Ix
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Second moment of area of the beam about x axis. Can be supplied as either a number or a variable name. Defaults to Iy+Iz.
    - name: Iy
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Second moment of area of the beam about y axis. Can be supplied as either a number or a variable name.
    - name: Iz
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Second moment of area of the beam about z axis. Can be supplied as either a number or a variable name.
    - name: area
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Cross-section area of the beam. Can be supplied as either a number or a variable name.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of beam eigenstrains to be applied in this strain calculation.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: large_strain
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true if large strain are to be calculated.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: rotations
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The rotations appropriate for the simulation geometry and coordinate system
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeIncrementalBeamStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: y_orientation
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Orientation of the y direction along with Iyy is provided. This should be perpendicular to the axis of the beam.
    subblocks:
  - name: /Materials/ComputeIncrementalSmallStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeIncrementalSmallStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeInstantaneousThermalExpansionFunctionEigenstrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain tensor computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: incremental_form
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Should the eigenstrain be in incremental form (for incremental models)?
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stress_free_temperature
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Reference temperature at which there is no thermal expansion for thermal eigenstrain calculation
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled temperature
    - name: thermal_expansion_function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Function describing the instantaneous thermal expansion coefficient as a function of temperature
    - name: type
      required: No
      default: !!str ComputeInstantaneousThermalExpansionFunctionEigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeInterfaceStress
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: op_range
      required: No
      default: !!str 1 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Range over which order parameters change across an interface. By default order parameters are assumed to vary from 0 to 1
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: planar_stress_name
      required: No
      default: !!str extra_stress
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Material property name for the interfacial planar stress
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stress
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Interfacial planar stress magnitude (one value to apply to all order parameters or one value per order parameter listed in 'v')
    - name: type
      required: No
      default: !!str ComputeInterfaceStress
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameters that define the interface. The interface is the region where the gradient of this order parameter is non-zero.
    subblocks:
  - name: /Materials/ComputeIsotropicElasticityTensor
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bulk_modulus
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The bulk modulus for the material.
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elasticity_tensor_prefactor
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Optional function to use as a scalar prefactor on the elasticity tensor.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: lambda
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Lame's first constant for the material.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poissons_ratio
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Poisson's ratio for the material.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: shear_modulus
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The shear modulus of the material.
    - name: type
      required: No
      default: !!str ComputeIsotropicElasticityTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: youngs_modulus
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Young's modulus of the material.
    subblocks:
  - name: /Materials/ComputeIsotropicLinearElasticPFFractureStress
    description: |
      
    parameters:
    - name: F_name
      required: No
      default: !!str E_el
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property storing the elastic energy
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter for damage
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kdamage
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Stiffness of damaged matrix
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: type
      required: No
      default: !!str ComputeIsotropicLinearElasticPFFractureStress
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_current_history_variable
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Use the current value of the history variable.
    subblocks:
  - name: /Materials/ComputeLayeredCosseratElasticityTensor
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elasticity_tensor_prefactor
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Optional function to use as a scalar prefactor on the elasticity tensor.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: joint_normal_stiffness
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The joint normal stiffness
    - name: joint_shear_stiffness
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The joint shear stiffness
    - name: layer_thickness
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The layer thickness
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poisson
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Poisson's ratio
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeLayeredCosseratElasticityTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: young
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Young's modulus
    subblocks:
  - name: /Materials/ComputeLinearElasticPFFractureStress
    description: |
      
    parameters:
    - name: F_name
      required: No
      default: !!str E_el
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property storing the elastic energy
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter for damage
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: No
      default: !!str kappa_op
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property being created to store the interfacial parameter kappa
    - name: kdamage
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        Stiffness of damaged matrix
    - name: mobility_name
      required: No
      default: !!str L
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property being created to store the mobility L
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: type
      required: No
      default: !!str ComputeLinearElasticPFFractureStress
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_current_history_variable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Use the current value of the history variable.
    subblocks:
  - name: /Materials/ComputeLinearElasticStress
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: type
      required: No
      default: !!str ComputeLinearElasticStress
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Materials/ComputeLinearViscoelasticStress
    description: |
      
    parameters:
    - name: apparent_creep_strain
      required: No
      default: !!str apparent_creep_strain
      cpp_type: std::string
      group_name: 
      description: |
        name of the apparent creep strain (defined by a LinearViscoelasticityBase material)
    - name: apparent_elasticity_tensor
      required: No
      default: !!str apparent_elasticity_tensor
      cpp_type: std::string
      group_name: 
      description: |
        name of the apparent elasticity tensor (defined by a LinearViscoelasticityBase material)
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elasticity_tensor_inv
      required: No
      default: !!str elasticity_tensor_inv
      cpp_type: std::string
      group_name: 
      description: |
        name of the real compliance tensor (defined by a LinearViscoelasticityBase material)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: type
      required: No
      default: !!str ComputeLinearViscoelasticStress
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Materials/ComputeMeanThermalExpansionFunctionEigenstrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain tensor computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: incremental_form
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Should the eigenstrain be in incremental form (for incremental models)?
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stress_free_temperature
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Reference temperature at which there is no thermal expansion for thermal eigenstrain calculation
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled temperature
    - name: thermal_expansion_function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Function describing the mean thermal expansion as a function of temperature
    - name: thermal_expansion_function_reference_temperature
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Reference temperature for thermal_exansion_function (IMPORTANT: this is different in general from the stress_free_temperature)
    - name: type
      required: No
      default: !!str ComputeMeanThermalExpansionFunctionEigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeMultiPlasticityStress
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: deactivation_scheme
      required: No
      default: !!str optimized
      cpp_type: MooseEnum
      group_name: 
      options: optimized safe dumb optimized_to_safe safe_to_dumb optimized_to_safe_to_dumb optimized_to_dumb
      description: |
        Scheme by which constraints are deactivated.  (NOTE: This is irrelevant if there is only one yield surface.)  safe: return to the yield surface and then deactivate constraints with negative plasticity multipliers.  optimized: deactivate a constraint as soon as its plasticity multiplier becomes negative.  dumb: iteratively try all combinations of active constraints until the solution is found.  You may specify fall-back options.  Eg optimized_to_safe: first use 'optimized', and if that fails, try the return with 'safe'.
    - name: debug_fspb
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: none crash jacobian jacobian_and_linear_system
      description: |
        Debug types for use by developers when creating new plasticity models, not for general use.  2 = debug Jacobian entries, 3 = check the entire Jacobian, and check Ax=b
    - name: debug_intnl_change
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Debug finite differencing parameters for the internal parameters
    - name: debug_jac_at_intnl
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Debug Jacobian entries at these internal parameters
    - name: debug_jac_at_pm
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Debug Jacobian entries at these plastic multipliers
    - name: debug_jac_at_stress
      required: No
      default: !!str (xx,xy,xz)=(       0,        0,        0) (yx,yy,yz)=(       0,        0,        0) (zx,zy,zz)=(       0,        0,        0) 
      cpp_type: libMesh::TensorValue<double>
      group_name: 
      description: |
        Debug Jacobian entries at this stress.  For use by developers
    - name: debug_pm_change
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Debug finite differencing parameters for the plastic multipliers
    - name: debug_stress_change
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Debug finite differencing parameter for the stress
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ep_plastic_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the plastic strain increment constraints have L2 norm less than this.
    - name: ignore_failures
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        The return-map algorithm will return with the best admissible stresses and internal parameters that it can, even if they don't fully correspond to the applied strain increment.  To speed computations, this flag can be set to true, the max_NR_iterations set small, and the min_stepsize large.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: linear_dependent
      required: No
      default: !!str 0.0001
      cpp_type: double
      group_name: 
      description: |
        Flow directions are considered linearly dependent if the smallest singular value is less than linear_dependent times the largest singular value
    - name: max_NR_iterations
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of Newton-Raphson iterations allowed
    - name: max_stepsize_for_dumb
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        If your deactivation_scheme is 'something_to_dumb', then 'dumb' will only be used if the stepsize falls below this value.  This parameter is useful because the 'dumb' scheme is computationally expensive
    - name: min_stepsize
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        If ordinary Newton-Raphson + line-search fails, then the applied strain increment is subdivided, and the return-map is tried again.  This parameter is the minimum fraction of applied strain increment that may be applied before the algorithm gives up entirely
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: plastic_models
      required: No
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of names of user objects that define the plastic models that could be active for this material.  If no plastic_models are provided, only elasticity will be used.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: specialIC
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: none rock joint
      description: |
        For certain combinations of plastic models, the set of active constraints can be initialized optimally.  'none': no special initialization is performed.  For all other choices, the plastic_models must be chosen to have the following types.  'rock': 'TensileMulti MohrCoulombMulti'.  'joint': 'WeakPlaneTensile WeakPlaneShear'.
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: tangent_operator
      required: No
      default: !!str nonlinear
      cpp_type: MooseEnum
      group_name: 
      options: elastic linear nonlinear
      description: |
        Type of tangent operator to return.  'elastic': return the elasticity tensor.  'linear': return the consistent tangent operator that is correct for plasticity with yield functions linear in stress.  'nonlinear': return the full, general consistent tangent operator.  The calculations assume the hardening potentials are independent of stress and hardening parameters.
    - name: transverse_direction
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        If this parameter is provided, before the return-map algorithm is called a rotation is performed so that the 'z' axis in the new frame lies along the transverse_direction in the original frame.  After returning, the inverse rotation is performed.  The transverse_direction will itself rotate with large strains.  This is so that transversely-isotropic plasticity models may be easily defined in the frame where the isotropy holds in the x-y plane.
    - name: type
      required: No
      default: !!str ComputeMultiPlasticityStress
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Materials/ComputeMultipleInelasticCosseratStress
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-05
      cpp_type: double
      group_name: 
      description: |
        Absolute convergence tolerance for the stress update iterations over the stress change after all update materials are called
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: combined_inelastic_strain_weights
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The combined_inelastic_strain Material Property is a weighted sum of the model inelastic strains.  This parameter is a vector of weights, of the same length as inelastic_models.  Default = '1 1 ... 1'.  This parameter is set to 1 if the number of models = 1
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cycle_models
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        At timestep N use only inelastic model N % num_models.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: inelastic_models
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialName, std::allocator<MaterialName> >
      group_name: 
      description: |
        The material objects to use to calculate stress and inelastic strains. Note: specify creep models first and plasticity models second.
    - name: internal_solve_full_iteration_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to output stress update iteration information over the stress change
    - name: max_iterations
      required: No
      default: !!str 30
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of the stress update iterations over the stress change after all update materials are called
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: relative_tolerance
      required: No
      default: !!str 1e-05
      cpp_type: double
      group_name: 
      description: |
        Relative convergence tolerance for the stress update iterations over the stress change after all update materials are called
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: tangent_operator
      required: No
      default: !!str nonlinear
      cpp_type: MooseEnum
      group_name: 
      options: elastic nonlinear
      description: |
        Type of tangent operator to return.  'elastic': return the elasticity tensor.  'nonlinear': return the full, general consistent tangent operator.
    - name: type
      required: No
      default: !!str ComputeMultipleInelasticCosseratStress
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Materials/ComputeMultipleInelasticStress
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-05
      cpp_type: double
      group_name: 
      description: |
        Absolute convergence tolerance for the stress update iterations over the stress change after all update materials are called
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: combined_inelastic_strain_weights
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The combined_inelastic_strain Material Property is a weighted sum of the model inelastic strains.  This parameter is a vector of weights, of the same length as inelastic_models.  Default = '1 1 ... 1'.  This parameter is set to 1 if the number of models = 1
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cycle_models
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        At timestep N use only inelastic model N % num_models.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: inelastic_models
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialName, std::allocator<MaterialName> >
      group_name: 
      description: |
        The material objects to use to calculate stress and inelastic strains. Note: specify creep models first and plasticity models second.
    - name: internal_solve_full_iteration_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to output stress update iteration information over the stress change
    - name: max_iterations
      required: No
      default: !!str 30
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of the stress update iterations over the stress change after all update materials are called
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: relative_tolerance
      required: No
      default: !!str 1e-05
      cpp_type: double
      group_name: 
      description: |
        Relative convergence tolerance for the stress update iterations over the stress change after all update materials are called
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: tangent_operator
      required: No
      default: !!str nonlinear
      cpp_type: MooseEnum
      group_name: 
      options: elastic nonlinear
      description: |
        Type of tangent operator to return.  'elastic': return the elasticity tensor.  'nonlinear': return the full, general consistent tangent operator.
    - name: type
      required: No
      default: !!str ComputeMultipleInelasticStress
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Materials/ComputePlaneFiniteStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: decomposition_method
      required: No
      default: !!str TaylorExpansion
      cpp_type: MooseEnum
      group_name: 
      options: TaylorExpansion EigenSolution
      description: |
        Methods to calculate the strain and rotation increments
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out-of-plane strain.
    - name: out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Nonlinear variable for plane stress condition
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scalar_out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Scalar variable for generalized plane strain
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: subblock_index_provider
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        SubblockIndexProvider user object name
    - name: type
      required: No
      default: !!str ComputePlaneFiniteStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputePlaneIncrementalStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out-of-plane strain.
    - name: out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Nonlinear variable for plane stress condition
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scalar_out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Scalar variable for generalized plane strain
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: subblock_index_provider
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        SubblockIndexProvider user object name
    - name: type
      required: No
      default: !!str ComputePlaneIncrementalStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputePlaneSmallStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out-of-plane strain.
    - name: out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Nonlinear variable for plane stress condition
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scalar_out_of_plane_strain
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Scalar variable for generalized plane strain
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: subblock_index_provider
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        SubblockIndexProvider user object name
    - name: type
      required: No
      default: !!str ComputePlaneSmallStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputePlasticHeatEnergy
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputePlasticHeatEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputePolycrystalElasticityTensor
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elasticity_tensor_prefactor
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Optional function to use as a scalar prefactor on the elasticity tensor.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: grain_tracker
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Name of GrainTracker user object that provides RankFourTensors
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: length_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Lengthscale of the problem, in meters
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: pressure_scale
      required: No
      default: !!str 1e+06
      cpp_type: double
      group_name: 
      description: |
        Pressure scale of the problem, in pa
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputePolycrystalElasticityTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    subblocks:
  - name: /Materials/ComputeRSphericalFiniteStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: decomposition_method
      required: No
      default: !!str TaylorExpansion
      cpp_type: MooseEnum
      group_name: 
      options: TaylorExpansion EigenSolution
      description: |
        Methods to calculate the strain and rotation increments
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeRSphericalFiniteStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeRSphericalIncrementalStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeRSphericalIncrementalStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeRSphericalSmallStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeRSphericalSmallStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeReducedOrderEigenstrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain tensor computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: incremental_form
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Should the eigenstrain be in incremental form (for incremental models)?
    - name: input_eigenstrain_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeReducedOrderEigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeSmallStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: global_strain
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Optional material property holding a global strain tensor applied to the mesh as a whole
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeSmallStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: volumetric_locking_correction
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to correct volumetric locking
    subblocks:
  - name: /Materials/ComputeSmearedCrackingStress
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-05
      cpp_type: double
      group_name: 
      description: |
        Absolute convergence tolerance for the stress update iterations over the stress change after all update materials are called
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: combined_inelastic_strain_weights
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The combined_inelastic_strain Material Property is a weighted sum of the model inelastic strains.  This parameter is a vector of weights, of the same length as inelastic_models.  Default = '1 1 ... 1'.  This parameter is set to 1 if the number of models = 1
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cracking_beta
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Coefficient used to control the softening in the exponential model.  When set to 1, the initial softening slope is equal to the negative of the Young's modulus.  Smaller numbers scale down that slope.
    - name: cracking_neg_fraction
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The fraction of the cracking strain at which a transitition begins during decreasing strain to the original stiffness.
    - name: cracking_release
      required: No
      default: !!str abrupt
      cpp_type: MooseEnum
      group_name: 
      options: abrupt exponential power
      description: |
        The cracking release type.  'abrupt' (default) gives an abrupt stress release, 'exponential' uses an exponential softening model, and 'power' uses a power law
    - name: cracking_residual_stress
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The fraction of the cracking stress allowed to be maintained following a crack.
    - name: cracking_stress
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The stress threshold beyond which cracking occurs. Negative values prevent cracking.
    - name: cycle_models
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        At timestep N use only inelastic model N % num_models.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: inelastic_models
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialName, std::allocator<MaterialName> >
      group_name: 
      description: |
        The material objects to use to calculate stress and inelastic strains. Note: specify creep models first and plasticity models second.
    - name: internal_solve_full_iteration_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to output stress update iteration information over the stress change
    - name: max_cracks
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        The maximum number of cracks allowed at a material point.
    - name: max_iterations
      required: No
      default: !!str 30
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of the stress update iterations over the stress change after all update materials are called
    - name: max_stress_correction
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Maximum permitted correction to the predicted stress as a ratio of the stress change to the predicted stress from the previous step's damage level. Values less than 1 will improve robustness, but not be as accurate.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: prescribed_crack_directions
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: x y z
      description: |
        Prescribed directions of first cracks
    - name: relative_tolerance
      required: No
      default: !!str 1e-05
      cpp_type: double
      group_name: 
      description: |
        Relative convergence tolerance for the stress update iterations over the stress change after all update materials are called
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: shear_retention_factor
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Fraction of original shear stiffness to be retained after cracking
    - name: softening_models
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialName, std::allocator<MaterialName> >
      group_name: 
      description: |
        The material objects used to compute softening behavior for loading a crack.Either 1 or 3 models must be specified. If a single model is specified, it isused for all directions. If 3 models are specified, they will be used for the3 crack directions in sequence
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: tangent_operator
      required: No
      default: !!str nonlinear
      cpp_type: MooseEnum
      group_name: 
      options: elastic nonlinear
      description: |
        Type of tangent operator to return.  'elastic': return the elasticity tensor.  'nonlinear': return the full, general consistent tangent operator.
    - name: type
      required: No
      default: !!str ComputeSmearedCrackingStress
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Materials/ComputeStrainIncrementBasedStress
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: inelastic_strain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Names of inelastic strain properties
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: type
      required: No
      default: !!str ComputeStrainIncrementBasedStress
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Materials/ComputeThermalExpansionEigenstrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain tensor computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: incremental_form
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Should the eigenstrain be in incremental form (for incremental models)?
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stress_free_temperature
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Reference temperature at which there is no thermal expansion for thermal eigenstrain calculation
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled temperature
    - name: thermal_expansion_coeff
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Thermal expansion coefficient
    - name: type
      required: No
      default: !!str ComputeThermalExpansionEigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeThermalExpansionEigenstrainBeam
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain vector computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stress_free_temperature
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Reference temperature at which there is no thermal expansion for thermal eigenstrain calculation
    - name: temperature
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled temperature
    - name: thermal_expansion_coeff
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Thermal expansion coefficient
    - name: type
      required: No
      default: !!str ComputeThermalExpansionEigenstrainBeam
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeVariableBaseEigenStrain
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: base_tensor_property_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of base tensor property
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain tensor computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: incremental_form
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Should the eigenstrain be in incremental form (for incremental models)?
    - name: offset_tensor
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of values defining the constant base tensor for the Eigenstrain
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: prefactor
      required: No
      default: !!str 1
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material defining the variable dependence
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeVariableBaseEigenStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeVariableEigenstrain
    description: |
      
    parameters:
    - name: args
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        variable dependencies for the prefactor
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigen_base
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of values defining the constant base tensor for the Eigenstrain
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain tensor computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: incremental_form
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Should the eigenstrain be in incremental form (for incremental models)?
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: prefactor
      required: No
      default: !!str 1
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material defining the variable dependence
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeVariableEigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ComputeVariableIsotropicElasticityTensor
    description: |
      
    parameters:
    - name: args
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable dependence for the Young's Modulus and Poisson's Ratio materials
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elasticity_tensor_prefactor
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Optional function to use as a scalar prefactor on the elasticity tensor.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poissons_ratio
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material defining the Poisson's Ratio
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeVariableIsotropicElasticityTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: youngs_modulus
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material defining the Young's Modulus
    subblocks:
  - name: /Materials/ComputeVolumetricDeformGrad
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: post_deform_grad_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of adjusted deformation gradient variable
    - name: pre_deform_grad_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of pre-adjusted deformation gradient variable
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeVolumetricDeformGrad
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: volumetric_deform_grad_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of volumetric deformation gradient variable
    subblocks:
  - name: /Materials/ComputeVolumetricEigenstrain
    description: |
      
    parameters:
    - name: args
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        variable dependencies for the volumetric_expansion
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigenstrain_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property name for the eigenstrain tensor computed by this model. IMPORTANT: The name of this property must also be provided to the strain calculator.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: incremental_form
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Should the eigenstrain be in incremental form (for incremental models)?
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeVolumetricEigenstrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: volumetric_materials
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of scalar materials defining the volumetric change
    subblocks:
  - name: /Materials/ConstantAnisotropicMobility
    description: |
      
    parameters:
    - name: M_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the mobility tensor porperty to generate
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tensor
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Tensor values
    - name: type
      required: No
      default: !!str ConstantAnisotropicMobility
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/CrossTermBarrierFunctionMaterial
    description: |
      
    parameters:
    - name: W_ij
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Terms controlling barrier height set W=1 in DerivativeMultiPhaseMaterial for these to apply
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        eta_i order parameters, one for each h
    - name: function_name
      required: No
      default: !!str g
      cpp_type: std::string
      group_name: 
      description: |
        actual name for g(eta_i)
    - name: g_order
      required: No
      default: !!str SIMPLE
      cpp_type: MooseEnum
      group_name: 
      options: SIMPLE LOW
      description: |
        Polynomial order of the barrier function g(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CrossTermBarrierFunctionMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/DeformedGrainMaterial
    description: |
      
    parameters:
    - name: Burg_vec
      required: No
      default: !!str 3e-10
      cpp_type: double
      group_name: 
      description: |
        Length of Burger Vector in m
    - name: Disloc_Den
      required: No
      default: !!str 9e+15
      cpp_type: double
      group_name: 
      description: |
        Dislocation Density in m^-2
    - name: Elas_Mod
      required: No
      default: !!str 2.5e+10
      cpp_type: double
      group_name: 
      description: |
        Elastic Modulus in J/m^3
    - name: GBE
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Grain boundary energy in J/m^2
    - name: GBMobility
      required: No
      default: !!str 2e-13
      cpp_type: double
      group_name: 
      description: |
        GB mobility input in m^4/(J*s)
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: deformed_grain_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of OP representing deformed grains
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: grain_tracker
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The GrainTracker UserObject to get values from.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: int_width
      required: No
      default: !!str 4
      cpp_type: double
      group_name: 
      description: |
        Diffuse Interface width in length_scale unit
    - name: length_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Length scale in m, where default is nm
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: time_scale
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        Time scale in sec, where default is micro sec
    - name: type
      required: No
      default: !!str DeformedGrainMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    subblocks:
  - name: /Materials/DerivativeMultiPhaseMaterial
    description: |
      
    parameters:
    - name: W
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Energy barrier for the phase transformation from A to B
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Arguments of the fi free energies - use vector coupling
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken (2 or 3)
    - name: displacement_gradients
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of displacement gradient variables (see Modules/PhaseField/DisplacementGradients action)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameters for all phases.
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: fi_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of free energies for the n phases
    - name: g
      required: No
      default: !!str g
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Barrier Function Material that provides g(eta_i)
    - name: hi_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide h(eta_i)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str DerivativeMultiPhaseMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/DerivativeParsedMaterial
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Arguments of F() - use vector coupling
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_expressions
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of values for the constants in constant_names (can be an FParser expression)
    - name: constant_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of constants used in the parsed function (use this for kB etc.)
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: function
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        FParser function expression for the phase free energy
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: material_property_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of material properties used in the parsed function
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: tol_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of variable names to be protected from being 0 or 1 within a tolerance (needed for log(c) and log(1-c) terms)
    - name: tol_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of tolerance values for the variables in tol_names
    - name: type
      required: No
      default: !!str DerivativeParsedMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/DerivativeSumMaterial
    description: |
      
    parameters:
    - name: args
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Arguments of the free energy functions being summed - use vector coupling
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 'Advanced'
      description: |
        Constant to be added to the prefactor multiplied sum.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken (2 or 3)
    - name: displacement_gradients
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of displacement gradient variables (see Modules/PhaseField/DisplacementGradients action)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: prefactor
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Advanced'
      description: |
        Prefactor to multiply the sum term with.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: sum_materials
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str DerivativeSumMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/DerivativeTwoPhaseMaterial
    description: |
      
    parameters:
    - name: W
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Energy barrier for the phase transformation from A to B
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Arguments of fa and fb - use vector coupling
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken (2 or 3)
    - name: displacement_gradients
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of displacement gradient variables (see Modules/PhaseField/DisplacementGradients action)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: fa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Phase A material (at eta=0)
    - name: fb_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Phase A material (at eta=1)
    - name: g
      required: No
      default: !!str g
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Barrier Function Material that provides g(eta)
    - name: h
      required: No
      default: !!str h
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Switching Function Material that provides h(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str DerivativeTwoPhaseMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/DiscreteNucleation
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken (2 or 3)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: map
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        DiscreteNucleationMap user object
    - name: op_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        List of variables to force to a target concentration value
    - name: op_values
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        List of target concentration values
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: penalty
      required: No
      default: !!str 20
      cpp_type: double
      group_name: 
      description: |
        Penalty factor for enforcing the target concentrations
    - name: penalty_mode
      required: No
      default: !!str MATCH
      cpp_type: MooseEnum
      group_name: 
      options: MATCH MIN MAX
      description: |
        Match the target concentration or take it as a minimum or maximum concentration target
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str DiscreteNucleation
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ElasticEnergyMaterial
    description: |
      
    parameters:
    - name: args
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Arguments of F() - use vector coupling
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material property base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken (2 or 3)
    - name: displacement_gradients
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of displacement gradient variables (see Modules/PhaseField/DisplacementGradients action)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str ElasticEnergyMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/EshelbyTensor
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled temperature
    - name: type
      required: No
      default: !!str EshelbyTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ExponentialSoftening
    description: |
      
    parameters:
    - name: alpha
      required: No
      default: !!str -1
      cpp_type: double
      group_name: 
      description: |
        Initial slope of the exponential softening curve at crack initiation. If not specified, it is equal to the negative of the Young's modulus.
    - name: beta
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Multiplier applied to alpha to control the exponential softening behavior.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: residual_stress
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The fraction of the cracking stress allowed to be maintained following a crack.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ExponentialSoftening
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ExternalForceDensityMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration field
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled order parameters
    - name: force_x
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        The forcing function in x direction.
    - name: force_y
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        The forcing function in y direction.
    - name: force_z
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        The forcing function in z direction.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: k
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        stiffness constant multiplier
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled order parameters (num_name)
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ExternalForceDensityMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled order parameters (base_name)
    subblocks:
  - name: /Materials/FiniteStrainCPSlipRateRes
    description: |
      
    parameters:
    - name: abs_tol
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        Constitutive stress residue absolute tolerance
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: flowprops
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Parameters used in slip rate equations
    - name: gen_random_stress_flag
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to generate random stress to perform time cutback on constitutive failure
    - name: gprops
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Initial values of slip system resistances
    - name: gtol
      required: No
      default: !!str 100
      cpp_type: double
      group_name: 
      description: |
        Constitutive slip system resistance residual tolerance
    - name: hprops
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Hardening properties
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: input_random_scaling_var
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to input scaling variable: _Cijkl(0,0,0,0) when false
    - name: intvar_read_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: slip_sys_file slip_sys_res_file none
      description: |
        Read from options for initial value of internal variables: Default from .i file
    - name: line_search_maxiter
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Line search bisection method maximum number of iteration
    - name: line_search_method
      required: No
      default: !!str CUT_HALF
      cpp_type: MooseEnum
      group_name: 
      options: CUT_HALF BISECTION
      description: |
        The method used in line search
    - name: line_search_tol
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        Line search bisection method tolerance
    - name: maximum_substep_iteration
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of substep iteration
    - name: maxiter
      required: No
      default: !!str 100
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of iterations for stress update
    - name: maxitergss
      required: No
      default: !!str 100
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of iterations for slip system resistance update
    - name: min_line_search_step_size
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        Minimum line search step size
    - name: nss
      required: Yes
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Number of slip systems
    - name: num_slip_sys_flowrate_props
      required: No
      default: !!str 2
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of flow rate properties for a slip system
    - name: num_slip_sys_props
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of slip system specific properties provided in the file containing slip system normals and directions
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: random_scaling_var
      required: No
      default: !!str 1e+09
      cpp_type: double
      group_name: 
      description: |
        Random scaling variable: Large value can cause non-positive definiteness
    - name: random_seed
      required: No
      default: !!str 2000
      cpp_type: unsigned int
      group_name: 
      description: |
        Random integer used to generate random stress when constitutive failure occurs
    - name: read_prop_user_object
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The ElementReadPropertyFile GeneralUserObject to read element specific property values from file
    - name: rtol
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        Constitutive stress residue relative tolerance
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: slip_incr_tol
      required: No
      default: !!str 0.02
      cpp_type: double
      group_name: 
      description: |
        Maximum allowable slip in an increment
    - name: slip_sys_file_name
      required: Yes
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the slip system
    - name: slip_sys_flow_prop_file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the values of slip rate equation parameters
    - name: slip_sys_hard_prop_file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the values of hardness evolution parameters
    - name: slip_sys_res_prop_file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the initial values of slip system resistances
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: tan_mod_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: exact none
      description: |
        Type of tangent moduli for preconditioner: default elastic
    - name: type
      required: No
      default: !!str FiniteStrainCPSlipRateRes
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_line_search
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Use line search in constitutive update
    subblocks:
  - name: /Materials/FiniteStrainCrystalPlasticity
    description: |
      
    parameters:
    - name: abs_tol
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        Constitutive stress residue absolute tolerance
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: flowprops
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Parameters used in slip rate equations
    - name: gen_random_stress_flag
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to generate random stress to perform time cutback on constitutive failure
    - name: gprops
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Initial values of slip system resistances
    - name: gtol
      required: No
      default: !!str 100
      cpp_type: double
      group_name: 
      description: |
        Constitutive slip system resistance residual tolerance
    - name: hprops
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Hardening properties
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: input_random_scaling_var
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag to input scaling variable: _Cijkl(0,0,0,0) when false
    - name: intvar_read_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: slip_sys_file slip_sys_res_file none
      description: |
        Read from options for initial value of internal variables: Default from .i file
    - name: line_search_maxiter
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Line search bisection method maximum number of iteration
    - name: line_search_method
      required: No
      default: !!str CUT_HALF
      cpp_type: MooseEnum
      group_name: 
      options: CUT_HALF BISECTION
      description: |
        The method used in line search
    - name: line_search_tol
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        Line search bisection method tolerance
    - name: maximum_substep_iteration
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of substep iteration
    - name: maxiter
      required: No
      default: !!str 100
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of iterations for stress update
    - name: maxitergss
      required: No
      default: !!str 100
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of iterations for slip system resistance update
    - name: min_line_search_step_size
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        Minimum line search step size
    - name: nss
      required: Yes
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Number of slip systems
    - name: num_slip_sys_flowrate_props
      required: No
      default: !!str 2
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of flow rate properties for a slip system
    - name: num_slip_sys_props
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of slip system specific properties provided in the file containing slip system normals and directions
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: random_scaling_var
      required: No
      default: !!str 1e+09
      cpp_type: double
      group_name: 
      description: |
        Random scaling variable: Large value can cause non-positive definiteness
    - name: random_seed
      required: No
      default: !!str 2000
      cpp_type: unsigned int
      group_name: 
      description: |
        Random integer used to generate random stress when constitutive failure occurs
    - name: read_prop_user_object
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The ElementReadPropertyFile GeneralUserObject to read element specific property values from file
    - name: rtol
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        Constitutive stress residue relative tolerance
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: slip_incr_tol
      required: No
      default: !!str 0.02
      cpp_type: double
      group_name: 
      description: |
        Maximum allowable slip in an increment
    - name: slip_sys_file_name
      required: Yes
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the slip system
    - name: slip_sys_flow_prop_file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the values of slip rate equation parameters
    - name: slip_sys_hard_prop_file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the values of hardness evolution parameters
    - name: slip_sys_res_prop_file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the initial values of slip system resistances
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: tan_mod_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: exact none
      description: |
        Type of tangent moduli for preconditioner: default elastic
    - name: type
      required: No
      default: !!str FiniteStrainCrystalPlasticity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_line_search
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Use line search in constitutive update
    subblocks:
  - name: /Materials/FiniteStrainHyperElasticViscoPlastic
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: flow_rate_user_objects
      required: No
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of User object names that computes flow rate and derivatives
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: internal_var_rate_user_objects
      required: No
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of User object names that computes internal variable rates and derivatives
    - name: internal_var_user_objects
      required: No
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of User object names that integrates internal variables and computes derivatives
    - name: max_substep_iteration
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of substep iteration
    - name: maxiters
      required: No
      default: !!str 50
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum iteration for flow rate update
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: resid_abs_tol
      required: No
      default: !!str 1e-10
      cpp_type: double
      group_name: 
      description: |
        Absolute Tolerance for flow rate residual equation
    - name: resid_rel_tol
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        Relative Tolerance for flow rate residual equation
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: strength_user_objects
      required: No
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of User object names that computes strength variables and derivatives
    - name: type
      required: No
      default: !!str FiniteStrainHyperElasticViscoPlastic
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Materials/FiniteStrainPlasticMaterial
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eptol
      required: No
      default: !!str 1e-07
      cpp_type: double
      group_name: 
      description: |
        Equivalent plastic strain NR tolerance
    - name: ftol
      required: No
      default: !!str 0.0001
      cpp_type: double
      group_name: 
      description: |
        Consistency condition NR tolerance
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: rtol
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        Plastic strain NR tolerance
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: type
      required: No
      default: !!str FiniteStrainPlasticMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: yield_stress
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Input data as pairs of equivalent plastic strain and yield stress: Should start with equivalent plastic strain 0
    subblocks:
  - name: /Materials/FiniteStrainUObasedCP
    description: |
      
    parameters:
    - name: abs_tol
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        Constitutive stress residue absolute tolerance
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: line_search_maxiter
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Line search bisection method maximum number of iteration
    - name: line_search_method
      required: No
      default: !!str CUT_HALF
      cpp_type: MooseEnum
      group_name: 
      options: CUT_HALF BISECTION
      description: |
        The method used in line search
    - name: line_search_tol
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        Line search bisection method tolerance
    - name: maximum_substep_iteration
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of substep iteration
    - name: maxiter
      required: No
      default: !!str 100
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of iterations for stress update
    - name: maxiter_state_variable
      required: No
      default: !!str 100
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of iterations for state variable update
    - name: min_line_search_step_size
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        Minimum line search step size
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: rtol
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        Constitutive stress residue relative tolerance
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stol
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        Constitutive slip system resistance relative residual tolerance
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: tan_mod_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: exact none
      description: |
        Type of tangent moduli for preconditioner: default elastic
    - name: type
      required: No
      default: !!str FiniteStrainUObasedCP
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: uo_slip_rates
      required: Yes
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of names of user objects that define the slip rates for this material.
    - name: uo_slip_resistances
      required: Yes
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of names of user objects that define the slip resistances for this material.
    - name: uo_state_var_evol_rate_comps
      required: Yes
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of names of user objects that define the state variable evolution rate components for this material.
    - name: uo_state_vars
      required: Yes
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of names of user objects that define the state variable for this material.
    - name: use_line_search
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Use line search in constitutive update
    - name: zero_tol
      required: No
      default: !!str 1e-12
      cpp_type: double
      group_name: 
      description: |
        Tolerance for residual check when variable value is zero
    subblocks:
  - name: /Materials/FluxBasedStrainIncrement
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: gb
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Grain boundary order parameter
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: property_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of diffusive strain increment property
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str FluxBasedStrainIncrement
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: xflux
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        x or 0-direction component of flux
    - name: yflux
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        y or 1-direction component of flux
    - name: zflux
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        z or 2-direction component of flux
    subblocks:
  - name: /Materials/ForceDensityMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration field
    - name: ceq
      required: No
      default: !!str 0.9816
      cpp_type: double
      group_name: 
      description: |
        Equilibrium density
    - name: cgb
      required: No
      default: !!str 0.25
      cpp_type: double
      group_name: 
      description: |
        Thresold Concentration for GB
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled order parameters
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: k
      required: No
      default: !!str 100
      cpp_type: double
      group_name: 
      description: |
        stiffness constant
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ForceDensityMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/GBAnisotropy
    description: |
      
    parameters:
    - name: Anisotropic_GB_file_name
      required: Yes
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing: 1)GB mobility prefactor; 2) GB migration activation energy; 3)GB energy
    - name: T
      required: No
      default: !!str 300
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Temperature in Kelvin
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: delta_mob
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        factor determining inclination dependence of GB mobility
    - name: delta_sigma
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        factor determining inclination dependence of GB energy
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: inclination_anisotropy
      required: Yes
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        The GB anisotropy ininclination would be considered if true
    - name: length_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Length scale in m, where default is nm
    - name: molar_volume_value
      required: No
      default: !!str 7.11e-06
      cpp_type: double
      group_name: 
      description: |
        molar volume of material in m^3/mol, by default it's the value of copper
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: time_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Time scale in s, where default is ns
    - name: type
      required: No
      default: !!str GBAnisotropy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: wGB
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Diffuse GB width in nm 
    subblocks:
  - name: /Materials/GBDependentAnisotropicTensor
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bulk_parameter
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Parameter value of bulk material
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: gb
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        GB variable
    - name: gb_normal_tensor_name
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of GB normal tensor property
    - name: gb_parameter
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Parameter value at GB
    - name: gb_tensor_prop_name
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of GB tensor property
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str GBDependentAnisotropicTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/GBDependentDiffusivity
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bulk_parameter
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Parameter value of bulk material
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: gb
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        GB variable
    - name: gb_normal_tensor_name
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of GB normal tensor property
    - name: gb_parameter
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Parameter value at GB
    - name: gb_tensor_prop_name
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of GB tensor property
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str GBDependentDiffusivity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/GBEvolution
    description: |
      
    parameters:
    - name: GBMobility
      required: No
      default: !!str -1
      cpp_type: double
      group_name: 
      description: |
        GB mobility input in m^4/(J*s), that overrides the temperature dependent calculation
    - name: GBenergy
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Grain boundary energy in J/m^2
    - name: GBmob0
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Grain boundary mobility prefactor in m^4/(J*s)
    - name: Q
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Grain boundary migration activation energy in eV
    - name: T
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Temperature in Kelvin
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: f0s
      required: No
      default: !!str 0.125
      cpp_type: double
      group_name: 
      description: |
        The GB energy constant 
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: length_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Length scale in m, where default is nm
    - name: molar_volume
      required: No
      default: !!str 2.462e-05
      cpp_type: double
      group_name: 
      description: |
        Molar volume in m^3/mol, needed for temperature gradient driving force
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: time_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Time scale in s, where default is ns
    - name: type
      required: No
      default: !!str GBEvolution
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: wGB
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Diffuse GB width in the lengthscale of the model
    subblocks:
  - name: /Materials/GBRelaxationStrainIncrement
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: gb_normal_name
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of GB normal property
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: prefactor_name
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of perfactor property
    - name: property_name
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of GB relaxation strain increment property
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str GBRelaxationStrainIncrement
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/GBWidthAnisotropy
    description: |
      
    parameters:
    - name: Anisotropic_GB_file_name
      required: Yes
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing: 1)GB mobility prefactor; 2) GB migration activation energy; 3)GB energy
    - name: T
      required: No
      default: !!str 300
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Temperature in Kelvin
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: delta_mob
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        factor determining inclination dependence of GB mobility
    - name: delta_sigma
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        factor determining inclination dependence of GB energy
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: inclination_anisotropy
      required: Yes
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        The GB anisotropy ininclination would be considered if true
    - name: kappa
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Prefactor of gradient free energies for all i-j interfaces
    - name: length_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Length scale in m, where default is nm
    - name: molar_volume_value
      required: No
      default: !!str 7.11e-06
      cpp_type: double
      group_name: 
      description: |
        molar volume of material in m^3/mol, by default it's the value of copper
    - name: mu
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Prefactor of bulk free energy
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: time_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Time scale in s, where default is ns
    - name: type
      required: No
      default: !!str GBWidthAnisotropy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    subblocks:
  - name: /Materials/GeneralizedKelvinVoigtModel
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: creep_modulus
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        list of the elastic moduli of the different springs in the material
    - name: creep_ratio
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        list of the poisson ratios of the different springs in the material
    - name: creep_strain_name
      required: No
      default: !!str creep_strain
      cpp_type: std::string
      group_name: 
      description: |
        name of the true creep strain of the material(computed by LinearViscoelasticStressUpdate orComputeLinearViscoelasticStress)
    - name: creep_viscosity
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        list of the characteristic times of the different dashpots in the material
    - name: driving_eigenstrain
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        name of the eigenstrain that increases the creep strains
    - name: elastic_strain_name
      required: No
      default: !!str elastic_strain
      cpp_type: std::string
      group_name: 
      description: |
        name of the true elastic strain of the material
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: integration_rule
      required: No
      default: !!str backward-euler
      cpp_type: MooseEnum
      group_name: 
      options: backward-euler mid-point newmark zienkiewicz
      description: |
        describes how the viscoelastic behavior is integrated through time
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poisson_ratio
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        initial poisson ratio of the material
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: theta
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        coefficient for newmark integration rule (between 0 and 1)
    - name: type
      required: No
      default: !!str GeneralizedKelvinVoigtModel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: young_modulus
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        initial elastic modulus of the material
    subblocks:
  - name: /Materials/GeneralizedMaxwellModel
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: creep_modulus
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        list of the elastic moduli of the different springs in the material
    - name: creep_ratio
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        list of the poisson ratios of the different springs in the material
    - name: creep_strain_name
      required: No
      default: !!str creep_strain
      cpp_type: std::string
      group_name: 
      description: |
        name of the true creep strain of the material(computed by LinearViscoelasticStressUpdate orComputeLinearViscoelasticStress)
    - name: creep_viscosity
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        list of the characteristic times of the different dashpots in the material
    - name: driving_eigenstrain
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        name of the eigenstrain that increases the creep strains
    - name: elastic_strain_name
      required: No
      default: !!str elastic_strain
      cpp_type: std::string
      group_name: 
      description: |
        name of the true elastic strain of the material
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: integration_rule
      required: No
      default: !!str backward-euler
      cpp_type: MooseEnum
      group_name: 
      options: backward-euler mid-point newmark zienkiewicz
      description: |
        describes how the viscoelastic behavior is integrated through time
    - name: need_viscoelastic_properties_inverse
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        checks whether the model requires the computation of the inverse viscoelasticproperties (default: false)
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poisson_ratio
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        initial poisson ratio of the material
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: theta
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        coefficient for newmark integration rule (between 0 and 1)
    - name: type
      required: No
      default: !!str GeneralizedMaxwellModel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: young_modulus
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        initial elastic modulus of the material
    subblocks:
  - name: /Materials/GenericConstantMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: prop_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The names of the properties this material will have
    - name: prop_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The values associated with the named properties
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str GenericConstantMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/GenericConstantRankTwoTensor
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tensor_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the tensor material property to be created
    - name: tensor_values
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of values defining the constant rank two tensor
    - name: type
      required: No
      default: !!str GenericConstantRankTwoTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/GenericFunctionMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_stateful
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable the declaration of old and older values
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: prop_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The names of the properties this material will have
    - name: prop_values
      required: No
      default: !!str 
      cpp_type: std::vector<FunctionName, std::allocator<FunctionName> >
      group_name: 
      description: |
        The corresponding names of the functions that are going to provide the values for the variables
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str GenericFunctionMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/GrainAdvectionVelocity
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define type of force density under consideration
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration field
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of other coupled order parameters
    - name: grain_data
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        UserObject for getting the center of mass of grains
    - name: grain_force
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        userobject for getting force and torque acting on grains
    - name: grain_volumes
      required: No
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The feature volume VectorPostprocessorValue.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of other coupled order parameters (num_name)
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: rotation_constant
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain rotation
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: translation_constant
      required: No
      default: !!str 500
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain translation
    - name: type
      required: No
      default: !!str GrainAdvectionVelocity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of other coupled order parameters (base_name)
    subblocks:
  - name: /Materials/GrandPotentialInterface
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: gamma_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Interfacial / grain boundary gamma parameter names (leave empty for gamma0... gammaN)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_name
      required: No
      default: !!str kappa
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Gradient interface parameter name
    - name: mu_name
      required: No
      default: !!str mu
      cpp_type: MaterialPropertyName
      group_name: 'Advanced'
      description: |
        Grain growth bulk energy parameter name
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: sigma
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Interfacial free energies
    - name: sigma_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        Sigma index to choose gamma = 1.5 for. Omit this to automatically chose the median sigma.
    - name: type
      required: No
      default: !!str GrandPotentialInterface
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: width
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Interfacial width (for the interface with gamma = 1.5)
    subblocks:
  - name: /Materials/HyperElasticPhaseFieldIsoDamage
    description: |
      
    parameters:
    - name: F_name
      required: No
      default: !!str E_el
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property storing the elastic energy
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Damage variable
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: damage_stiffness
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        Avoid zero after complete damage
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: flow_rate_user_objects
      required: No
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of User object names that computes flow rate and derivatives
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: internal_var_rate_user_objects
      required: No
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of User object names that computes internal variable rates and derivatives
    - name: internal_var_user_objects
      required: No
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of User object names that integrates internal variables and computes derivatives
    - name: max_substep_iteration
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of substep iteration
    - name: maxiters
      required: No
      default: !!str 50
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum iteration for flow rate update
    - name: numerical_stiffness
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Flag for numerical stiffness
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perturbation_scale_factor
      required: No
      default: !!str 1e-05
      cpp_type: double
      group_name: 
      description: |
        Perturbation scale factor
    - name: resid_abs_tol
      required: No
      default: !!str 1e-10
      cpp_type: double
      group_name: 
      description: |
        Absolute Tolerance for flow rate residual equation
    - name: resid_rel_tol
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        Relative Tolerance for flow rate residual equation
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: store_stress_old
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Parameter which indicates whether the old stress state, required for the HHT time integration scheme and Rayleigh damping, needs to be stored
    - name: strength_user_objects
      required: No
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of User object names that computes strength variables and derivatives
    - name: type
      required: No
      default: !!str HyperElasticPhaseFieldIsoDamage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_current_history_variable
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Use the current value of the history variable.
    - name: zero_perturb
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        Perturbation value when strain value less than numerical zero
    - name: zero_tol
      required: No
      default: !!str 1e-12
      cpp_type: double
      group_name: 
      description: |
        Tolerance for numerical zero
    subblocks:
  - name: /Materials/HyperbolicViscoplasticityStressUpdate
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-11
      cpp_type: double
      group_name: 
      description: |
        Absolute convergence tolerance for Newton iteration
    - name: acceptable_multiplier
      required: No
      default: !!str 10
      cpp_type: double
      group_name: 
      description: |
        Factor applied to relative and absolute tolerance for acceptable convergence if iterations are no longer making progress
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c_alpha
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Viscoplasticity coefficient, scales the hyperbolic function
    - name: c_beta
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Viscoplasticity coefficient inside the hyperbolic sin function
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: effective_inelastic_strain_name
      required: Yes
      default: !!str effective_plastic_strain
      cpp_type: std::string
      group_name: 'Advanced'
      description: |
        Name of the material property that stores the effective inelastic strain
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: hardening_constant
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Hardening slope
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: internal_solve_full_iteration_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Debug'
      description: |
        Set true to output full internal Newton iteration history at times determined by `internal_solve_output_on`. If false, only a summary is output.
    - name: internal_solve_output_on
      required: No
      default: !!str on_error
      cpp_type: MooseEnum
      group_name: 'Debug'
      options: never on_error always
      description: |
        When to output internal Newton solve information
    - name: max_inelastic_increment
      required: No
      default: !!str 0.0001
      cpp_type: double
      group_name: 
      description: |
        The maximum inelastic strain increment allowed in a time step
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: plastic_prepend
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        String that is prepended to the plastic_strain Material Property
    - name: relative_tolerance
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        Relative convergence tolerance for Newton iteration
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str HyperbolicViscoplasticityStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_stress
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The point at which plastic strain begins accumulating
    subblocks:
  - name: /Materials/IdealGasFreeEnergy
    description: |
      
    parameters:
    - name: T
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Temperature
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration variable
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: h
      required: No
      default: !!str 4.13567e-15
      cpp_type: double
      group_name: 'Units'
      description: |
        Planck constant - units need to be consistent with the units of omega (default in [eV*s])
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kB
      required: No
      default: !!str 8.61733e-05
      cpp_type: double
      group_name: 'Units'
      description: |
        Boltzmann constant (default in [eV/K])
    - name: m
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Gas atom mass (the default mass_unit_conversion requires this to be in [u])
    - name: mass_unit_conversion
      required: No
      default: !!str 1.03643e-28
      cpp_type: double
      group_name: 'Units'
      description: |
        Conversion factor to get the gas atom mass in [eV*s^2/Ang^2] (defaults to [eV*s^2/(Ang^2*u)])
    - name: omega
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Lattice site volume (default mass_unit_conversion requires this to be in [Ang^3])
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str IdealGasFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/InclusionProperties
    description: |
      
    parameters:
    - name: a
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Ellipse semiaxis
    - name: b
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Ellipse semiaxis
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: energy_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the material property where analytical elastic energies will be stored
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: lambda
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Lame's first parameter
    - name: misfit_strains
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of misfit strains in order eps_11, eps_22
    - name: mu
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Shear modulus (aka Lame's second parameter)
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: strain_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the material property where analytical total strains will be stored
    - name: stress_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the material property where analytical stresses will be stored
    - name: type
      required: No
      default: !!str InclusionProperties
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/InterfaceOrientationMaterial
    description: |
      
    parameters:
    - name: anisotropy_strength
      required: No
      default: !!str 0.04
      cpp_type: double
      group_name: 
      description: |
        Strength of the anisotropy (typically < 0.05)
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eps_bar
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        Average value of the interface parameter epsilon
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: mode_number
      required: No
      default: !!str 6
      cpp_type: unsigned int
      group_name: 
      description: |
        Mode number for anisotropy
    - name: op
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter defining the solid phase
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: reference_angle
      required: No
      default: !!str 90
      cpp_type: double
      group_name: 
      description: |
        Reference angle for defining anistropy in degrees
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str InterfaceOrientationMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/InterfaceOrientationMultiphaseMaterial
    description: |
      
    parameters:
    - name: anisotropy_strength
      required: No
      default: !!str 0.04
      cpp_type: double
      group_name: 
      description: |
        Strength of the anisotropy (typically < 0.05)
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: d2kappadgrad_etaa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the second derivative of kappa wrt the gradient of eta
    - name: dkappadgrad_etaa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the derivative of kappa wrt the gradient of eta
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etaa
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter for the current phase alpha
    - name: etab
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter for the neighboring phase beta
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kappa_bar
      required: No
      default: !!str 0.1125
      cpp_type: double
      group_name: 
      description: |
        Average value of the interface parameter kappa
    - name: kappa_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the kappa for the given phase
    - name: mode_number
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 
      description: |
        Mode number for anisotropy
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: reference_angle
      required: No
      default: !!str 90
      cpp_type: double
      group_name: 
      description: |
        Reference angle for defining anistropy in degrees
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str InterfaceOrientationMultiphaseMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/IsotropicPlasticityStressUpdate
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-11
      cpp_type: double
      group_name: 
      description: |
        Absolute convergence tolerance for Newton iteration
    - name: acceptable_multiplier
      required: No
      default: !!str 10
      cpp_type: double
      group_name: 
      description: |
        Factor applied to relative and absolute tolerance for acceptable convergence if iterations are no longer making progress
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: effective_inelastic_strain_name
      required: Yes
      default: !!str effective_plastic_strain
      cpp_type: std::string
      group_name: 'Advanced'
      description: |
        Name of the material property that stores the effective inelastic strain
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: hardening_constant
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Hardening slope
    - name: hardening_function
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        True stress as a function of plastic strain
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: internal_solve_full_iteration_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Debug'
      description: |
        Set true to output full internal Newton iteration history at times determined by `internal_solve_output_on`. If false, only a summary is output.
    - name: internal_solve_output_on
      required: No
      default: !!str on_error
      cpp_type: MooseEnum
      group_name: 'Debug'
      options: never on_error always
      description: |
        When to output internal Newton solve information
    - name: max_inelastic_increment
      required: No
      default: !!str 0.0001
      cpp_type: double
      group_name: 
      description: |
        The maximum inelastic strain increment allowed in a time step
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: plastic_prepend
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        String that is prepended to the plastic_strain Material Property
    - name: relative_tolerance
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        Relative convergence tolerance for Newton iteration
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temperature
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled Temperature
    - name: type
      required: No
      default: !!str IsotropicPlasticityStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_stress
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The point at which plastic strain begins accumulating
    - name: yield_stress_function
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Yield stress as a function of temperature
    subblocks:
  - name: /Materials/IsotropicPowerLawHardeningStressUpdate
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-11
      cpp_type: double
      group_name: 
      description: |
        Absolute convergence tolerance for Newton iteration
    - name: acceptable_multiplier
      required: No
      default: !!str 10
      cpp_type: double
      group_name: 
      description: |
        Factor applied to relative and absolute tolerance for acceptable convergence if iterations are no longer making progress
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: effective_inelastic_strain_name
      required: Yes
      default: !!str effective_plastic_strain
      cpp_type: std::string
      group_name: 'Advanced'
      description: |
        Name of the material property that stores the effective inelastic strain
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: hardening_function
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        True stress as a function of plastic strain
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: internal_solve_full_iteration_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Debug'
      description: |
        Set true to output full internal Newton iteration history at times determined by `internal_solve_output_on`. If false, only a summary is output.
    - name: internal_solve_output_on
      required: No
      default: !!str on_error
      cpp_type: MooseEnum
      group_name: 'Debug'
      options: never on_error always
      description: |
        When to output internal Newton solve information
    - name: max_inelastic_increment
      required: No
      default: !!str 0.0001
      cpp_type: double
      group_name: 
      description: |
        The maximum inelastic strain increment allowed in a time step
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: plastic_prepend
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        String that is prepended to the plastic_strain Material Property
    - name: relative_tolerance
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        Relative convergence tolerance for Newton iteration
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: strain_hardening_exponent
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The strain hardening exponent (n) for power law hardening
    - name: strength_coefficient
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The strength coefficient (K) for power law hardening
    - name: temperature
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled Temperature
    - name: type
      required: No
      default: !!str IsotropicPowerLawHardeningStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_stress_function
      required: No
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        Yield stress as a function of temperature
    subblocks:
  - name: /Materials/KKSXeVacSolidMaterial
    description: |
      
    parameters:
    - name: T
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Temperature in [K]
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: cmg
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Gas concnetration
    - name: cmv
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vacancy concnetration
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken (2 or 3)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str KKSXeVacSolidMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/LinearElasticTruss
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temperature
      required: No
      default: !!str 273
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Temperature in Kelvin
    - name: temperature_ref
      required: No
      default: !!str 273
      cpp_type: double
      group_name: 
      description: |
        Reference temperature for thermal expansion in K
    - name: thermal_expansion_coeff
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Thermal expansion coefficient in 1/K
    - name: type
      required: No
      default: !!str LinearElasticTruss
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: youngs_modulus
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable containing Young's modulus
    subblocks:
  - name: /Materials/LinearViscoelasticStressUpdate
    description: |
      
    parameters:
    - name: apparent_creep_strain
      required: No
      default: !!str apparent_creep_strain
      cpp_type: std::string
      group_name: 
      description: |
        name of the apparent creep strain (defined by a LinearViscoelasticityBase material)
    - name: apparent_elasticity_tensor
      required: No
      default: !!str apparent_elasticity_tensor
      cpp_type: std::string
      group_name: 
      description: |
        name of the apparent elasticity tensor (defined by a LinearViscoelasticityBase material)
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elasticity_tensor_inv
      required: No
      default: !!str elasticity_tensor_inv
      cpp_type: std::string
      group_name: 
      description: |
        name of the real compliance tensor (defined by a LinearViscoelasticityBase material)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str LinearViscoelasticStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/MathEBFreeEnergy
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration variable
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str MathEBFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/MathFreeEnergy
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration variable
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken (2 or 3)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str MathFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/MixedSwitchingFunctionMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter variable
    - name: function_name
      required: No
      default: !!str h
      cpp_type: std::string
      group_name: 
      description: |
        actual name for f(eta), i.e. 'h' or 'g'
    - name: h_order
      required: No
      default: !!str MIX234
      cpp_type: MooseEnum
      group_name: 
      options: MIX234 MIX246
      description: |
        Polynomial order of the switching function h(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MixedSwitchingFunctionMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: weight
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Weight parameter for MIX type h(eta)
    subblocks:
  - name: /Materials/MultiBarrierFunctionMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        eta_i order parameters, one for each h
    - name: function_name
      required: No
      default: !!str g
      cpp_type: std::string
      group_name: 
      description: |
        actual name for g(eta_i)
    - name: g_order
      required: No
      default: !!str SIMPLE
      cpp_type: MooseEnum
      group_name: 
      options: SIMPLE
      description: |
        Polynomial order of the switching function h(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MultiBarrierFunctionMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: well_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Make the g zero in [0:1] so it only contributes to enforcing the eta range and not to the phase transformation berrier.
    subblocks:
  - name: /Materials/MultiPhaseStressMaterial
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Base name for the computed global stress (optional)
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: h
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Switching Function Materials that provide h(eta_i)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: phase_base
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Base names for the Phase strains
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MultiPhaseStressMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/PFCRFFMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: num_L
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of complex L variables will be solved for
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PFCRFFMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/PFCTradMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: order
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: FOURTH EIGHTH
      description: |
        This is the order of the polynomial used for correlation function
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PFCTradMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/PFParamsPolyFreeEnergy
    description: |
      
    parameters:
    - name: D0
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Diffusivity prefactor for vacancies in m^2/s
    - name: Ef
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Formation energy in eV
    - name: Em
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Migration energy in eV
    - name: T
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Temperature variable in Kelvin
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: int_width
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of void surface in the lengthscale of the problem
    - name: length_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        defines the base length scale of the problem in m
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: polynomial_order
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: 4 6 8
      description: |
        Order of polynomial free energy
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: surface_energy
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Surface energy in J/m2
    - name: time_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        defines the base time scale of the problem
    - name: type
      required: No
      default: !!str PFParamsPolyFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ParsedMaterial
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Arguments of F() - use vector coupling
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_expressions
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of values for the constants in constant_names (can be an FParser expression)
    - name: constant_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of constants used in the parsed function (use this for kB etc.)
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: function
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        FParser function expression for the phase free energy
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: material_property_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of material properties used in the parsed function
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tol_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of variable names to be protected from being 0 or 1 within a tolerance (needed for log(c) and log(1-c) terms)
    - name: tol_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of tolerance values for the variables in tol_names
    - name: type
      required: No
      default: !!str ParsedMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/PhaseNormalTensor
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: normal_tensor_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of normal tensor
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: phase
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Phase variable
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PhaseNormalTensor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/PiecewiseLinearInterpolationMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: property
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the property this material will compute
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor to be applied to the ordinate values
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str PiecewiseLinearInterpolationMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable whose value is used as the abscissa in the interpolation
    - name: x
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The abscissa values
    - name: xy_data
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        All function data, supplied in abscissa, ordinate pairs
    - name: y
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The ordinate values
    subblocks:
  - name: /Materials/PolynomialFreeEnergy
    description: |
      
    parameters:
    - name: W_name
      required: No
      default: !!str barr_height
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the material property storing the barrier height
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration
    - name: c_eq_name
      required: No
      default: !!str c_eq
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of material property storing the equilibrium concentration
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: polynomial_order
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: 4 6 8
      description: |
        Order of polynomial free energy
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str PolynomialFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/PowerLawCreepStressUpdate
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-11
      cpp_type: double
      group_name: 
      description: |
        Absolute convergence tolerance for Newton iteration
    - name: acceptable_multiplier
      required: No
      default: !!str 10
      cpp_type: double
      group_name: 
      description: |
        Factor applied to relative and absolute tolerance for acceptable convergence if iterations are no longer making progress
    - name: activation_energy
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Activation energy
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coefficient
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Leading coefficent in power-law equation
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: creep_prepend
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        String that is prepended to the creep_strain Material Property
    - name: effective_inelastic_strain_name
      required: Yes
      default: !!str effective_creep_strain
      cpp_type: std::string
      group_name: 'Advanced'
      description: |
        Name of the material property that stores the effective inelastic strain
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: gas_constant
      required: No
      default: !!str 8.3143
      cpp_type: double
      group_name: 
      description: |
        Universal gas constant
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: internal_solve_full_iteration_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Debug'
      description: |
        Set true to output full internal Newton iteration history at times determined by `internal_solve_output_on`. If false, only a summary is output.
    - name: internal_solve_output_on
      required: No
      default: !!str on_error
      cpp_type: MooseEnum
      group_name: 'Debug'
      options: never on_error always
      description: |
        When to output internal Newton solve information
    - name: m_exponent
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Exponent on time in power-law equation
    - name: max_inelastic_increment
      required: No
      default: !!str 0.0001
      cpp_type: double
      group_name: 
      description: |
        The maximum inelastic strain increment allowed in a time step
    - name: n_exponent
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Exponent on effective stress in power-law equation
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: relative_tolerance
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        Relative convergence tolerance for Newton iteration
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: start_time
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Start time (if not zero)
    - name: temperature
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled temperature
    - name: type
      required: No
      default: !!str PowerLawCreepStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/PowerLawSoftening
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stiffness_reduction
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Factor multiplied by the current stiffness each time a new crack forms
    - name: type
      required: No
      default: !!str PowerLawSoftening
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/RegularSolutionFreeEnergy
    description: |
      
    parameters:
    - name: T
      required: No
      default: !!str 300
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Temperature variable
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration variable
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kB
      required: No
      default: !!str 8.61733e-05
      cpp_type: double
      group_name: 
      description: |
        Boltzmann constant
    - name: log_tol
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If specified logarithms are evaluated using a Taylor expansion below this value
    - name: omega
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        Regular solution parameter
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str RegularSolutionFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ScalarMaterialDamage
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: damage_index
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the material property containing the damage index, which goes from 0 (undamaged) to 1 (fully damaged)
    - name: damage_index_name
      required: No
      default: !!str damage_index
      cpp_type: std::string
      group_name: 
      description: |
        name of the material property where the damage index is stored
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: maximum_damage_increment
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        maximum damage increment allowed for simulations with adaptative time step
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: residual_stiffness_fraction
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        Minimum fraction of original material stiffness retained for fully damaged material (when damage_index=1)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ScalarMaterialDamage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_old_damage
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the damage index from the previous step in the stress computation
    subblocks:
  - name: /Materials/StrainEnergyDensity
    description: |
      
    parameters:
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that allows the user to define multiple mechanics material systems on the same block, i.e. for multiple phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: incremental
      required: Yes
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate whether an incremental or total model is being used.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str StrainEnergyDensity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/StrainGradDispDerivatives
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacement_gradients
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        List of displacement gradient component variables
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str StrainGradDispDerivatives
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/StressBasedChemicalPotential
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration variable
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction_tensor_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of direction tensor variable
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: prefactor_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of prefactor variable
    - name: property_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of stress based chemical potential
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stress_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of stress property variable
    - name: type
      required: No
      default: !!str StressBasedChemicalPotential
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/SumTensorIncrements
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coupled_tensor_increment_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        Name of strain increment properties
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tensor_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of strain property
    - name: type
      required: No
      default: !!str SumTensorIncrements
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/SwitchingFunction3PhaseMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: eta_i
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter i
    - name: eta_j
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter j
    - name: eta_k
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter k
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str SwitchingFunction3PhaseMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/SwitchingFunctionMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Order parameter variable
    - name: function_name
      required: No
      default: !!str h
      cpp_type: std::string
      group_name: 
      description: |
        actual name for f(eta), i.e. 'h' or 'g'
    - name: h_order
      required: No
      default: !!str SIMPLE
      cpp_type: MooseEnum
      group_name: 
      options: SIMPLE HIGH
      description: |
        Polynomial order of the switching function h(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SwitchingFunctionMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/SwitchingFunctionMultiPhaseMaterial
    description: |
      
    parameters:
    - name: all_etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of all order parameters for all phases
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: h_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the switching function material property for the given phase
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: phase_etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Vector of order parameters for the given phase
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SwitchingFunctionMultiPhaseMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/TemperatureDependentHardeningStressUpdate
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-11
      cpp_type: double
      group_name: 
      description: |
        Absolute convergence tolerance for Newton iteration
    - name: acceptable_multiplier
      required: No
      default: !!str 10
      cpp_type: double
      group_name: 
      description: |
        Factor applied to relative and absolute tolerance for acceptable convergence if iterations are no longer making progress
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: effective_inelastic_strain_name
      required: Yes
      default: !!str effective_plastic_strain
      cpp_type: std::string
      group_name: 'Advanced'
      description: |
        Name of the material property that stores the effective inelastic strain
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: hardening_functions
      required: Yes
      default: !!str 
      cpp_type: std::vector<FunctionName, std::allocator<FunctionName> >
      group_name: 
      description: |
        List of functions of true stress as function of plastic strain at different temperatures
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: internal_solve_full_iteration_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Debug'
      description: |
        Set true to output full internal Newton iteration history at times determined by `internal_solve_output_on`. If false, only a summary is output.
    - name: internal_solve_output_on
      required: No
      default: !!str on_error
      cpp_type: MooseEnum
      group_name: 'Debug'
      options: never on_error always
      description: |
        When to output internal Newton solve information
    - name: max_inelastic_increment
      required: No
      default: !!str 0.0001
      cpp_type: double
      group_name: 
      description: |
        The maximum inelastic strain increment allowed in a time step
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: plastic_prepend
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        String that is prepended to the plastic_strain Material Property
    - name: relative_tolerance
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        Relative convergence tolerance for Newton iteration
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temperature
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled Temperature
    - name: temperatures
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        List of temperatures corresponding to the functions listed in 'hardening_functions'
    - name: type
      required: No
      default: !!str TemperatureDependentHardeningStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/TensileStressUpdate
    description: |
      
    parameters:
    - name: admissible_stress
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        A single admissible value of the value of the stress parameters for internal parameters = 0.  This is used to initialize the return-mapping algorithm during the first nonlinear iteration.  If not given then it is assumed that stress parameters = 0 is admissible.
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Optional parameter that defines a prefix for all material properties related to this stress update model. This allows for multiple models of the same type to be used without naming conflicts.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: max_NR_iterations
      required: No
      default: !!str 20
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of Newton-Raphson iterations allowed during the return-map algorithm
    - name: min_step_size
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        In order to help the Newton-Raphson procedure, the applied strain increment may be applied in sub-increments of size greater than this value.  Usually it is better for Moose's nonlinear convergence to increase max_NR_iterations rather than decrease this parameter.
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perfect_guess
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Provide a guess to the Newton-Raphson proceedure that is the result from perfect plasticity.  With severe hardening/softening this may be suboptimal.
    - name: perform_finite_strain_rotations
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Tensors are correctly rotated in finite-strain simulations.  For optimal performance you can set this to 'false' if you are only ever using small strains
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: smoothing_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Intersections of the yield surfaces will be smoothed by this amount (this is measured in units of stress).  Often this is related to other physical parameters (eg, 0.1*cohesion) but it is important to set this small enough so that the individual yield surfaces do not mix together in the smoothing process to produce a result where no stress is admissible (for example, mixing together tensile and compressive failure envelopes).
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the tensile strength
    - name: type
      required: No
      default: !!str TensileStressUpdate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: warn_about_precision_loss
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output a message to the console every time precision-loss is encountered during the Newton-Raphson process
    - name: yield_function_tol
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The return-map process will be deemed to have converged if all yield functions are within yield_function_tol of zero.  If this is set very low then precision-loss might be encountered: if the code detects precision loss then it also deems the return-map process has converged.
    subblocks:
  - name: /Materials/ThermalFractureIntegral
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: eigenstrain_names
      required: No
      default: !!str 
      cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
      group_name: 
      description: |
        List of eigenstrains to be applied in this strain calculation
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temperature
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled temperature
    - name: type
      required: No
      default: !!str ThermalFractureIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/ThirdPhaseSuppressionMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        eta_i order parameters, one for each h
    - name: function_name
      required: No
      default: !!str g
      cpp_type: std::string
      group_name: 
      description: |
        actual name for g(eta_i)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ThirdPhaseSuppressionMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/TimeStepMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: prop_dt
      required: No
      default: !!str dt
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Material property to store the current dt
    - name: prop_time
      required: No
      default: !!str time
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Material property to store the current time
    - name: prop_time_step
      required: No
      default: !!str time_step
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Material property to store the current time step number
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TimeStepMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/TwoPhaseStressMaterial
    description: |
      
    parameters:
    - name: base_A
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Base name for the Phase A strain.
    - name: base_B
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Base name for the Phase B strain.
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Base name for the computed global stress (optional).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: h
      required: No
      default: !!str h
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Switching Function Material that provides h(eta)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TwoPhaseStressMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/VanDerWaalsFreeEnergy
    description: |
      
    parameters:
    - name: T
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Temperature
    - name: a
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Van der Waals coeefficient a (default mass_unit_conversion requires this to be in [eV*Ang^3])
    - name: b
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Van der Waals molecular exclusion volume b (default mass_unit_conversion requires this to be in [Ang^3])
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration variable
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: derivative_order
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum order of derivatives taken
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: f_name
      required: No
      default: !!str F
      cpp_type: std::string
      group_name: 
      description: |
        Base name of the free energy function (used to name the material properties)
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: h
      required: No
      default: !!str 4.13567e-15
      cpp_type: double
      group_name: 'Units'
      description: |
        Planck constant - units need to be consistent with the units of omega (default in [eV*s])
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: kB
      required: No
      default: !!str 8.61733e-05
      cpp_type: double
      group_name: 'Units'
      description: |
        Boltzmann constant (default in [eV/K])
    - name: log_tol
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The logarithm in the free energy is evaluated using a Taylor expansion below this value. This allows formulating free energies for systems where the molecular volume is smaller than the exclusion volume b.
    - name: m
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Gas atom mass (the default mass_unit_conversion requires this to be in [u])
    - name: mass_unit_conversion
      required: No
      default: !!str 1.03643e-28
      cpp_type: double
      group_name: 'Units'
      description: |
        Conversion factor to get the gas atom mass in [eV*s^2/Ang^2] (defaults to [eV*s^2/(Ang^2*u)])
    - name: omega
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Lattice site volume (default mass_unit_conversion requires this to be in [Ang^3])
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: third_derivatives
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Flag to indicate if third derivatives are needed
    - name: type
      required: No
      default: !!str VanDerWaalsFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Materials/VariableGradientMaterial
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: prop
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Material property to store the gradient magnitude in
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VariableGradientMaterial
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable to compute the gradient magnitude of
    subblocks:
  - name: /Materials/VoltPFParamsPolyFreeEnergy
    description: |
      
    parameters:
    - name: D0
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Diffusivity prefactor for vacancies in m^2/s
    - name: Ef
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Formation energy in eV
    - name: Em
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Migration energy in eV
    - name: T
      required: No
      default: !!str 298
      cpp_type: double
      group_name: 
      description: |
        Temperature value in Kelvin
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: c
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: int_width
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The interfacial width of void surface in the lengthscale of the problem
    - name: length_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        defines the base length scale of the problem in m
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: polynomial_order
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: 4 6 8
      description: |
        Order of polynomial free energy
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: surface_energy
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Surface energy in J/m2
    - name: time_scale
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        defines the base time scale of the problem
    - name: type
      required: No
      default: !!str VoltPFParamsPolyFreeEnergy
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: volt
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        voltage variable in V
    subblocks:
  - name: /Materials/VolumeDeformGradCorrectedStress
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false, MOOSE will not call compute methods on this material. The user must call computeProperties() after retrieving the Material via MaterialPropertyInterface::getMaterial(). Non-computed Materials are not sorted for dependencies.
    - name: constant_on
      required: No
      default: !!str NONE
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: NONE ELEMENT SUBDOMAIN
      description: |
        When ELEMENT, MOOSE will only call computeQpProperties() for the 0th quadrature point, and then copy that value to the other qps.When SUBDOMAIN, MOOSE will only call computeSubdomainProperties() for the 0th quadrature point, and then copy that value to the other qps. Evaluations on element qps will be skipped
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: deform_grad_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of deformation gradient variable
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: jacobian_name
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of jacobian variable
    - name: output_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Outputs'
      description: |
        List of material properties, from this material, to output (outputs must also be defined to an output type)
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Outputs'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: pre_jacobian_name
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of jacobian variable from previous config.
    - name: pre_stress_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of stress variable from previous config.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stress_name
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of stress variable
    - name: type
      required: No
      default: !!str VolumeDeformGradCorrectedStress
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
- name: /Mesh
  description: |
    
  parameters:
  - name: displacements
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      The variables corresponding to the x y z displacements of the mesh.  If this is provided then the displacements will be taken into account during the computation.
  - name: inactive
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      If specified blocks matching these identifiers will be skipped.
  - name: block_id
    required: No
    default: !!str 
    cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
    group_name: 'Add Names'
    description: |
      IDs of the block id/name pairs
  - name: block_name
    required: No
    default: !!str 
    cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
    group_name: 'Add Names'
    description: |
      Names of the block id/name pairs (must correspond with "block_id"
  - name: boundary_id
    required: No
    default: !!str 
    cpp_type: std::vector<short, std::allocator<short> >
    group_name: 'Add Names'
    description: |
      IDs of the boundary id/name pairs
  - name: boundary_name
    required: No
    default: !!str 
    cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
    group_name: 'Add Names'
    description: |
      Names of the boundary id/name pairs (must correspond with "boundary_id"
  - name: construct_side_list_from_node_list
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 'Advanced'
    description: |
      If true, construct side lists from the nodesets in the mesh (i.e. if every node on a give side is in a nodeset then add that side to a sideset
  - name: ghosted_boundaries
    required: No
    default: !!str 
    cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
    group_name: 'Advanced'
    description: |
      Boundaries to be ghosted if using Nemesis
  - name: ghosted_boundaries_inflation
    required: No
    default: !!str 
    cpp_type: std::vector<double, std::allocator<double> >
    group_name: 'Advanced'
    description: |
      If you are using ghosted boundaries you will want to set this value to a vector of amounts to inflate the bounding boxes by.  ie if you are running a 3D problem you might set it to '0.2 0.1 0.4'
  - name: isObjectAction
    required: No
    default: !!str 1
    cpp_type: bool
    group_name: 
    description: |
      Indicates that this is a MooseObjectAction.
  - name: second_order
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 'Advanced'
    description: |
      Converts a first order mesh to a second order mesh.  Note: This is NOT needed if you are reading an actual first order mesh.
  - name: skip_partitioning
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 'Advanced'
    description: |
      If true the mesh won't be partitioned. This may cause large load imbalanced but is currently required if you have a simulation containing uniform refinement, adaptivity and stateful material properties
  - name: type
    required: Yes
    default: !!str FileMesh
    cpp_type: std::string
    group_name: 
    description: |
      A string representing the Moose Object that will be built by this Action
  - name: uniform_refine
    required: No
    default: !!str 0
    cpp_type: unsigned int
    group_name: 
    description: |
      Specify the level of uniform refinement applied to the initial mesh
  subblocks:
  - name: /Mesh/<type>
    description: |
      
    parameters:
    subblocks:
    - name: /Mesh/<type>/AnnularMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: No
        default: !!str 1
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: 1 2 3
        description: |
          This is only required for certain mesh formats where the dimension of the mesh cannot be autodetected. In particular you must supply this for GMSH meshes. Note: This is completely ignored for ExodusII meshes!
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: growth_r
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The ratio of radial sizes of successive rings of elements
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: nr
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the radial direction
      - name: nt
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the angular direction
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: quad_subdomain_id
        required: No
        default: !!str 0
        cpp_type: unsigned short
        group_name: 
        description: |
          The subdomain ID given to the QUAD4 elements
      - name: rmax
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Outer radius
      - name: rmin
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Inner radius.  If rmin=0 then a disc mesh (with no central hole) will be created.
      - name: tmax
        required: No
        default: !!str 6.28319
        cpp_type: double
        group_name: 
        description: |
          Maximum angle, measured anticlockwise from x axis.  If tmin=0 and tmax=2Pi an annular mesh is created.  Otherwise, only a sector of an annulus is created
      - name: tmin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Minimum angle, measured anticlockwise from x axis
      - name: tri_subdomain_id
        required: No
        default: !!str 1
        cpp_type: unsigned short
        group_name: 
        description: |
          The subdomain ID given to the TRI3 elements (these exist only if rmin=0, and they exist at the center of the disc
      - name: type
        required: No
        default: !!str AnnularMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Mesh/<type>/ConcentricCircleMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: No
        default: !!str 1
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: 1 2 3
        description: |
          This is only required for certain mesh formats where the dimension of the mesh cannot be autodetected. In particular you must supply this for GMSH meshes. Note: This is completely ignored for ExodusII meshes!
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: has_outer_square
        required: Yes
        default: !!str 
        cpp_type: bool
        group_name: 
        description: |
          It determines if meshes for a outer square are added to concentric circle meshes.
      - name: inner_mesh_fraction
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Length of inner square / radius of the innermost circle
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: num_sectors
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          num_sectors % 2 = 0, num_sectors > 0Number of azimuthal sectors in each quadrant'num_sectors' must be an even number.
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: pitch
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The moderator can be added to complete meshes for one unit cell of fuel assembly.Elements are quad meshes.
      - name: portion
        required: No
        default: !!str full
        cpp_type: MooseEnum
        group_name: 
        options: full top_right top_left bottom_left bottom_right right_half left_half top_half bottom_half
        description: |
          Control of which part of mesh is created
      - name: preserve_volumes
        required: Yes
        default: !!str 
        cpp_type: bool
        group_name: 
        description: |
          Volume of concentric circles can be preserved using this function.
      - name: radii
        required: Yes
        default: !!str 
        cpp_type: std::vector<double, std::allocator<double> >
        group_name: 
        description: |
          Radii of major concentric circles
      - name: rings
        required: Yes
        default: !!str 
        cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
        group_name: 
        description: |
          Number of rings in each circle or in the moderator
      - name: type
        required: No
        default: !!str ConcentricCircleMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Mesh/<type>/DistributedGeneratedMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: bias_x
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the x-direction.
      - name: bias_y
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the y-direction.
      - name: bias_z
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the z-direction.
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: Yes
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Main'
        options: 1 2 3
        description: |
          The dimension of the mesh to be generated
      - name: elem_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: EDGE EDGE2 EDGE3 EDGE4 QUAD QUAD4 QUAD8 QUAD9 TRI3 TRI6 HEX HEX8 HEX20 HEX27 TET4 TET10 PRISM6 PRISM15 PRISM18 PYRAMID5 PYRAMID13 PYRAMID14
        description: |
          The type of element from libMesh to generate (default: linear element for requested dimension)
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: nx
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the X direction
      - name: ny
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the Y direction
      - name: nz
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the Z direction
      - name: parallel_type
        required: No
        default: !!str DISTRIBUTED
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: type
        required: No
        default: !!str DistributedGeneratedMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: verbose
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Turn on verbose printing for the mesh generation
      - name: xmax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper X Coordinate of the generated mesh
      - name: xmin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower X Coordinate of the generated mesh
      - name: ymax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper Y Coordinate of the generated mesh
      - name: ymin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower Y Coordinate of the generated mesh
      - name: zmax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper Z Coordinate of the generated mesh
      - name: zmin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower Z Coordinate of the generated mesh
      subblocks:
    - name: /Mesh/<type>/EBSDMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: bias_x
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the x-direction.
      - name: bias_y
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the y-direction.
      - name: bias_z
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the z-direction.
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: elem_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: EDGE EDGE2 EDGE3 EDGE4 QUAD QUAD4 QUAD8 QUAD9 TRI3 TRI6 HEX HEX8 HEX20 HEX27 TET4 TET10 PRISM6 PRISM15 PRISM18 PYRAMID5 PYRAMID13 PYRAMID14
        description: |
          The type of element from libMesh to generate (default: linear element for requested dimension)
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: filename
        required: Yes
        default: !!str 
        cpp_type: FileName
        group_name: 
        description: |
          The name of the file containing the EBSD data
      - name: gauss_lobatto_grid
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Grade mesh into boundaries according to Gauss-Lobatto quadrature spacing.
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: type
        required: No
        default: !!str EBSDMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: uniform_refine
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of coarsening levels available in adaptive mesh refinement.
      subblocks:
    - name: /Mesh/<type>/FileMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: No
        default: !!str 1
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: 1 2 3
        description: |
          This is only required for certain mesh formats where the dimension of the mesh cannot be autodetected. In particular you must supply this for GMSH meshes. Note: This is completely ignored for ExodusII meshes!
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: file
        required: Yes
        default: !!str 
        cpp_type: MeshFileName
        group_name: 
        description: |
          The name of the mesh file to read
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: type
        required: No
        default: !!str FileMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Mesh/<type>/GeneratedMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: bias_x
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the x-direction.
      - name: bias_y
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the y-direction.
      - name: bias_z
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the z-direction.
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: Yes
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Main'
        options: 1 2 3
        description: |
          The dimension of the mesh to be generated
      - name: elem_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: EDGE EDGE2 EDGE3 EDGE4 QUAD QUAD4 QUAD8 QUAD9 TRI3 TRI6 HEX HEX8 HEX20 HEX27 TET4 TET10 PRISM6 PRISM15 PRISM18 PYRAMID5 PYRAMID13 PYRAMID14
        description: |
          The type of element from libMesh to generate (default: linear element for requested dimension)
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: gauss_lobatto_grid
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Grade mesh into boundaries according to Gauss-Lobatto quadrature spacing.
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: nx
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the X direction
      - name: ny
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the Y direction
      - name: nz
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the Z direction
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: type
        required: No
        default: !!str GeneratedMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: xmax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper X Coordinate of the generated mesh
      - name: xmin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower X Coordinate of the generated mesh
      - name: ymax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper Y Coordinate of the generated mesh
      - name: ymin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower Y Coordinate of the generated mesh
      - name: zmax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper Z Coordinate of the generated mesh
      - name: zmin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower Z Coordinate of the generated mesh
      subblocks:
    - name: /Mesh/<type>/ImageMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: bias_x
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the x-direction.
      - name: bias_y
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the y-direction.
      - name: bias_z
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the z-direction.
      - name: cells_per_pixel
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The number of mesh cells per pixel, must be <=1 
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: Yes
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Main'
        options: 1 2 3
        description: |
          The dimension of the mesh to be generated
      - name: elem_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: EDGE EDGE2 EDGE3 EDGE4 QUAD QUAD4 QUAD8 QUAD9 TRI3 TRI6 HEX HEX8 HEX20 HEX27 TET4 TET10 PRISM6 PRISM15 PRISM18 PYRAMID5 PYRAMID13 PYRAMID14
        description: |
          The type of element from libMesh to generate (default: linear element for requested dimension)
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: file
        required: No
        default: !!str 
        cpp_type: FileName
        group_name: 
        description: |
          Name of single image file to extract mesh parameters from.  If provided, a 2D mesh is created.
      - name: file_base
        required: No
        default: !!str 
        cpp_type: FileNameNoExtension
        group_name: 
        description: |
          Image file base to open, use this option when a stack of images must be read (ignored if 'file' is given)
      - name: file_range
        required: No
        default: !!str 
        cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
        group_name: 
        description: |
          Range of images to analyze, used with 'file_base' (ignored if 'file' is given)
      - name: file_suffix
        required: No
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          Suffix of the file to open, e.g. 'png'
      - name: gauss_lobatto_grid
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Grade mesh into boundaries according to Gauss-Lobatto quadrature spacing.
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: nx
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the X direction
      - name: ny
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the Y direction
      - name: nz
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the Z direction
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: scale_to_one
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Whether or not to scale the image so its max dimension is 1
      - name: type
        required: No
        default: !!str ImageMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: xmax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper X Coordinate of the generated mesh
      - name: xmin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower X Coordinate of the generated mesh
      - name: ymax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper Y Coordinate of the generated mesh
      - name: ymin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower Y Coordinate of the generated mesh
      - name: zmax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper Z Coordinate of the generated mesh
      - name: zmin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower Z Coordinate of the generated mesh
      subblocks:
    - name: /Mesh/<type>/MeshGeneratorMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: No
        default: !!str 1
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: 1 2 3
        description: |
          This is only required for certain mesh formats where the dimension of the mesh cannot be autodetected. In particular you must supply this for GMSH meshes. Note: This is completely ignored for ExodusII meshes!
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: type
        required: No
        default: !!str MeshGeneratorMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Mesh/<type>/MortarPeriodicMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: bias_x
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the x-direction.
      - name: bias_y
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the y-direction.
      - name: bias_z
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          The amount by which to grow (or shrink) the cells in the z-direction.
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: Yes
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Main'
        options: 1 2 3
        description: |
          The dimension of the mesh to be generated
      - name: elem_type
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: EDGE EDGE2 EDGE3 EDGE4 QUAD QUAD4 QUAD8 QUAD9 TRI3 TRI6 HEX HEX8 HEX20 HEX27 TET4 TET10 PRISM6 PRISM15 PRISM18 PYRAMID5 PYRAMID13 PYRAMID14
        description: |
          The type of element from libMesh to generate (default: linear element for requested dimension)
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: gauss_lobatto_grid
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Grade mesh into boundaries according to Gauss-Lobatto quadrature spacing.
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: nx
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the X direction
      - name: ny
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the Y direction
      - name: nz
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of elements in the Z direction
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: periodic_directions
        required: Yes
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: x y z
        description: |
          Directions along which additional Mortar meshes are generated
      - name: type
        required: No
        default: !!str MortarPeriodicMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: xmax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper X Coordinate of the generated mesh
      - name: xmin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower X Coordinate of the generated mesh
      - name: ymax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper Y Coordinate of the generated mesh
      - name: ymin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower Y Coordinate of the generated mesh
      - name: zmax
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Upper Z Coordinate of the generated mesh
      - name: zmin
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Lower Z Coordinate of the generated mesh
      subblocks:
    - name: /Mesh/<type>/PatternedMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: bottom_boundary
        required: No
        default: !!str bottom_boundary
        cpp_type: BoundaryName
        group_name: 
        description: |
          name of the bottom (y) boundary
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: No
        default: !!str 1
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: 1 2 3
        description: |
          This is only required for certain mesh formats where the dimension of the mesh cannot be autodetected. In particular you must supply this for GMSH meshes. Note: This is completely ignored for ExodusII meshes!
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: files
        required: Yes
        default: !!str 
        cpp_type: std::vector<MeshFileName, std::allocator<MeshFileName> >
        group_name: 
        description: |
          The name of the mesh files to read.  They are automatically assigned ids starting with zero.
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: left_boundary
        required: No
        default: !!str left_boundary
        cpp_type: BoundaryName
        group_name: 
        description: |
          name of the left (x) boundary
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: pattern
        required: Yes
        default: !!str 
        cpp_type: std::vector<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >
        group_name: 
        description: |
          A double-indexed array starting with the upper-left corner
      - name: right_boundary
        required: No
        default: !!str right_boundary
        cpp_type: BoundaryName
        group_name: 
        description: |
          name of the right (x) boundary
      - name: top_boundary
        required: No
        default: !!str top_boundary
        cpp_type: BoundaryName
        group_name: 
        description: |
          name of the top (y) boundary
      - name: type
        required: No
        default: !!str PatternedMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: x_width
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The tile width in the x direction
      - name: y_width
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The tile width in the y direction
      - name: z_width
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The tile width in the z direction
      subblocks:
    - name: /Mesh/<type>/RinglebMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: No
        default: !!str 1
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: 1 2 3
        description: |
          This is only required for certain mesh formats where the dimension of the mesh cannot be autodetected. In particular you must supply this for GMSH meshes. Note: This is completely ignored for ExodusII meshes!
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: gamma
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Gamma parameter
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: inflow_bid
        required: No
        default: !!str 1
        cpp_type: short
        group_name: 
        description: |
          The boundary id to use for the inflow
      - name: inner_wall_bid
        required: No
        default: !!str 2
        cpp_type: short
        group_name: 
        description: |
          The boundary id to use for the inner wall
      - name: kmax
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Value of k on the inner wall.
      - name: kmin
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Value of k on the outer wall.
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: n_extra_q_pts
        required: Yes
        default: !!str 
        cpp_type: int
        group_name: 
        description: |
          How many 'extra' points should be inserted in the final element *in addition to* the equispaced q points.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: num_k_pts
        required: Yes
        default: !!str 
        cpp_type: int
        group_name: 
        description: |
          How many points in the range k=(kmin, kmax).
      - name: num_q_pts
        required: Yes
        default: !!str 
        cpp_type: int
        group_name: 
        description: |
          How many points to discretize the range q = (0.5, k) into.
      - name: outer_wall_bid
        required: No
        default: !!str 4
        cpp_type: short
        group_name: 
        description: |
          The boundary id to use for the outer wall
      - name: outflow_bid
        required: No
        default: !!str 3
        cpp_type: short
        group_name: 
        description: |
          The boundary id to use for the outflow
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: triangles
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          If true, all the quadrilateral elements will be split into triangles
      - name: type
        required: No
        default: !!str RinglebMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Mesh/<type>/SpiralAnnularMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: cylinder_bid
        required: No
        default: !!str 1
        cpp_type: short
        group_name: 
        description: |
          The boundary id to use for the cylinder (inner circle)
      - name: dim
        required: No
        default: !!str 1
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: 1 2 3
        description: |
          This is only required for certain mesh formats where the dimension of the mesh cannot be autodetected. In particular you must supply this for GMSH meshes. Note: This is completely ignored for ExodusII meshes!
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: exterior_bid
        required: No
        default: !!str 2
        cpp_type: short
        group_name: 
        description: |
          The boundary id to use for the exterior (outer circle)
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: initial_delta_r
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Width of the initial layer of elements around the cylinder.This number should be approximately 2 * pi * inner_radius / nodes_per_ring to ensure that the initial layer of elements is almost equilateral
      - name: inner_radius
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The size of the inner circle.
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: nodes_per_ring
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of nodes on each ring.
      - name: num_rings
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of rings.
      - name: outer_radius
        required: Yes
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          The size of the outer circle. Logically, it has to be greater than inner_radius
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: type
        required: No
        default: !!str SpiralAnnularMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: use_tri6
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Generate mesh of TRI6 elements instead of TRI3 elements.
      subblocks:
    - name: /Mesh/<type>/StitchedMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: clear_stitched_boundary_ids
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Whether or not to erase the boundary IDs after they've been used for stitching.
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: No
        default: !!str 1
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: 1 2 3
        description: |
          This is only required for certain mesh formats where the dimension of the mesh cannot be autodetected. In particular you must supply this for GMSH meshes. Note: This is completely ignored for ExodusII meshes!
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: files
        required: Yes
        default: !!str 
        cpp_type: std::vector<MeshFileName, std::allocator<MeshFileName> >
        group_name: 
        description: |
          The name of the mesh files to read.  These mesh files will be 'stitched' into the current mesh in this order.
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: stitch_boundaries
        required: Yes
        default: !!str 
        cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
        group_name: 
        description: |
          Pairs of boundary names (one after the other) to stitch together for each step.
      - name: type
        required: No
        default: !!str StitchedMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Mesh/<type>/TiledMesh
      description: |
        
      parameters:
      - name: allow_renumbering
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          If allow_renumbering=false, node and element numbers are kept fixed until deletion
      - name: back_boundary
        required: No
        default: !!str back_boundary
        cpp_type: BoundaryName
        group_name: 
        description: |
          name of the back (z) boundary
      - name: bottom_boundary
        required: No
        default: !!str bottom_boundary
        cpp_type: BoundaryName
        group_name: 
        description: |
          name of the bottom (y) boundary
      - name: centroid_partitioner_direction
        required: No
        default: !!str 
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: x y z radial
        description: |
          Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
      - name: construct_node_list_from_side_list
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether or not to generate nodesets from the sidesets (usually a good idea).
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: dim
        required: No
        default: !!str 1
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: 1 2 3
        description: |
          This is only required for certain mesh formats where the dimension of the mesh cannot be autodetected. In particular you must supply this for GMSH meshes. Note: This is completely ignored for ExodusII meshes!
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: file
        required: Yes
        default: !!str 
        cpp_type: MeshFileName
        group_name: 
        description: |
          The name of the mesh file to read
      - name: front_boundary
        required: No
        default: !!str front_boundary
        cpp_type: BoundaryName
        group_name: 
        description: |
          name of the front (z) boundary
      - name: ghosting_patch_size
        required: No
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
      - name: left_boundary
        required: No
        default: !!str left_boundary
        cpp_type: BoundaryName
        group_name: 
        description: |
          name of the left (x) boundary
      - name: max_leaf_size
        required: No
        default: !!str 10
        cpp_type: unsigned int
        group_name: 
        description: |
          The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
      - name: nemesis
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
      - name: parallel_type
        required: No
        default: !!str DEFAULT
        cpp_type: MooseEnum
        group_name: 
        options: DISTRIBUTED REPLICATED DEFAULT
        description: |
          DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
      - name: partitioner
        required: No
        default: !!str default
        cpp_type: MooseEnum
        group_name: 'Partitioning'
        options: default metis parmetis linear centroid hilbert_sfc morton_sfc
        description: |
          Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
      - name: patch_size
        required: No
        default: !!str 40
        cpp_type: unsigned int
        group_name: 'Advanced'
        description: |
          The number of nodes to consider in the NearestNode neighborhood.
      - name: patch_update_strategy
        required: No
        default: !!str never
        cpp_type: MooseEnum
        group_name: 'Advanced'
        options: never always auto iteration
        description: |
          How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
      - name: right_boundary
        required: No
        default: !!str right_boundary
        cpp_type: BoundaryName
        group_name: 
        description: |
          name of the right (x) boundary
      - name: top_boundary
        required: No
        default: !!str top_boundary
        cpp_type: BoundaryName
        group_name: 
        description: |
          name of the top (y) boundary
      - name: type
        required: No
        default: !!str TiledMesh
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: x_tiles
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of tiles to stitch together (left to right) in the x-direction
      - name: x_width
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The tile width in the x direction
      - name: y_tiles
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of tiles to stitch together (top to bottom) in the y-direction
      - name: y_width
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The tile width in the y direction
      - name: z_tiles
        required: No
        default: !!str 1
        cpp_type: unsigned int
        group_name: 
        description: |
          Number of tiles to stitch together (front to back) in the z-direction
      - name: z_width
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          The tile width in the z direction
      subblocks:
  - name: /Mesh/MortarInterfaces
    description: |
      
    parameters:
    subblocks:
    - name: /Mesh/MortarInterfaces/*
      description: |
        
      parameters:
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: master
        required: Yes
        default: !!str 
        cpp_type: BoundaryName
        group_name: 
        description: |
          Master side ID
      - name: slave
        required: Yes
        default: !!str 
        cpp_type: BoundaryName
        group_name: 
        description: |
          Slave side ID
      - name: subdomain
        required: Yes
        default: !!str 
        cpp_type: SubdomainName
        group_name: 
        description: |
          Subdomain name that is the mortar interface
      subblocks:
  - name: /Mesh/Partitioner
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
    - name: /Mesh/Partitioner/<type>
      description: |
        
      parameters:
      subblocks:
      - name: /Mesh/Partitioner/<type>/GridPartitioner
        description: |
          
        parameters:
        - name: allow_renumbering
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 
          description: |
            If allow_renumbering=false, node and element numbers are kept fixed until deletion
        - name: bias_x
          required: No
          default: !!str 1
          cpp_type: double
          group_name: 
          description: |
            The amount by which to grow (or shrink) the cells in the x-direction.
        - name: bias_y
          required: No
          default: !!str 1
          cpp_type: double
          group_name: 
          description: |
            The amount by which to grow (or shrink) the cells in the y-direction.
        - name: bias_z
          required: No
          default: !!str 1
          cpp_type: double
          group_name: 
          description: |
            The amount by which to grow (or shrink) the cells in the z-direction.
        - name: centroid_partitioner_direction
          required: No
          default: !!str 
          cpp_type: MooseEnum
          group_name: 'Partitioning'
          options: x y z radial
          description: |
            Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
        - name: construct_node_list_from_side_list
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Whether or not to generate nodesets from the sidesets (usually a good idea).
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: gauss_lobatto_grid
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Grade mesh into boundaries according to Gauss-Lobatto quadrature spacing.
        - name: ghosting_patch_size
          required: No
          default: !!str 
          cpp_type: unsigned int
          group_name: 
          description: |
            The number of nearest neighbors considered for ghosting purposes when 'iteration' patch update strategy is used. Default is 5 * patch_size.
        - name: max_leaf_size
          required: No
          default: !!str 10
          cpp_type: unsigned int
          group_name: 
          description: |
            The maximum number of points in each leaf of the KDTree used in the nearest neighbor search. As the leaf size becomes larger,KDTree construction becomes faster but the nearest neighbor searchbecomes slower.
        - name: nemesis
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            If nemesis=true and file=foo.e, actually reads foo.e.N.0, foo.e.N.1, ... foo.e.N.N-1, where N = # CPUs, with NemesisIO.
        - name: nx
          required: No
          default: !!str 1
          cpp_type: unsigned int
          group_name: 
          description: |
            Number of elements in the X direction
        - name: ny
          required: No
          default: !!str 1
          cpp_type: unsigned int
          group_name: 
          description: |
            Number of elements in the Y direction
        - name: nz
          required: No
          default: !!str 1
          cpp_type: unsigned int
          group_name: 
          description: |
            Number of elements in the Z direction
        - name: parallel_type
          required: No
          default: !!str REPLICATED
          cpp_type: MooseEnum
          group_name: 
          options: DISTRIBUTED REPLICATED DEFAULT
          description: |
            DISTRIBUTED: Always use libMesh::DistributedMesh REPLICATED: Always use libMesh::ReplicatedMesh DEFAULT: Use libMesh::ReplicatedMesh unless --distributed-mesh is specified on the command line
        - name: partitioner
          required: No
          default: !!str linear
          cpp_type: MooseEnum
          group_name: 'Partitioning'
          options: default metis parmetis linear centroid hilbert_sfc morton_sfc
          description: |
            Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
        - name: patch_size
          required: No
          default: !!str 40
          cpp_type: unsigned int
          group_name: 'Advanced'
          description: |
            The number of nodes to consider in the NearestNode neighborhood.
        - name: patch_update_strategy
          required: No
          default: !!str never
          cpp_type: MooseEnum
          group_name: 'Advanced'
          options: never always auto iteration
          description: |
            How often to update the geometric search 'patch'.  The default is to never update it (which is the most efficient but could be a problem with lots of relative motion). 'always' will update the patch for all slave nodes at the beginning of every timestep which might be time consuming. 'auto' will attempt to determine at the start of which timesteps the patch for all slave nodes needs to be updated automatically.'iteration' updates the patch at every nonlinear iteration for a subset of slave nodes for which penetration is not detected. If there can be substantial relative motion between the master and slave surfaces during the nonlinear iterations within a timestep, it is advisable to use 'iteration' option to ensure accurate contact detection.
        - name: type
          required: No
          default: !!str GridPartitioner
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Mesh/Partitioner/<type>/LibmeshPartitioner
        description: |
          
        parameters:
        - name: blocks
          required: No
          default: !!str 
          cpp_type: std::vector<std::vector<SubdomainName, std::allocator<SubdomainName> >, std::allocator<std::vector<SubdomainName, std::allocator<SubdomainName> > > >
          group_name: 
          description: |
            Block is seperated by ;, and partition mesh block by block. 
        - name: centroid_partitioner_direction
          required: No
          default: !!str 
          cpp_type: MooseEnum
          group_name: 
          options: x y z radial
          description: |
            Specifies the sort direction if using the centroid partitioner. Available options: x, y, z, radial
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: partitioner
          required: Yes
          default: !!str 
          cpp_type: MooseEnum
          group_name: 
          options: metis parmetis linear centroid hilbert_sfc morton_sfc subdomain_partitioner
          description: |
            Specifies a mesh partitioner to use when splitting the mesh for a parallel computation.
        - name: type
          required: No
          default: !!str LibmeshPartitioner
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
      - name: /Mesh/Partitioner/<type>/PetscExternalPartitioner
        description: |
          
        parameters:
        - name: apply_element_weight
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Indicate if we are going to apply element weights to partitioners
        - name: apply_side_weight
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Indicate if we are going to apply side weights to partitioners
        - name: control_tags
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 'Advanced'
          description: |
            Adds user-defined labels for accessing object parameters via control logic.
        - name: enable
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Set the enabled status of the MooseObject.
        - name: part_package
          required: No
          default: !!str parmetis
          cpp_type: MooseEnum
          group_name: 
          options: parmetis ptscotch chaco party hierarch
          description: |
            The external package is used for partitioning the mesh via PETSc
        - name: type
          required: No
          default: !!str PetscExternalPartitioner
          cpp_type: std::string
          group_name: 
          description: |
            
        subblocks:
- name: /MeshGenerators
  description: |
    
  parameters:
  subblocks:
  - name: /MeshGenerators/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /MeshGenerators/AllSideSetsByNormalsGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: fixed_normal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This Boolean determines whether we fix our normal or allow it to vary to "paint" around curves
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: type
      required: No
      default: !!str AllSideSetsByNormalsGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variance
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The variance [0.0 - 1.0] allowed when comparing normals
    subblocks:
  - name: /MeshGenerators/AnnularMeshGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: growth_r
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The ratio of radial sizes of successive rings of elements
    - name: nr
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of elements in the radial direction
    - name: nt
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of elements in the angular direction
    - name: quad_subdomain_id
      required: No
      default: !!str 0
      cpp_type: unsigned short
      group_name: 
      description: |
        The subdomain ID given to the QUAD4 elements
    - name: rmax
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Outer radius
    - name: rmin
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Inner radius.  If rmin=0 then a disc mesh (with no central hole) will be created.
    - name: tmax
      required: No
      default: !!str 6.28319
      cpp_type: double
      group_name: 
      description: |
        Maximum angle, measured anticlockwise from x axis.  If tmin=0 and tmax=2Pi an annular mesh is created.  Otherwise, only a sector of an annulus is created
    - name: tmin
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Minimum angle, measured anticlockwise from x axis
    - name: tri_subdomain_id
      required: No
      default: !!str 1
      cpp_type: unsigned short
      group_name: 
      description: |
        The subdomain ID given to the TRI3 elements (these exist only if rmin=0, and they exist at the center of the disc
    - name: type
      required: No
      default: !!str AnnularMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/BlockDeletionGenerator
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        The block to be deleted
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: new_boundary
      required: No
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        optional boundary name to assign to the cut surface
    - name: type
      required: No
      default: !!str BlockDeletionGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/BoundingBoxNodeSetGenerator
    description: |
      
    parameters:
    - name: bottom_left
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between) of the box to select the nodes.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: location
      required: No
      default: !!str INSIDE
      cpp_type: MooseEnum
      group_name: 
      options: INSIDE OUTSIDE
      description: |
        Control of where the nodeset is to be set
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the nodeset to create
    - name: top_right
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between) of the box to select the nodes.
    - name: type
      required: No
      default: !!str BoundingBoxNodeSetGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/BreakBoundaryOnSubdomainGenerator
    description: |
      
    parameters:
    - name: boundaries
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        Boundaries to be broken. Default means to break all boundaries
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: type
      required: No
      default: !!str BreakBoundaryOnSubdomainGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/BreakMeshByBlockGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: interface_name
      required: No
      default: !!str interface
      cpp_type: std::string
      group_name: 
      description: |
        the name of the new interface. Cannot be used whit `split_interface=true`
    - name: split_interface
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true, it create a different interface for each block pair.
    - name: type
      required: No
      default: !!str BreakMeshByBlockGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/ConcentricCircleMeshGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: has_outer_square
      required: Yes
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        It determines if meshes for a outer square are added to concentric circle meshes.
    - name: inner_mesh_fraction
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Length of inner square / radius of the innermost circle
    - name: num_sectors
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        num_sectors % 2 = 0, num_sectors > 0Number of azimuthal sectors in each quadrant'num_sectors' must be an even number.
    - name: pitch
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The moderator can be added to complete meshes for one unit cell of fuel assembly.Elements are quad meshes.
    - name: portion
      required: No
      default: !!str full
      cpp_type: MooseEnum
      group_name: 
      options: full top_right top_left bottom_left bottom_right right_half left_half top_half bottom_half
      description: |
        Control of which part of mesh is created
    - name: preserve_volumes
      required: Yes
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Volume of concentric circles can be preserved using this function.
    - name: radii
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Radii of major concentric circles
    - name: rings
      required: Yes
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Number of rings in each circle or in the moderator
    - name: type
      required: No
      default: !!str ConcentricCircleMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/ElementGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elem_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: EDGE2 EDGE3 EDGE4 QUAD4 QUAD8 QUAD9 TRI3 TRI6 HEX8 HEX20 HEX27 TET4 TET10 PRISM6 PRISM15 PRISM18 PYRAMID5 PYRAMID13 PYRAMID14
      description: |
        The type of element from libMesh to generate
    - name: element_connectivity
      required: Yes
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        List of nodes to use for each element
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: No
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        Optional input mesh to add the elements to
    - name: nodal_positions
      required: Yes
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        The x,y,z positions of the nodes
    - name: type
      required: No
      default: !!str ElementGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/ElementSubdomainIDGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: element_ids
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        New element IDs of all elements
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: subdomain_ids
      required: Yes
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        New subdomain IDs of all elements
    - name: type
      required: No
      default: !!str ElementSubdomainIDGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/ExtraNodesetGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coord
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The nodes with coordinates you want to be in the nodeset (Either this parameter or "nodes" must be supplied).
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the boundary to create
    - name: nodes
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The nodes you want to be in the nodeset (Either this parameter or "coord" must be supplied).
    - name: tolerance
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        The tolerance in which two nodes are considered identical
    - name: type
      required: No
      default: !!str ExtraNodesetGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/FileMeshGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: file
      required: Yes
      default: !!str 
      cpp_type: MeshFileName
      group_name: 
      description: |
        The filename to read.
    - name: type
      required: No
      default: !!str FileMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/GeneratedMeshGenerator
    description: |
      
    parameters:
    - name: bias_x
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The amount by which to grow (or shrink) the cells in the x-direction.
    - name: bias_y
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The amount by which to grow (or shrink) the cells in the y-direction.
    - name: bias_z
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The amount by which to grow (or shrink) the cells in the z-direction.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: dim
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 'Main'
      options: 1 2 3
      description: |
        The dimension of the mesh to be generated
    - name: elem_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: EDGE EDGE2 EDGE3 EDGE4 QUAD QUAD4 QUAD8 QUAD9 TRI3 TRI6 HEX HEX8 HEX20 HEX27 TET4 TET10 PRISM6 PRISM15 PRISM18 PYRAMID5 PYRAMID13 PYRAMID14
      description: |
        The type of element from libMesh to generate (default: linear element for requested dimension)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: gauss_lobatto_grid
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Grade mesh into boundaries according to Gauss-Lobatto quadrature spacing.
    - name: nx
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of elements in the X direction
    - name: ny
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of elements in the Y direction
    - name: nz
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of elements in the Z direction
    - name: type
      required: No
      default: !!str GeneratedMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: xmax
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Upper X Coordinate of the generated mesh
    - name: xmin
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Lower X Coordinate of the generated mesh
    - name: ymax
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Upper Y Coordinate of the generated mesh
    - name: ymin
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Lower Y Coordinate of the generated mesh
    - name: zmax
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Upper Z Coordinate of the generated mesh
    - name: zmin
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Lower Z Coordinate of the generated mesh
    subblocks:
  - name: /MeshGenerators/ImageMeshGenerator
    description: |
      
    parameters:
    - name: bias_x
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The amount by which to grow (or shrink) the cells in the x-direction.
    - name: bias_y
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The amount by which to grow (or shrink) the cells in the y-direction.
    - name: bias_z
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The amount by which to grow (or shrink) the cells in the z-direction.
    - name: cells_per_pixel
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The number of mesh cells per pixel, must be <=1 
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: dim
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 'Main'
      options: 1 2 3
      description: |
        The dimension of the mesh to be generated
    - name: elem_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: EDGE EDGE2 EDGE3 EDGE4 QUAD QUAD4 QUAD8 QUAD9 TRI3 TRI6 HEX HEX8 HEX20 HEX27 TET4 TET10 PRISM6 PRISM15 PRISM18 PYRAMID5 PYRAMID13 PYRAMID14
      description: |
        The type of element from libMesh to generate (default: linear element for requested dimension)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of single image file to extract mesh parameters from.  If provided, a 2D mesh is created.
    - name: file_base
      required: No
      default: !!str 
      cpp_type: FileNameNoExtension
      group_name: 
      description: |
        Image file base to open, use this option when a stack of images must be read (ignored if 'file' is given)
    - name: file_range
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Range of images to analyze, used with 'file_base' (ignored if 'file' is given)
    - name: file_suffix
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Suffix of the file to open, e.g. 'png'
    - name: gauss_lobatto_grid
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Grade mesh into boundaries according to Gauss-Lobatto quadrature spacing.
    - name: nx
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of elements in the X direction
    - name: ny
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of elements in the Y direction
    - name: nz
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of elements in the Z direction
    - name: scale_to_one
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to scale the image so its max dimension is 1
    - name: type
      required: No
      default: !!str ImageMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: xmax
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Upper X Coordinate of the generated mesh
    - name: xmin
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Lower X Coordinate of the generated mesh
    - name: ymax
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Upper Y Coordinate of the generated mesh
    - name: ymin
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Lower Y Coordinate of the generated mesh
    - name: zmax
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Upper Z Coordinate of the generated mesh
    - name: zmin
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Lower Z Coordinate of the generated mesh
    subblocks:
  - name: /MeshGenerators/ImageSubdomainGenerator
    description: |
      
    parameters:
    - name: component
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The image RGB-component to return, leaving this blank will result in a greyscale value for the image to be created. The component number is zero based, i.e. 0 returns the first (RED) component of the image.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: dimensions
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        x,y,z dimensions of the image (defaults to mesh dimensions)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of single image file to extract mesh parameters from.  If provided, a 2D mesh is created.
    - name: file_base
      required: No
      default: !!str 
      cpp_type: FileNameNoExtension
      group_name: 
      description: |
        Image file base to open, use this option when a stack of images must be read (ignored if 'file' is given)
    - name: file_range
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Range of images to analyze, used with 'file_base' (ignored if 'file' is given)
    - name: file_suffix
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Suffix of the file to open, e.g. 'png'
    - name: flip_x
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Flip'
      description: |
        Flip the image along the x-axis
    - name: flip_y
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Flip'
      description: |
        Flip the image along the y-axis
    - name: flip_z
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Flip'
      description: |
        Flip the image along the z-axis
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: lower_value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 'Threshold'
      description: |
        The value to set for data less than the threshold value
    - name: origin
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Origin of the image (defaults to mesh origin)
    - name: scale
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 'Rescale'
      description: |
        Multiplier to apply to all pixel values; occurs after shifting
    - name: shift
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 'Rescale'
      description: |
        Value to add to all pixels; occurs prior to scaling
    - name: threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Threshold'
      description: |
        The threshold value
    - name: type
      required: No
      default: !!str ImageSubdomainGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: upper_value
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 'Threshold'
      description: |
        The value to set for data greater than the threshold value
    subblocks:
  - name: /MeshGenerators/LowerDBlockFromSidesetGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: new_block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        The lower dimensional block id to create
    - name: new_block_name
      required: No
      default: !!str 
      cpp_type: SubdomainName
      group_name: 
      description: |
        The lower dimensional block name to create (optional)
    - name: sidesets
      required: Yes
      default: !!str 
      cpp_type: std::vector<short, std::allocator<short> >
      group_name: 
      description: |
        The sidesets from which to create the new block
    - name: type
      required: No
      default: !!str LowerDBlockFromSidesetGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/MeshExtruderGenerator
    description: |
      
    parameters:
    - name: bottom_sideset
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The boundary that will be applied to the bottom of the extruded mesh
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: existing_subdomains
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        The subdomains that will be remapped for specific layers
    - name: extrusion_vector
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The direction and length of the extrusion
    - name: input
      required: No
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        the mesh we want to extrude
    - name: layers
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The layers where the "existing_subdomain" will be remapped to new ids
    - name: new_ids
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The list of new ids, This list should be either length "existing_subdomains" or "existing_subdomains" * layers
    - name: num_layers
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of layers in the extruded mesh
    - name: top_sideset
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The boundary that will be to the top of the extruded mesh
    - name: type
      required: No
      default: !!str MeshExtruderGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/MeshSideSetGenerator
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        Subdomain id to set for the new elements along the boundary
    - name: block_name
      required: No
      default: !!str 
      cpp_type: SubdomainName
      group_name: 
      description: |
        Subdomain name to set for the new elements along the boundary (optional)
    - name: boundaries
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the boundary to mesh
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: type
      required: No
      default: !!str MeshSideSetGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/OrientedSubdomainBoundingBoxGenerator
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        Subdomain id to set for inside/outside the bounding box
    - name: center
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The center (many people spell this 'center') of the box.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: height
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The height of the box
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: length
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The length of the box
    - name: length_direction
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The direction along which the length is oriented (must be perpendicular to width_direction).
    - name: location
      required: No
      default: !!str INSIDE
      cpp_type: MooseEnum
      group_name: 
      options: INSIDE OUTSIDE
      description: |
        Control of where the subdomain id is to be set
    - name: type
      required: No
      default: !!str OrientedSubdomainBoundingBoxGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: width
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The width of the box
    - name: width_direction
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The direction along which the width is oriented.
    subblocks:
  - name: /MeshGenerators/ParsedGenerateSideset
    description: |
      
    parameters:
    - name: combinatorial_geometry
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Function expression encoding a combinatorial geometry
    - name: constant_expressions
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of values for the constants in constant_names (can be an FParser expression)
    - name: constant_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of constants used in the parsed function (use this for kB etc.)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: fixed_normal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This Boolean determines whether we fix our normal or allow it to vary to "paint" around curves
    - name: included_subdomain_ids
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        A set of subdomain ids whose sides will be included in the new sidesets
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: new_sideset_name
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The name of the new sideset
    - name: normal
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        If provided specifies the normal vector on sides that are added to the new 
    - name: type
      required: No
      default: !!str ParsedGenerateSideset
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variance
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The variance [0.0 - 1.0] allowed when comparing normals
    subblocks:
  - name: /MeshGenerators/ParsedSubdomainMeshGenerator
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        Subdomain id to set for inside of the combinatorial
    - name: block_name
      required: No
      default: !!str 
      cpp_type: SubdomainName
      group_name: 
      description: |
        Subdomain name to set for inside of the combinatorial
    - name: combinatorial_geometry
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Function expression encoding a combinatorial geometry
    - name: constant_expressions
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of values for the constants in constant_names (can be an FParser expression)
    - name: constant_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of constants used in the parsed function (use this for kB etc.)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: excluded_subdomain_ids
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        A set of subdomain ids that will not changed even if they are inside/outside the combinatorial geometry
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: type
      required: No
      default: !!str ParsedSubdomainMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/PatternedMeshGenerator
    description: |
      
    parameters:
    - name: bottom_boundary
      required: No
      default: !!str bottom
      cpp_type: BoundaryName
      group_name: 
      description: |
        name of the bottom (y) boundary
    - name: bottom_boundary_id
      required: No
      default: !!str 
      cpp_type: short
      group_name: 
      description: |
        name of the bottom (y) boundary
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: inputs
      required: Yes
      default: !!str 
      cpp_type: std::vector<MeshGeneratorName, std::allocator<MeshGeneratorName> >
      group_name: 
      description: |
        The input MeshGenerators.
    - name: left_boundary
      required: No
      default: !!str left
      cpp_type: BoundaryName
      group_name: 
      description: |
        name of the left (x) boundary
    - name: left_boundary_id
      required: No
      default: !!str 
      cpp_type: short
      group_name: 
      description: |
        id of the left (x) boundary
    - name: pattern
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >
      group_name: 
      description: |
        A double-indexed array starting with the upper-left corner
    - name: right_boundary
      required: No
      default: !!str right
      cpp_type: BoundaryName
      group_name: 
      description: |
        name of the right (x) boundary
    - name: right_boundary_id
      required: No
      default: !!str 
      cpp_type: short
      group_name: 
      description: |
        id of the right (x) boundary
    - name: top_boundary
      required: No
      default: !!str top
      cpp_type: BoundaryName
      group_name: 
      description: |
        name of the top (y) boundary
    - name: top_boundary_id
      required: No
      default: !!str 
      cpp_type: short
      group_name: 
      description: |
        name of the top (y) boundary
    - name: type
      required: No
      default: !!str PatternedMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: x_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The tile width in the x direction
    - name: y_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The tile width in the y direction
    - name: z_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The tile width in the z direction
    subblocks:
  - name: /MeshGenerators/RenameBlockGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: new_block_id
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        Elements with the old block number (or name) will be given this block number.  If the old blocks are named, their names will be passed onto the newly numbered blocks.
    - name: new_block_name
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        Elements with the old block number (or name) will be given this block name.  No change of block ID is performed, unless multiple old blocks are given the same name, in which case they are all given the first old block number.
    - name: old_block_id
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        Elements with this block number will be given the new_block_number or new_block_name.  You must supply either old_block_id or old_block_name.  You may supply a vector of old_block_id, in which case the new_block information must also be a vector.
    - name: old_block_name
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        Elements with this block name will be given the new_block_number or new_block_name.  You must supply either old_block_id or old_block_name.  You may supply a vector of old_block_name, in which case the new_block information must also be a vector.
    - name: type
      required: No
      default: !!str RenameBlockGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/RinglebMeshGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: gamma
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Gamma parameter
    - name: inflow_bid
      required: No
      default: !!str 1
      cpp_type: short
      group_name: 
      description: |
        The boundary id to use for the inflow
    - name: inner_wall_bid
      required: No
      default: !!str 2
      cpp_type: short
      group_name: 
      description: |
        The boundary id to use for the inner wall
    - name: kmax
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Value of k on the inner wall.
    - name: kmin
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Value of k on the outer wall.
    - name: n_extra_q_pts
      required: Yes
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        How many 'extra' points should be inserted in the final element *in addition to* the equispaced q points.
    - name: num_k_pts
      required: Yes
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        How many points in the range k=(kmin, kmax).
    - name: num_q_pts
      required: Yes
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        How many points to discretize the range q = (0.5, k) into.
    - name: outer_wall_bid
      required: No
      default: !!str 4
      cpp_type: short
      group_name: 
      description: |
        The boundary id to use for the outer wall
    - name: outflow_bid
      required: No
      default: !!str 3
      cpp_type: short
      group_name: 
      description: |
        The boundary id to use for the outflow
    - name: triangles
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true, all the quadrilateral elements will be split into triangles
    - name: type
      required: No
      default: !!str RinglebMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/SideSetsAroundSubdomainGenerator
    description: |
      
    parameters:
    - name: block
      required: Yes
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The blocks around which to create sidesets
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: fixed_normal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This Boolean determines whether we fix our normal or allow it to vary to "paint" around curves
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs to create on the supplied subdomain
    - name: normal
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        If supplied, only faces with normal equal to this, up to normal_tol, will be added to the sidesets specified
    - name: normal_tol
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        If normal is supplied then faces are only added if face_normal.normal_hat >= 1 - normal_tol, where normal_hat = normal/|normal|
    - name: type
      required: No
      default: !!str SideSetsAroundSubdomainGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variance
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The variance [0.0 - 1.0] allowed when comparing normals
    subblocks:
  - name: /MeshGenerators/SideSetsBetweenSubdomainsGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: master_block
      required: Yes
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The master set of blocks for which to draw a sideset between
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the boundary to create
    - name: paired_block
      required: Yes
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The paired set of blocks for which to draw a sideset between
    - name: type
      required: No
      default: !!str SideSetsBetweenSubdomainsGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/SideSetsFromBoundingBoxGenerator
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        Subdomain id to set for inside/outside the bounding box
    - name: bottom_left
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between).
    - name: boundary_id_new
      required: Yes
      default: !!str 
      cpp_type: short
      group_name: 
      description: |
        Boundary id on specified block within the bounding box to assign
    - name: boundary_id_old
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        Boundary id on specified block within the bounding box to select
    - name: boundary_id_overlap
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true if boundaries need to overlap on sideset to be detected.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: location
      required: No
      default: !!str INSIDE
      cpp_type: MooseEnum
      group_name: 
      options: INSIDE OUTSIDE
      description: |
        Control of where the subdomain id is to be set
    - name: top_right
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between).
    - name: type
      required: No
      default: !!str SideSetsFromBoundingBoxGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/SideSetsFromNormalsGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: fixed_normal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This Boolean determines whether we fix our normal or allow it to vary to "paint" around curves
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the boundary to create
    - name: normals
      required: Yes
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        A list of normals for which to start painting sidesets
    - name: type
      required: No
      default: !!str SideSetsFromNormalsGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variance
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The variance [0.0 - 1.0] allowed when comparing normals
    subblocks:
  - name: /MeshGenerators/SideSetsFromPointsGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: fixed_normal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This Boolean determines whether we fix our normal or allow it to vary to "paint" around curves
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the boundary to create
    - name: points
      required: Yes
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        A list of points from which to start painting sidesets
    - name: type
      required: No
      default: !!str SideSetsFromPointsGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variance
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The variance [0.0 - 1.0] allowed when comparing normals
    subblocks:
  - name: /MeshGenerators/SmoothMeshGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to smooth.
    - name: iterations
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of smoothing iterations to do.
    - name: type
      required: No
      default: !!str SmoothMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/SpiralAnnularMeshGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cylinder_bid
      required: No
      default: !!str 1
      cpp_type: short
      group_name: 
      description: |
        The boundary id to use for the cylinder (inner circle)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: exterior_bid
      required: No
      default: !!str 2
      cpp_type: short
      group_name: 
      description: |
        The boundary id to use for the exterior (outer circle)
    - name: initial_delta_r
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Width of the initial layer of elements around the cylinder.This number should be approximately 2 * pi * inner_radius / nodes_per_ring to ensure that the initial layer of elements is almost equilateral
    - name: inner_radius
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The size of the inner circle.
    - name: nodes_per_ring
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of nodes on each ring.
    - name: num_rings
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of rings.
    - name: outer_radius
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The size of the outer circle. Logically, it has to be greater than inner_radius
    - name: type
      required: No
      default: !!str SpiralAnnularMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_tri6
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Generate mesh of TRI6 elements instead of TRI3 elements.
    subblocks:
  - name: /MeshGenerators/StitchedMeshGenerator
    description: |
      
    parameters:
    - name: clear_stitched_boundary_ids
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to clear the stitchd boundary IDs
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: inputs
      required: Yes
      default: !!str 
      cpp_type: std::vector<MeshGeneratorName, std::allocator<MeshGeneratorName> >
      group_name: 
      description: |
        The input MeshGenerators.
    - name: stitch_boundaries_pairs
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::vector<std::string, std::allocator<std::string> >, std::allocator<std::vector<std::string, std::allocator<std::string> > > >
      group_name: 
      description: |
        Pairs of boundaries to be stitched together
    - name: type
      required: No
      default: !!str StitchedMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/SubdomainBoundingBoxGenerator
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        Subdomain id to set for inside/outside the bounding box
    - name: block_name
      required: No
      default: !!str 
      cpp_type: SubdomainName
      group_name: 
      description: |
        Subdomain name to set for inside/outside the bounding box (optional)
    - name: bottom_left
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: location
      required: No
      default: !!str INSIDE
      cpp_type: MooseEnum
      group_name: 
      options: INSIDE OUTSIDE
      description: |
        Control of where the subdomain id is to be set
    - name: top_right
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between).
    - name: type
      required: No
      default: !!str SubdomainBoundingBoxGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/SubdomainIDGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: subdomain_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        New subdomain IDs of all elements
    - name: type
      required: No
      default: !!str SubdomainIDGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshGenerators/TiledMeshGenerator
    description: |
      
    parameters:
    - name: back_boundary
      required: No
      default: !!str back
      cpp_type: BoundaryName
      group_name: 
      description: |
        name of the back (z) boundary
    - name: bottom_boundary
      required: No
      default: !!str bottom
      cpp_type: BoundaryName
      group_name: 
      description: |
        name of the bottom (y) boundary
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: front_boundary
      required: No
      default: !!str front
      cpp_type: BoundaryName
      group_name: 
      description: |
        name of the front (z) boundary
    - name: input
      required: No
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to repeat
    - name: left_boundary
      required: No
      default: !!str left
      cpp_type: BoundaryName
      group_name: 
      description: |
        name of the left (x) boundary
    - name: right_boundary
      required: No
      default: !!str right
      cpp_type: BoundaryName
      group_name: 
      description: |
        name of the right (x) boundary
    - name: top_boundary
      required: No
      default: !!str top
      cpp_type: BoundaryName
      group_name: 
      description: |
        name of the top (y) boundary
    - name: type
      required: No
      default: !!str TiledMeshGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: x_tiles
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of tiles to stitch together (left to right) in the x-direction
    - name: x_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The tile width in the x direction
    - name: y_tiles
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of tiles to stitch together (top to bottom) in the y-direction
    - name: y_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The tile width in the y direction
    - name: z_tiles
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of tiles to stitch together (front to back) in the z-direction
    - name: z_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The tile width in the z direction
    subblocks:
  - name: /MeshGenerators/TransformGenerator
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: input
      required: Yes
      default: !!str 
      cpp_type: MeshGeneratorName
      group_name: 
      description: |
        The mesh we want to modify
    - name: transform
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: TRANSLATE ROTATE SCALE
      description: |
        The type of transformation to perform (TRANSLATE, ROTATE, SCALE)
    - name: type
      required: No
      default: !!str TransformGenerator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: vector_value
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The value to use for the transformation. When using TRANSLATE or SCALE, the xyz coordinates are applied in each direction respectively. When using ROTATE, the values are interpreted as the Euler angles phi, theta and psi given in degrees.
    subblocks:
- name: /MeshModifiers
  description: |
    
  parameters:
  subblocks:
  - name: /MeshModifiers/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /MeshModifiers/AddAllSideSetsByNormals
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: fixed_normal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This Boolean determines whether we fix our normal or allow it to vary to "paint" around curves
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: type
      required: No
      default: !!str AddAllSideSetsByNormals
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variance
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The variance [0.0 - 1.0] allowed when comparing normals
    subblocks:
  - name: /MeshModifiers/AddExtraNodeset
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coord
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The nodes with coordinates you want to be in the nodeset (Either this parameter or "nodes" must be supplied).
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the boundary to create
    - name: nodes
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The nodes you want to be in the nodeset (Either this parameter or "coord" must be supplied).
    - name: tolerance
      required: No
      default: !!str 1e-06
      cpp_type: double
      group_name: 
      description: |
        The tolerance in which two nodes are considered identical
    - name: type
      required: No
      default: !!str AddExtraNodeset
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/AddSideSetsFromBoundingBox
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        Subdomain id to set for inside/outside the bounding box
    - name: bottom_left
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between).
    - name: boundary_id_new
      required: Yes
      default: !!str 
      cpp_type: short
      group_name: 
      description: |
        Boundary id on specified block within the bounding box to assign
    - name: boundary_id_old
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        Boundary id on specified block within the bounding box to select
    - name: boundary_id_overlap
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true if boundaries need to overlap on sideset to be detected.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: location
      required: No
      default: !!str INSIDE
      cpp_type: MooseEnum
      group_name: 
      options: INSIDE OUTSIDE
      description: |
        Control of where the subdomain id is to be set
    - name: top_right
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between).
    - name: type
      required: No
      default: !!str AddSideSetsFromBoundingBox
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/AssignElementSubdomainID
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: element_ids
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        New subdomain IDs of all elements
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: subdomain_ids
      required: Yes
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        New subdomain IDs of all elements
    - name: type
      required: No
      default: !!str AssignElementSubdomainID
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/AssignSubdomainID
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: subdomain_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        New subdomain IDs of all elements
    - name: type
      required: No
      default: !!str AssignSubdomainID
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/BlockDeleter
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        The block to be deleted
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: new_boundary
      required: No
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        optional boundary name to assign to the cut surface
    - name: type
      required: No
      default: !!str BlockDeleter
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/BoundingBoxNodeSet
    description: |
      
    parameters:
    - name: bottom_left
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between) of the box to select the nodes.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: location
      required: No
      default: !!str INSIDE
      cpp_type: MooseEnum
      group_name: 
      options: INSIDE OUTSIDE
      description: |
        Control of where the nodeset is to be set
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the nodeset to create
    - name: top_right
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between) of the box to select the nodes.
    - name: type
      required: No
      default: !!str BoundingBoxNodeSet
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/BreakBoundaryOnSubdomain
    description: |
      
    parameters:
    - name: boundaries
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        Boundaries to be broken. Default means to break all boundaries
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: type
      required: No
      default: !!str BreakBoundaryOnSubdomain
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/BreakMeshByBlock
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: interface_name
      required: No
      default: !!str interface
      cpp_type: std::string
      group_name: 
      description: |
        the name of the new interface. Cannot be used whit `split_interface=true`
    - name: split_interface
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true, it create a different interface for each block pair.
    - name: type
      required: No
      default: !!str BreakMeshByBlock
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/ImageSubdomain
    description: |
      
    parameters:
    - name: component
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The image RGB-component to return, leaving this blank will result in a greyscale value for the image to be created. The component number is zero based, i.e. 0 returns the first (RED) component of the image.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: dimensions
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        x,y,z dimensions of the image (defaults to mesh dimensions)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of single image file to extract mesh parameters from.  If provided, a 2D mesh is created.
    - name: file_base
      required: No
      default: !!str 
      cpp_type: FileNameNoExtension
      group_name: 
      description: |
        Image file base to open, use this option when a stack of images must be read (ignored if 'file' is given)
    - name: file_range
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Range of images to analyze, used with 'file_base' (ignored if 'file' is given)
    - name: file_suffix
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Suffix of the file to open, e.g. 'png'
    - name: flip_x
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Flip'
      description: |
        Flip the image along the x-axis
    - name: flip_y
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Flip'
      description: |
        Flip the image along the y-axis
    - name: flip_z
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Flip'
      description: |
        Flip the image along the z-axis
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: lower_value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 'Threshold'
      description: |
        The value to set for data less than the threshold value
    - name: origin
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Origin of the image (defaults to mesh origin)
    - name: scale
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 'Rescale'
      description: |
        Multiplier to apply to all pixel values; occurs after shifting
    - name: shift
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 'Rescale'
      description: |
        Value to add to all pixels; occurs prior to scaling
    - name: threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Threshold'
      description: |
        The threshold value
    - name: type
      required: No
      default: !!str ImageSubdomain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: upper_value
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 'Threshold'
      description: |
        The value to set for data greater than the threshold value
    subblocks:
  - name: /MeshModifiers/LowerDBlockFromSideset
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: new_block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        The lower dimensional block id to create
    - name: new_block_name
      required: No
      default: !!str 
      cpp_type: SubdomainName
      group_name: 
      description: |
        The lower dimensional block name to create (optional)
    - name: sidesets
      required: Yes
      default: !!str 
      cpp_type: std::vector<short, std::allocator<short> >
      group_name: 
      description: |
        The sidesets from which to create the new block
    - name: type
      required: No
      default: !!str LowerDBlockFromSideset
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/MeshExtruder
    description: |
      
    parameters:
    - name: bottom_sideset
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The boundary that will be applied to the bottom of the extruded mesh
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: existing_subdomains
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        The subdomains that will be remapped for specific layers
    - name: extrusion_vector
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The direction and length of the extrusion
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: layers
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The layers where the "existing_subdomain" will be remapped to new ids
    - name: new_ids
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The list of new ids, This list should be either length "existing_subdomains" or "existing_subdomains" * layers
    - name: num_layers
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of layers in the extruded mesh
    - name: top_sideset
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The boundary that will be to the top of the extruded mesh
    - name: type
      required: No
      default: !!str MeshExtruder
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/MeshSideSet
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        Subdomain id to set for the new elements along the boundary
    - name: block_name
      required: No
      default: !!str 
      cpp_type: SubdomainName
      group_name: 
      description: |
        Subdomain name to set for the new elements along the boundary (optional)
    - name: boundaries
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the boundary to mesh
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: type
      required: No
      default: !!str MeshSideSet
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/OrientedSubdomainBoundingBox
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        Subdomain id to set for inside/outside the bounding box
    - name: center
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The center (many people spell this 'center') of the box.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: height
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The height of the box
    - name: length
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The length of the box
    - name: length_direction
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The direction along which the length is oriented (must be perpendicular to width_direction).
    - name: location
      required: No
      default: !!str INSIDE
      cpp_type: MooseEnum
      group_name: 
      options: INSIDE OUTSIDE
      description: |
        Control of where the subdomain id is to be set
    - name: type
      required: No
      default: !!str OrientedSubdomainBoundingBox
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: width
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The width of the box
    - name: width_direction
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The direction along which the width is oriented.
    subblocks:
  - name: /MeshModifiers/ParsedAddSideset
    description: |
      
    parameters:
    - name: combinatorial_geometry
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Function expression encoding a combinatorial geometry
    - name: constant_expressions
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of values for the constants in constant_names (can be an FParser expression)
    - name: constant_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of constants used in the parsed function (use this for kB etc.)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: fixed_normal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This Boolean determines whether we fix our normal or allow it to vary to "paint" around curves
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: included_subdomain_ids
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        A set of subdomain ids whose sides will be included in the new sidesets
    - name: new_sideset_name
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The name of the new sideset
    - name: normal
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        If provided specifies the normal vector on sides that are added to the new 
    - name: type
      required: No
      default: !!str ParsedAddSideset
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variance
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The variance [0.0 - 1.0] allowed when comparing normals
    subblocks:
  - name: /MeshModifiers/ParsedSubdomainMeshModifier
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        Subdomain id to set for inside of the combinatorial
    - name: block_name
      required: No
      default: !!str 
      cpp_type: SubdomainName
      group_name: 
      description: |
        Subdomain name to set for inside of the combinatorial
    - name: combinatorial_geometry
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Function expression encoding a combinatorial geometry
    - name: constant_expressions
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of values for the constants in constant_names (can be an FParser expression)
    - name: constant_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of constants used in the parsed function (use this for kB etc.)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: excluded_subdomain_ids
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        A set of subdomain ids that will not changed even if they are inside/outside the combinatorial geometry
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: type
      required: No
      default: !!str ParsedSubdomainMeshModifier
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/RenameBlock
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: new_block_id
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        Elements with the old block number (or name) will be given this block number.  If the old blocks are named, their names will be passed onto the newly numbered blocks.
    - name: new_block_name
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        Elements with the old block number (or name) will be given this block name.  No change of block ID is performed, unless multiple old blocks are given the same name, in which case they are all given the first old block number.
    - name: old_block_id
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned short, std::allocator<unsigned short> >
      group_name: 
      description: |
        Elements with this block number will be given the new_block_number or new_block_name.  You must supply either old_block_id or old_block_name.  You may supply a vector of old_block_id, in which case the new_block information must also be a vector.
    - name: old_block_name
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        Elements with this block name will be given the new_block_number or new_block_name.  You must supply either old_block_id or old_block_name.  You may supply a vector of old_block_name, in which case the new_block information must also be a vector.
    - name: type
      required: No
      default: !!str RenameBlock
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/SideSetsAroundSubdomain
    description: |
      
    parameters:
    - name: block
      required: Yes
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The blocks around which to create sidesets
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: fixed_normal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This Boolean determines whether we fix our normal or allow it to vary to "paint" around curves
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs to create on the supplied subdomain
    - name: normal
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        If supplied, only faces with normal equal to this, up to normal_tol, will be added to the sidesets specified
    - name: normal_tol
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        If normal is supplied then faces are only added if face_normal.normal_hat >= 1 - normal_tol, where normal_hat = normal/|normal|
    - name: type
      required: No
      default: !!str SideSetsAroundSubdomain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variance
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The variance [0.0 - 1.0] allowed when comparing normals
    subblocks:
  - name: /MeshModifiers/SideSetsBetweenSubdomains
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: master_block
      required: Yes
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The master set of blocks for which to draw a sideset between
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the boundary to create
    - name: paired_block
      required: Yes
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The paired set of blocks for which to draw a sideset between
    - name: type
      required: No
      default: !!str SideSetsBetweenSubdomains
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/SideSetsFromNormals
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: fixed_normal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This Boolean determines whether we fix our normal or allow it to vary to "paint" around curves
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the boundary to create
    - name: normals
      required: Yes
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        A list of normals for which to start painting sidesets
    - name: type
      required: No
      default: !!str SideSetsFromNormals
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variance
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The variance [0.0 - 1.0] allowed when comparing normals
    subblocks:
  - name: /MeshModifiers/SideSetsFromPoints
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: fixed_normal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This Boolean determines whether we fix our normal or allow it to vary to "paint" around curves
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: new_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The name of the boundary to create
    - name: points
      required: Yes
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        A list of points from which to start painting sidesets
    - name: type
      required: No
      default: !!str SideSetsFromPoints
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: variance
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The variance [0.0 - 1.0] allowed when comparing normals
    subblocks:
  - name: /MeshModifiers/SmoothMesh
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: iterations
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of smoothing iterations to do.
    - name: type
      required: No
      default: !!str SmoothMesh
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/SubdomainBoundingBox
    description: |
      
    parameters:
    - name: block_id
      required: Yes
      default: !!str 
      cpp_type: unsigned short
      group_name: 
      description: |
        Subdomain id to set for inside/outside the bounding box
    - name: block_name
      required: No
      default: !!str 
      cpp_type: SubdomainName
      group_name: 
      description: |
        Subdomain name to set for inside/outside the bounding box (optional)
    - name: bottom_left
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: location
      required: No
      default: !!str INSIDE
      cpp_type: MooseEnum
      group_name: 
      options: INSIDE OUTSIDE
      description: |
        Control of where the subdomain id is to be set
    - name: top_right
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The bottom left point (in x,y,z with spaces in-between).
    - name: type
      required: No
      default: !!str SubdomainBoundingBox
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /MeshModifiers/Transform
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depends_on
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The MeshModifiers that this modifier relies upon (i.e. must execute before this one)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: force_prepare
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Normally all MeshModifiers run before the mesh is prepared for use. This flag can be set on an individual modifier to force preperation between modifiers where they might be needed.
    - name: transform
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: TRANSLATE ROTATE SCALE
      description: |
        The type of transformation to perform (TRANSLATE, ROTATE, SCALE)
    - name: type
      required: No
      default: !!str Transform
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: vector_value
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The value to use for the transformation. When using TRANSLATE or SCALE, the xyz coordinates are applied in each direction respectively. When using ROTATE, the values are interpreted as the Euler angles phi, theta and psi given in degrees.
    subblocks:
- name: /Modules
  description: |
    
  parameters:
  subblocks:
  - name: /Modules/PhaseField
    description: |
      
    parameters:
    subblocks:
    - name: /Modules/PhaseField/Conserved
      description: |
        
      parameters:
      subblocks:
      - name: /Modules/PhaseField/Conserved/*
        description: |
          
        parameters:
        - name: args
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName, std::allocator<VariableName> >
          group_name: 
          description: |
            Vector of variable arguments this kernel depends on
        - name: family
          required: No
          default: !!str LAGRANGE
          cpp_type: MooseEnum
          group_name: 
          options: LAGRANGE MONOMIAL HERMITE SCALAR HIERARCHIC CLOUGH XYZ SZABAB BERNSTEIN L2_LAGRANGE L2_HIERARCHIC NEDELEC_ONE LAGRANGE_VEC
          description: |
            Specifies the family of FE shape functions to use for this variable
        - name: free_energy
          required: Yes
          default: !!str 
          cpp_type: MaterialPropertyName
          group_name: 
          description: |
            Base name of the free energy function F defined in a free energy material
        - name: implicit
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Whether kernels are implicit or not
        - name: inactive
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 
          description: |
            If specified blocks matching these identifiers will be skipped.
        - name: kappa
          required: Yes
          default: !!str 
          cpp_type: MaterialPropertyName
          group_name: 
          description: |
            The kappa used with the kernel
        - name: mobility
          required: Yes
          default: !!str 
          cpp_type: MaterialPropertyName
          group_name: 
          description: |
            The mobility used with the kernel
        - name: order
          required: No
          default: !!str FIRST
          cpp_type: MooseEnum
          group_name: 
          options: CONSTANT FIRST SECOND THIRD FOURTH
          description: |
            Specifies the order of the FE shape function to use for this variable
        - name: scaling
          required: No
          default: !!str 1
          cpp_type: double
          group_name: 'Advanced'
          description: |
            Specifies a scaling factor to apply to this variable
        - name: solve_type
          required: Yes
          default: !!str 
          cpp_type: MooseEnum
          group_name: 
          options: DIRECT REVERSE_SPLIT FORWARD_SPLIT
          description: |
            Split or direct solve?
        - name: use_displaced_mesh
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Whether to use displaced mesh in the kernels
        subblocks:
    - name: /Modules/PhaseField/DisplacementGradients
      description: |
        
      parameters:
      - name: displacement_gradients
        required: Yes
        default: !!str 
        cpp_type: std::vector<VariableName, std::allocator<VariableName> >
        group_name: 
        description: |
          Vector of displacement gradient variables
      - name: displacements
        required: Yes
        default: !!str 
        cpp_type: std::vector<VariableName, std::allocator<VariableName> >
        group_name: 
        description: |
          Vector of displacement variables
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: scaling
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 
        description: |
          Specifies a scaling factor to apply to the displacement gradient variables
      subblocks:
    - name: /Modules/PhaseField/EulerAngles2RGB
      description: |
        
      parameters:
      - name: auxvariable_name_base
        required: No
        default: !!str RGB
        cpp_type: std::string
        group_name: 
        description: |
          Base name of the auxvariables
      - name: crystal_structure
        required: Yes
        default: !!str 
        cpp_type: MooseEnum
        group_name: 
        options: triclinic monoclinic orthorhombic trigonal tetragonal cubic hexagonal
        description: |
          Crystal structure of the material
      - name: euler_angle_provider
        required: Yes
        default: !!str 
        cpp_type: UserObjectName
        group_name: 
        description: |
          Name of Euler angle provider user object
      - name: grain_tracker
        required: Yes
        default: !!str 
        cpp_type: UserObjectName
        group_name: 
        description: |
          The GrainTracker UserObject to get values from.
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: no_grain_color
        required: No
        default: !!str 0 0 0
        cpp_type: libMesh::Point
        group_name: 
        description: |
          RGB value of color used to represent area with no grains, defaults to black
      - name: sd
        required: No
        default: !!str 001
        cpp_type: MooseEnum
        group_name: 
        options: 100 010 001
        description: |
          Reference sample direction
      subblocks:
    - name: /Modules/PhaseField/GrainGrowth
      description: |
        
      parameters:
      - name: args
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName>
        group_name: 
        description: |
          Vector of nonlinear variable arguments that L depends on
      - name: c
        required: No
        default: !!str 
        cpp_type: VariableName
        group_name: 'Multiphysics'
        description: |
          Name of coupled concentration variable
      - name: en_ratio
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 'Multiphysics'
        description: |
          Ratio of surface to GB energy
      - name: family
        required: No
        default: !!str LAGRANGE
        cpp_type: MooseEnum
        group_name: 
        options: LAGRANGE MONOMIAL HERMITE SCALAR HIERARCHIC CLOUGH XYZ SZABAB BERNSTEIN L2_LAGRANGE L2_HIERARCHIC NEDELEC_ONE LAGRANGE_VEC
        description: |
          Specifies the family of FE shape function to use for the order parameters
      - name: implicit
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether kernels are implicit or not
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: kappa
        required: No
        default: !!str kappa_op
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          The kappa used with the kernels
      - name: mobility
        required: No
        default: !!str L
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          The isotropic mobility used with the kernels
      - name: ndef
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 'Multiphysics'
        description: |
          Specifies the number of deformed grains to create
      - name: op_num
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          specifies the number of order parameters to create
      - name: order
        required: No
        default: !!str FIRST
        cpp_type: MooseEnum
        group_name: 
        options: CONSTANT FIRST SECOND THIRD FOURTH
        description: |
          Specifies the order of the FE shape function to use for the order parameters
      - name: scaling
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 'Advanced'
        description: |
          Specifies a scaling factor to apply to the order parameters
      - name: use_displaced_mesh
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Whether to use displaced mesh in the kernels
      - name: var_name_base
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          specifies the base name of the variables
      - name: variable_mobility
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          The mobility is a function of any MOOSE variable (if this is set to false, L must be constant over the entire domain!)
      subblocks:
    - name: /Modules/PhaseField/GrandPotential
      description: |
        
      parameters:
      - name: additional_ops
        required: No
        default: !!str 
        cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
        group_name: 
        description: |
          List of any additional order parameters which are not grains
      - name: anisotropic
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Set to true if the diffusivity is a tensor
      - name: chemical_potentials
        required: Yes
        default: !!str 
        cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
        group_name: 
        description: |
          List of chemical potential variables
      - name: free_energies_gr
        required: Yes
        default: !!str 
        cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
        group_name: 
        description: |
          List of free energies for each phase. Place in same order as switching_function_names.
      - name: free_energies_op
        required: No
        default: !!str 
        cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
        group_name: 
        description: |
          List of free energies used by additional order parameters. Places in same order as switching_function_names.
      - name: free_energies_w
        required: Yes
        default: !!str 
        cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
        group_name: 
        description: |
          List of functions for each phase. Length should be length of chemical_potentials * length of switching_function_names.
      - name: gamma_gr
        required: No
        default: !!str gamma
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          Name of the gamma used with grains
      - name: gamma_grxop
        required: No
        default: !!str gamma
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          Name of the gamma used when grains interact with other order parameters
      - name: gamma_op
        required: No
        default: !!str gamma
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          Name of the gamma used with additional order parameters
      - name: implicit
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Whether kernels are implicit or not
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: kappa_gr
        required: No
        default: !!str kappa
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          The kappa used with the grains
      - name: kappa_op
        required: No
        default: !!str kappa
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          The kappa used with additional_ops
      - name: mobilities
        required: Yes
        default: !!str 
        cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
        group_name: 
        description: |
          Vector of mobilities that must match chemical_potentials
      - name: mobility_name_gr
        required: No
        default: !!str L
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          Name of mobility to be used with grains
      - name: mobility_name_op
        required: No
        default: !!str L
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          Name of mobility to be used with additional_ops
      - name: op_num
        required: Yes
        default: !!str 
        cpp_type: unsigned int
        group_name: 
        description: |
          specifies the number of grains to create
      - name: susceptibilities
        required: Yes
        default: !!str 
        cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
        group_name: 
        description: |
          List of susceptibilities that correspond to chemical_potentials
      - name: switching_function_names
        required: Yes
        default: !!str 
        cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
        group_name: 
        description: |
          Switching function materials that provide switching function for free_energies_*.
      - name: use_displaced_mesh
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Whether to use displaced mesh in the kernels
      - name: var_name_base
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          specifies the base name of the grain variables
      subblocks:
    - name: /Modules/PhaseField/MortarPeriodicity
      description: |
        
      parameters:
      subblocks:
      - name: /Modules/PhaseField/MortarPeriodicity/*
        description: |
          
        parameters:
        - name: inactive
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 
          description: |
            If specified blocks matching these identifiers will be skipped.
        - name: periodicity
          required: No
          default: !!str gradient
          cpp_type: MooseEnum
          group_name: 
          options: gradient value
          description: |
            Periodicity type
        - name: variable
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName, std::allocator<VariableName> >
          group_name: 
          description: |
            Periodic variables
        subblocks:
    - name: /Modules/PhaseField/Nonconserved
      description: |
        
      parameters:
      subblocks:
      - name: /Modules/PhaseField/Nonconserved/*
        description: |
          
        parameters:
        - name: args
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName, std::allocator<VariableName> >
          group_name: 
          description: |
            Vector of variable arguments this kernel depends on
        - name: family
          required: No
          default: !!str LAGRANGE
          cpp_type: MooseEnum
          group_name: 
          options: LAGRANGE MONOMIAL HERMITE SCALAR HIERARCHIC CLOUGH XYZ SZABAB BERNSTEIN L2_LAGRANGE L2_HIERARCHIC NEDELEC_ONE LAGRANGE_VEC
          description: |
            Specifies the family of FE shape functions to use for this variable
        - name: free_energy
          required: Yes
          default: !!str 
          cpp_type: MaterialPropertyName
          group_name: 
          description: |
            Base name of the free energy function F defined in a free energy material
        - name: implicit
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Whether kernels are implicit or not
        - name: inactive
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 
          description: |
            If specified blocks matching these identifiers will be skipped.
        - name: kappa
          required: No
          default: !!str kappa_op
          cpp_type: MaterialPropertyName
          group_name: 
          description: |
            The kappa used with the kernel
        - name: mobility
          required: No
          default: !!str L
          cpp_type: MaterialPropertyName
          group_name: 
          description: |
            The mobility used with the kernel
        - name: order
          required: No
          default: !!str FIRST
          cpp_type: MooseEnum
          group_name: 
          options: CONSTANT FIRST SECOND THIRD FOURTH
          description: |
            Specifies the order of the FE shape function to use for this variable
        - name: scaling
          required: No
          default: !!str 1
          cpp_type: double
          group_name: 'Advanced'
          description: |
            Specifies a scaling factor to apply to this variable
        - name: use_displaced_mesh
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 'Advanced'
          description: |
            Whether to use displaced mesh in the kernels
        - name: variable_mobility
          required: No
          default: !!str 1
          cpp_type: bool
          group_name: 
          description: |
            The mobility is a function of any MOOSE variable (if this is set to false, L must be constant over the entire domain!)
        subblocks:
  - name: /Modules/TensorMechanics
    description: |
      
    parameters:
    subblocks:
    - name: /Modules/TensorMechanics/GeneralizedPlaneStrain
      description: |
        
      parameters:
      subblocks:
      - name: /Modules/TensorMechanics/GeneralizedPlaneStrain/*
        description: |
          
        parameters:
        - name: base_name
          required: No
          default: !!str 
          cpp_type: std::string
          group_name: 
          description: |
            Material property base name
        - name: block
          required: No
          default: !!str 
          cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
          group_name: 
          description: |
            The list of ids of the blocks (subdomain) that the GeneralizedPlaneStrain kernels will be applied to
        - name: displacements
          required: Yes
          default: !!str 
          cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
          group_name: 
          description: |
            The displacement variables
        - name: factor
          required: No
          default: !!str 1
          cpp_type: double
          group_name: 
          description: |
            Scale factor applied to prescribed pressure
        - name: inactive
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 
          description: |
            If specified blocks matching these identifiers will be skipped.
        - name: out_of_plane_direction
          required: No
          default: !!str z
          cpp_type: MooseEnum
          group_name: 
          options: x y z
          description: |
            The direction of the out-of-plane strain.
        - name: out_of_plane_pressure
          required: No
          default: !!str 0
          cpp_type: FunctionName
          group_name: 
          description: |
            Function used to prescribe pressure in the out-of-plane direction (y for 1D Axisymmetric or z for 2D Cartesian problems)
        - name: scalar_out_of_plane_strain
          required: Yes
          default: !!str 
          cpp_type: NonlinearVariableName
          group_name: 
          description: |
            Scalar variable for the out-of-plane strain (in y direction for 1D Axisymmetric or in z direction for 2D Cartesian problems)
        - name: temperature
          required: No
          default: !!str 
          cpp_type: NonlinearVariableName
          group_name: 
          description: |
            The temperature variable
        - name: use_displaced_mesh
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Whether to use displaced mesh
        subblocks:
    - name: /Modules/TensorMechanics/GlobalStrain
      description: |
        
      parameters:
      subblocks:
      - name: /Modules/TensorMechanics/GlobalStrain/*
        description: |
          
        parameters:
        - name: applied_stress_tensor
          required: No
          default: !!str 
          cpp_type: std::vector<double, std::allocator<double> >
          group_name: 
          description: |
            Vector of values defining the constant applied stress to add, in order 11, 22, 33, 23, 13, 12
        - name: auxiliary_displacements
          required: No
          default: !!str 
          cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
          group_name: 
          description: |
            The auxliary displacement variables to be calculated from scalar variables
        - name: base_name
          required: No
          default: !!str 
          cpp_type: std::string
          group_name: 
          description: |
            Material property base name
        - name: block
          required: No
          default: !!str 
          cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
          group_name: 
          description: |
            The block id where this variable lives
        - name: displacements
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName, std::allocator<VariableName> >
          group_name: 
          description: |
            The displacement variables
        - name: inactive
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 
          description: |
            If specified blocks matching these identifiers will be skipped.
        - name: output_global_displacement
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Option to output global displacement only
        - name: scalar_global_strain
          required: Yes
          default: !!str 
          cpp_type: NonlinearVariableName
          group_name: 
          description: |
            Scalar variable for global strain
        subblocks:
    - name: /Modules/TensorMechanics/LineElementMaster
      description: |
        
      parameters:
      - name: Ay
        required: No
        default: !!str 0
        cpp_type: std::vector<VariableName>
        group_name: 
        description: |
          First moment of area of the beam about y axis. Can be supplied as either a number or a variable name.
      - name: Az
        required: No
        default: !!str 0
        cpp_type: std::vector<VariableName>
        group_name: 
        description: |
          First moment of area of the beam about z asix. Can be supplied as either a number or a variable name.
      - name: Ix
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName>
        group_name: 
        description: |
          Second moment of area of the beam about x axis. Can be supplied as either a number or a variable name.
      - name: Iy
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName>
        group_name: 
        description: |
          Second moment of area of the beam about y axis. Can be supplied as either a number or a variable name.
      - name: Iz
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName>
        group_name: 
        description: |
          Second moment of area of the beam about z axis. Can be supplied as either a number or a variable name.
      - name: accelerations
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName, std::allocator<VariableName> >
        group_name: 
        description: |
          Translational acceleration variables
      - name: add_dynamic_variables
        required: No
        default: !!str 
        cpp_type: bool
        group_name: 
        description: |
          Adds translational and rotational velocity and acceleration aux variables and sets up the corresponding AuxKernels for calculating these variables using Newmark time integration. When dynamic_consistent_inertia, dynamic_nodal_rotational_inertia or dynamic_nodal_translational_inertia are set to true, these variables are automatically set up.
      - name: add_variables
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Add the displacement variables for truss elements and both diplacement and rotation variables for beam elements.
      - name: alpha
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          alpha parameter for mass dependent numerical damping induced by HHT time integration scheme
      - name: area
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName>
        group_name: 
        description: |
          Cross-section area of the beam. Can be supplied as either a number or a variable name.
      - name: beta
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          beta parameter for Newmark Time integration
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 'Advanced'
        description: |
          The list of ids of the blocks (subdomain) that the stress divergence, inertia kernels and materials will be applied to
      - name: boundary
        required: No
        default: !!str 
        cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
        group_name: 
        description: |
          The list of boundary IDs from the mesh where the nodal mass/inertia will be applied.
      - name: density
        required: No
        default: !!str 
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          Name of Material Property or a constant real number defining the density of the beam.
      - name: diag_save_in
        required: No
        default: !!str 
        cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
        group_name: 
        description: |
          The displacement and rotational diagonal preconditioner terms
      - name: displacements
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName, std::allocator<VariableName> >
        group_name: 
        description: |
          The nonlinear displacement variables for the problem
      - name: dynamic_consistent_inertia
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          If set to true, consistent mass and inertia matrices are used for the inertial force/torque calculations.
      - name: dynamic_nodal_rotational_inertia
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          If set to true, nodal inertia matrix is used for the inertial torque calculation.
      - name: dynamic_nodal_translational_inertia
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          If set to true, nodal mass matrix is used for the inertial force calculation.
      - name: eigenstrain_names
        required: No
        default: !!str 
        cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
        group_name: 
        description: |
          List of beam eigenstrains to be applied in this strain calculation.
      - name: eta
        required: No
        default: !!str 0
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          Name of material property or a constant real number defining the eta parameter for mass proportional Rayleigh damping.
      - name: gamma
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          gamma parameter for Newmark Time integration
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: nodal_Ixx
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Nodal moment of inertia in the x direction.
      - name: nodal_Ixy
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Nodal moment of inertia in the xy direction.
      - name: nodal_Ixz
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Nodal moment of inertia in the xz direction.
      - name: nodal_Iyy
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Nodal moment of inertia in the y direction.
      - name: nodal_Iyz
        required: No
        default: !!str 0
        cpp_type: double
        group_name: 
        description: |
          Nodal moment of inertia in the yz direction.
      - name: nodal_Izz
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Nodal moment of inertia in the z direction.
      - name: nodal_mass
        required: No
        default: !!str 
        cpp_type: double
        group_name: 
        description: |
          Mass associated with the node
      - name: nodal_mass_file
        required: No
        default: !!str 
        cpp_type: FileName
        group_name: 
        description: |
          The file containing the nodal positions and the corresponding nodal masses.
      - name: nodal_x_orientation
        required: No
        default: !!str 
        cpp_type: libMesh::VectorValue<double>
        group_name: 
        description: |
          Unit vector along the x direction if different from global x direction.
      - name: nodal_y_orientation
        required: No
        default: !!str 
        cpp_type: libMesh::VectorValue<double>
        group_name: 
        description: |
          Unit vector along the y direction if different from global y direction.
      - name: rotation_type
        required: No
        default: !!str SMALL
        cpp_type: MooseEnum
        group_name: 
        options: SMALL FINITE
        description: |
          Rotation formulation
      - name: rotational_accelerations
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName, std::allocator<VariableName> >
        group_name: 
        description: |
          Rotational acceleration variables
      - name: rotational_velocities
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName, std::allocator<VariableName> >
        group_name: 
        description: |
          Rotational velocity variables
      - name: rotations
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName, std::allocator<VariableName> >
        group_name: 
        description: |
          The rotations appropriate for the simulation geometry and coordinate system
      - name: save_in
        required: No
        default: !!str 
        cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
        group_name: 
        description: |
          The displacement and rotational residuals
      - name: strain_type
        required: No
        default: !!str SMALL
        cpp_type: MooseEnum
        group_name: 
        options: SMALL FINITE
        description: |
          Strain formulation
      - name: truss
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Set to true if the line elements are truss elements instead of the default beam elements.
      - name: use_displaced_mesh
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Whether to use displaced mesh in the kernels
      - name: velocities
        required: No
        default: !!str 
        cpp_type: std::vector<VariableName, std::allocator<VariableName> >
        group_name: 
        description: |
          Translational velocity variables
      - name: y_orientation
        required: No
        default: !!str 
        cpp_type: libMesh::VectorValue<double>
        group_name: 
        description: |
          Orientation of the y direction along which Iyy is provided. This should be perpendicular to the axis of the beam.
      - name: zeta
        required: No
        default: !!str 0
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          Name of material property or a constant real number defining the zeta parameter for stiffness proportional Rayleigh damping.
      subblocks:
      - name: /Modules/TensorMechanics/LineElementMaster/*
        description: |
          
        parameters:
        - name: Ay
          required: No
          default: !!str 0
          cpp_type: std::vector<VariableName>
          group_name: 
          description: |
            First moment of area of the beam about y axis. Can be supplied as either a number or a variable name.
        - name: Az
          required: No
          default: !!str 0
          cpp_type: std::vector<VariableName>
          group_name: 
          description: |
            First moment of area of the beam about z asix. Can be supplied as either a number or a variable name.
        - name: Ix
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName>
          group_name: 
          description: |
            Second moment of area of the beam about x axis. Can be supplied as either a number or a variable name.
        - name: Iy
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName>
          group_name: 
          description: |
            Second moment of area of the beam about y axis. Can be supplied as either a number or a variable name.
        - name: Iz
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName>
          group_name: 
          description: |
            Second moment of area of the beam about z axis. Can be supplied as either a number or a variable name.
        - name: accelerations
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName, std::allocator<VariableName> >
          group_name: 
          description: |
            Translational acceleration variables
        - name: add_dynamic_variables
          required: No
          default: !!str 
          cpp_type: bool
          group_name: 
          description: |
            Adds translational and rotational velocity and acceleration aux variables and sets up the corresponding AuxKernels for calculating these variables using Newmark time integration. When dynamic_consistent_inertia, dynamic_nodal_rotational_inertia or dynamic_nodal_translational_inertia are set to true, these variables are automatically set up.
        - name: add_variables
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Add the displacement variables for truss elements and both diplacement and rotation variables for beam elements.
        - name: alpha
          required: No
          default: !!str 0
          cpp_type: double
          group_name: 
          description: |
            alpha parameter for mass dependent numerical damping induced by HHT time integration scheme
        - name: area
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName>
          group_name: 
          description: |
            Cross-section area of the beam. Can be supplied as either a number or a variable name.
        - name: beta
          required: No
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            beta parameter for Newmark Time integration
        - name: block
          required: No
          default: !!str 
          cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
          group_name: 'Advanced'
          description: |
            The list of ids of the blocks (subdomain) that the stress divergence, inertia kernels and materials will be applied to
        - name: boundary
          required: No
          default: !!str 
          cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
          group_name: 
          description: |
            The list of boundary IDs from the mesh where the nodal mass/inertia will be applied.
        - name: density
          required: No
          default: !!str 
          cpp_type: MaterialPropertyName
          group_name: 
          description: |
            Name of Material Property or a constant real number defining the density of the beam.
        - name: diag_save_in
          required: No
          default: !!str 
          cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
          group_name: 
          description: |
            The displacement and rotational diagonal preconditioner terms
        - name: displacements
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName, std::allocator<VariableName> >
          group_name: 
          description: |
            The nonlinear displacement variables for the problem
        - name: dynamic_consistent_inertia
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            If set to true, consistent mass and inertia matrices are used for the inertial force/torque calculations.
        - name: dynamic_nodal_rotational_inertia
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            If set to true, nodal inertia matrix is used for the inertial torque calculation.
        - name: dynamic_nodal_translational_inertia
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            If set to true, nodal mass matrix is used for the inertial force calculation.
        - name: eigenstrain_names
          required: No
          default: !!str 
          cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
          group_name: 
          description: |
            List of beam eigenstrains to be applied in this strain calculation.
        - name: eta
          required: No
          default: !!str 0
          cpp_type: MaterialPropertyName
          group_name: 
          description: |
            Name of material property or a constant real number defining the eta parameter for mass proportional Rayleigh damping.
        - name: gamma
          required: No
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            gamma parameter for Newmark Time integration
        - name: inactive
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 
          description: |
            If specified blocks matching these identifiers will be skipped.
        - name: nodal_Ixx
          required: No
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Nodal moment of inertia in the x direction.
        - name: nodal_Ixy
          required: No
          default: !!str 0
          cpp_type: double
          group_name: 
          description: |
            Nodal moment of inertia in the xy direction.
        - name: nodal_Ixz
          required: No
          default: !!str 0
          cpp_type: double
          group_name: 
          description: |
            Nodal moment of inertia in the xz direction.
        - name: nodal_Iyy
          required: No
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Nodal moment of inertia in the y direction.
        - name: nodal_Iyz
          required: No
          default: !!str 0
          cpp_type: double
          group_name: 
          description: |
            Nodal moment of inertia in the yz direction.
        - name: nodal_Izz
          required: No
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Nodal moment of inertia in the z direction.
        - name: nodal_mass
          required: No
          default: !!str 
          cpp_type: double
          group_name: 
          description: |
            Mass associated with the node
        - name: nodal_mass_file
          required: No
          default: !!str 
          cpp_type: FileName
          group_name: 
          description: |
            The file containing the nodal positions and the corresponding nodal masses.
        - name: nodal_x_orientation
          required: No
          default: !!str 
          cpp_type: libMesh::VectorValue<double>
          group_name: 
          description: |
            Unit vector along the x direction if different from global x direction.
        - name: nodal_y_orientation
          required: No
          default: !!str 
          cpp_type: libMesh::VectorValue<double>
          group_name: 
          description: |
            Unit vector along the y direction if different from global y direction.
        - name: rotation_type
          required: No
          default: !!str SMALL
          cpp_type: MooseEnum
          group_name: 
          options: SMALL FINITE
          description: |
            Rotation formulation
        - name: rotational_accelerations
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName, std::allocator<VariableName> >
          group_name: 
          description: |
            Rotational acceleration variables
        - name: rotational_velocities
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName, std::allocator<VariableName> >
          group_name: 
          description: |
            Rotational velocity variables
        - name: rotations
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName, std::allocator<VariableName> >
          group_name: 
          description: |
            The rotations appropriate for the simulation geometry and coordinate system
        - name: save_in
          required: No
          default: !!str 
          cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
          group_name: 
          description: |
            The displacement and rotational residuals
        - name: strain_type
          required: No
          default: !!str SMALL
          cpp_type: MooseEnum
          group_name: 
          options: SMALL FINITE
          description: |
            Strain formulation
        - name: truss
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Set to true if the line elements are truss elements instead of the default beam elements.
        - name: use_displaced_mesh
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Whether to use displaced mesh in the kernels
        - name: velocities
          required: No
          default: !!str 
          cpp_type: std::vector<VariableName, std::allocator<VariableName> >
          group_name: 
          description: |
            Translational velocity variables
        - name: y_orientation
          required: No
          default: !!str 
          cpp_type: libMesh::VectorValue<double>
          group_name: 
          description: |
            Orientation of the y direction along which Iyy is provided. This should be perpendicular to the axis of the beam.
        - name: zeta
          required: No
          default: !!str 0
          cpp_type: MaterialPropertyName
          group_name: 
          description: |
            Name of material property or a constant real number defining the zeta parameter for stiffness proportional Rayleigh damping.
        subblocks:
    - name: /Modules/TensorMechanics/Master
      description: |
        
      parameters:
      - name: add_variables
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Add the displacement variables
      - name: base_name
        required: No
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          Material property base name
      - name: decomposition_method
        required: No
        default: !!str TaylorExpansion
        cpp_type: MooseEnum
        group_name: 
        options: TaylorExpansion EigenSolution
        description: |
          Methods to calculate the finite strain and rotation increments
      - name: diag_save_in
        required: No
        default: !!str 
        cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
        group_name: 'Advanced'
        description: |
          The displacement diagonal preconditioner terms
      - name: displacements
        required: Yes
        default: !!str 
        cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
        group_name: 
        description: |
          The nonlinear displacement variables for the problem
      - name: eigenstrain_names
        required: No
        default: !!str 
        cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
        group_name: 
        description: |
          List of eigenstrains to be applied in this strain calculation
      - name: generate_output
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 'Output'
        options: creep_strain_xx creep_strain_xy creep_strain_xz creep_strain_yx creep_strain_yy creep_strain_yz creep_strain_zx creep_strain_zy creep_strain_zz elastic_strain_xx elastic_strain_xy elastic_strain_xz elastic_strain_yx elastic_strain_yy elastic_strain_yz elastic_strain_zx elastic_strain_zy elastic_strain_zz plastic_strain_xx plastic_strain_xy plastic_strain_xz plastic_strain_yx plastic_strain_yy plastic_strain_yz plastic_strain_zx plastic_strain_zy plastic_strain_zz strain_xx strain_xy strain_xz strain_yx strain_yy strain_yz strain_zx strain_zy strain_zz stress_xx stress_xy stress_xz stress_yx stress_yy stress_yz stress_zx stress_zy stress_zz firstinv_stress firstinv_strain hydrostatic_stress max_principal_stress mid_principal_stress min_principal_stress secondinv_stress secondinv_strain thirdinv_stress thirdinv_strain vonmises_stress
        description: |
          Add scalar quantity output for stress and/or strain
      - name: global_strain
        required: No
        default: !!str 
        cpp_type: MaterialPropertyName
        group_name: 
        description: |
          Name of the global strain material to be applied in this strain calculation. The global strain tensor is constant over the whole domain and allows visualization of the deformed shape with the periodic BC
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: incremental
        required: No
        default: !!str 
        cpp_type: bool
        group_name: 
        description: |
          Use incremental or total strain
      - name: out_of_plane_direction
        required: No
        default: !!str z
        cpp_type: MooseEnum
        group_name: 'Out-of-plane stress/strain'
        options: x y z
        description: |
          The direction of the out-of-plane strain.
      - name: out_of_plane_pressure
        required: No
        default: !!str 0
        cpp_type: FunctionName
        group_name: 'Out-of-plane stress/strain'
        description: |
          Function used to prescribe pressure in the out-of-plane direction (y for 1D Axisymmetric or z for 2D Cartesian problems)
      - name: planar_formulation
        required: No
        default: !!str NONE
        cpp_type: MooseEnum
        group_name: 'Out-of-plane stress/strain'
        options: NONE PLANE_STRAIN GENERALIZED_PLANE_STRAIN
        description: |
          Out-of-plane stress/strain formulation
      - name: pressure_factor
        required: No
        default: !!str 1
        cpp_type: double
        group_name: 'Out-of-plane stress/strain'
        description: |
          Scale factor applied to prescribed pressure
      - name: save_in
        required: No
        default: !!str 
        cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
        group_name: 'Advanced'
        description: |
          The displacement residuals
      - name: scalar_out_of_plane_strain
        required: No
        default: !!str 
        cpp_type: NonlinearVariableName
        group_name: 'Out-of-plane stress/strain'
        description: |
          Scalar variable for the out-of-plane strain (in y direction for 1D Axisymmetric or in z direction for 2D Cartesian problems)
      - name: strain
        required: No
        default: !!str SMALL
        cpp_type: MooseEnum
        group_name: 
        options: SMALL FINITE
        description: |
          Strain formulation
      - name: temperature
        required: No
        default: !!str 
        cpp_type: NonlinearVariableName
        group_name: 
        description: |
          The temperature
      - name: use_displaced_mesh
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Whether to use displaced mesh in the kernels
      - name: use_finite_deform_jacobian
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Jacobian for corrotational finite strain
      - name: volumetric_locking_correction
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Flag to correct volumetric locking
      subblocks:
      - name: /Modules/TensorMechanics/Master/*
        description: |
          
        parameters:
        - name: add_variables
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Add the displacement variables
        - name: additional_generate_output
          required: No
          default: !!str 
          cpp_type: MultiMooseEnum
          group_name: 'Output'
          options: creep_strain_xx creep_strain_xy creep_strain_xz creep_strain_yx creep_strain_yy creep_strain_yz creep_strain_zx creep_strain_zy creep_strain_zz elastic_strain_xx elastic_strain_xy elastic_strain_xz elastic_strain_yx elastic_strain_yy elastic_strain_yz elastic_strain_zx elastic_strain_zy elastic_strain_zz plastic_strain_xx plastic_strain_xy plastic_strain_xz plastic_strain_yx plastic_strain_yy plastic_strain_yz plastic_strain_zx plastic_strain_zy plastic_strain_zz strain_xx strain_xy strain_xz strain_yx strain_yy strain_yz strain_zx strain_zy strain_zz stress_xx stress_xy stress_xz stress_yx stress_yy stress_yz stress_zx stress_zy stress_zz firstinv_stress firstinv_strain hydrostatic_stress max_principal_stress mid_principal_stress min_principal_stress secondinv_stress secondinv_strain thirdinv_stress thirdinv_strain vonmises_stress
          description: |
            Add scalar quantity output for stress and/or strain (will be appended to the list in `generate_output`)
        - name: base_name
          required: No
          default: !!str 
          cpp_type: std::string
          group_name: 
          description: |
            Material property base name
        - name: block
          required: No
          default: !!str 
          cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
          group_name: 'Advanced'
          description: |
            The list of ids of the blocks (subdomain) that the stress divergence kernels will be applied to
        - name: decomposition_method
          required: No
          default: !!str TaylorExpansion
          cpp_type: MooseEnum
          group_name: 
          options: TaylorExpansion EigenSolution
          description: |
            Methods to calculate the finite strain and rotation increments
        - name: diag_save_in
          required: No
          default: !!str 
          cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
          group_name: 'Advanced'
          description: |
            The displacement diagonal preconditioner terms
        - name: displacements
          required: Yes
          default: !!str 
          cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
          group_name: 
          description: |
            The nonlinear displacement variables for the problem
        - name: eigenstrain_names
          required: No
          default: !!str 
          cpp_type: std::vector<MaterialPropertyName, std::allocator<MaterialPropertyName> >
          group_name: 
          description: |
            List of eigenstrains to be applied in this strain calculation
        - name: generate_output
          required: No
          default: !!str 
          cpp_type: MultiMooseEnum
          group_name: 'Output'
          options: creep_strain_xx creep_strain_xy creep_strain_xz creep_strain_yx creep_strain_yy creep_strain_yz creep_strain_zx creep_strain_zy creep_strain_zz elastic_strain_xx elastic_strain_xy elastic_strain_xz elastic_strain_yx elastic_strain_yy elastic_strain_yz elastic_strain_zx elastic_strain_zy elastic_strain_zz plastic_strain_xx plastic_strain_xy plastic_strain_xz plastic_strain_yx plastic_strain_yy plastic_strain_yz plastic_strain_zx plastic_strain_zy plastic_strain_zz strain_xx strain_xy strain_xz strain_yx strain_yy strain_yz strain_zx strain_zy strain_zz stress_xx stress_xy stress_xz stress_yx stress_yy stress_yz stress_zx stress_zy stress_zz firstinv_stress firstinv_strain hydrostatic_stress max_principal_stress mid_principal_stress min_principal_stress secondinv_stress secondinv_strain thirdinv_stress thirdinv_strain vonmises_stress
          description: |
            Add scalar quantity output for stress and/or strain
        - name: global_strain
          required: No
          default: !!str 
          cpp_type: MaterialPropertyName
          group_name: 
          description: |
            Name of the global strain material to be applied in this strain calculation. The global strain tensor is constant over the whole domain and allows visualization of the deformed shape with the periodic BC
        - name: inactive
          required: No
          default: !!str 
          cpp_type: std::vector<std::string, std::allocator<std::string> >
          group_name: 
          description: |
            If specified blocks matching these identifiers will be skipped.
        - name: incremental
          required: No
          default: !!str 
          cpp_type: bool
          group_name: 
          description: |
            Use incremental or total strain
        - name: out_of_plane_direction
          required: No
          default: !!str z
          cpp_type: MooseEnum
          group_name: 'Out-of-plane stress/strain'
          options: x y z
          description: |
            The direction of the out-of-plane strain.
        - name: out_of_plane_pressure
          required: No
          default: !!str 0
          cpp_type: FunctionName
          group_name: 'Out-of-plane stress/strain'
          description: |
            Function used to prescribe pressure in the out-of-plane direction (y for 1D Axisymmetric or z for 2D Cartesian problems)
        - name: planar_formulation
          required: No
          default: !!str NONE
          cpp_type: MooseEnum
          group_name: 'Out-of-plane stress/strain'
          options: NONE PLANE_STRAIN GENERALIZED_PLANE_STRAIN
          description: |
            Out-of-plane stress/strain formulation
        - name: pressure_factor
          required: No
          default: !!str 1
          cpp_type: double
          group_name: 'Out-of-plane stress/strain'
          description: |
            Scale factor applied to prescribed pressure
        - name: save_in
          required: No
          default: !!str 
          cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
          group_name: 'Advanced'
          description: |
            The displacement residuals
        - name: scalar_out_of_plane_strain
          required: No
          default: !!str 
          cpp_type: NonlinearVariableName
          group_name: 'Out-of-plane stress/strain'
          description: |
            Scalar variable for the out-of-plane strain (in y direction for 1D Axisymmetric or in z direction for 2D Cartesian problems)
        - name: strain
          required: No
          default: !!str SMALL
          cpp_type: MooseEnum
          group_name: 
          options: SMALL FINITE
          description: |
            Strain formulation
        - name: strain_base_name
          required: No
          default: !!str 
          cpp_type: std::string
          group_name: 
          description: |
            The base name used for the strain. If not provided, it will be set equal to base_name
        - name: temperature
          required: No
          default: !!str 
          cpp_type: NonlinearVariableName
          group_name: 
          description: |
            The temperature
        - name: use_displaced_mesh
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Whether to use displaced mesh in the kernels
        - name: use_finite_deform_jacobian
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Jacobian for corrotational finite strain
        - name: volumetric_locking_correction
          required: No
          default: !!str 0
          cpp_type: bool
          group_name: 
          description: |
            Flag to correct volumetric locking
        subblocks:
- name: /MultiApps
  description: |
    
  parameters:
  subblocks:
  - name: /MultiApps/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /MultiApps/AutoPositionsMultiApp
    description: |
      
    parameters:
    - name: app_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: MouseApp MouseTestApp
      description: |
        The type of application to build (applications not registered can be loaded with dynamic libraries. Master application type will be used if not provided.
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bounding_box_inflation
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        Relative amount to 'inflate' the bounding box of this MultiApp.
    - name: bounding_box_padding
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Additional padding added to the dimensions of the bounding box. The values are added to the x, y and z dimension respectively.
    - name: catch_up
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true this will allow failed solves to attempt to 'catch up' using smaller timesteps.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: detect_steady_state
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true then while sub_cycling a steady state check will be done.  In this mode output will only be done once the MultiApp reaches the target time or steady state is reached
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_BEGIN
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: input_files
      required: Yes
      default: !!str 
      cpp_type: std::vector<FileName, std::allocator<FileName> >
      group_name: 
      description: |
        The input file for each App.  If this parameter only contains one input file it will be used for all of the Apps.  When using 'positions_from_file' it is also admissable to provide one input_file per file.
    - name: interpolate_transfers
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Only valid when sub_cycling.  This allows transferred values to be interpolated over the time frame the MultiApp is executing over when sub_cycling
    - name: keep_solution_during_restore
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This is useful when doing Picard with catch_up steps.  It takes the solution from the final catch_up step and re-uses it as the initial guess for the next picard iteration
    - name: library_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The file name of the library (*.la file) that will be dynamically loaded.
    - name: library_path
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Path to search for dynamic libraries (please avoid committing absolute paths in addition to MOOSE_LIBRARY_PATH)
    - name: max_catch_up_steps
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        Maximum number of steps to allow an app to take when trying to catch back up after a failed solve.
    - name: max_failures
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of solve failures tolerated while sub_cycling.
    - name: max_procs_per_app
      required: No
      default: !!str 4294967295
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of processors to give to each App in this MultiApp.  Useful for restricting small solves to just a few procs so they don't get spread out
    - name: move_apps
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Apps, designated by their 'numbers' starting with 0 corresponding to the order of the App positions, to be moved at move_time to move_positions
    - name: move_positions
      required: No
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        The positions corresponding to each move_app.
    - name: move_time
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The time at which Apps designated by move_apps are moved to move_positions.
    - name: output_in_position
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true this will cause the output from the MultiApp to be 'moved' by its position vector
    - name: output_sub_cycles
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true then every sub-cycle will be output.
    - name: print_sub_cycles
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Toggle the display of sub-cycles on the screen.
    - name: reset_apps
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The Apps that will be reset when 'reset_time' is hit.  These are the App 'numbers' starting with 0 corresponding to the order of the App positions.  Resetting an App means that it is destroyed and recreated, possibly modeling the insertion of 'new' material for that app.
    - name: reset_time
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The time at which to reset Apps given by the 'reset_apps' parameter.  Resetting an App means that it is destroyed and recreated, possibly modeling the insertion of 'new' material for that app.
    - name: steady_state_tol
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        The relative difference between the new solution and the old solution that will be considered to be at steady state
    - name: sub_cycling
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to allow this MultiApp to take smaller timesteps than the rest of the simulation.  More than one timestep will be performed for each 'master' timestep
    - name: tolerate_failure
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true this MultiApp won't participate in dt decisions and will always be fast-forwarded to the current time.
    - name: type
      required: No
      default: !!str AutoPositionsMultiApp
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /MultiApps/CentroidMultiApp
    description: |
      
    parameters:
    - name: app_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: MouseApp MouseTestApp
      description: |
        The type of application to build (applications not registered can be loaded with dynamic libraries. Master application type will be used if not provided.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: bounding_box_inflation
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        Relative amount to 'inflate' the bounding box of this MultiApp.
    - name: bounding_box_padding
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Additional padding added to the dimensions of the bounding box. The values are added to the x, y and z dimension respectively.
    - name: catch_up
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true this will allow failed solves to attempt to 'catch up' using smaller timesteps.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: detect_steady_state
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true then while sub_cycling a steady state check will be done.  In this mode output will only be done once the MultiApp reaches the target time or steady state is reached
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_BEGIN
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: input_files
      required: Yes
      default: !!str 
      cpp_type: std::vector<FileName, std::allocator<FileName> >
      group_name: 
      description: |
        The input file for each App.  If this parameter only contains one input file it will be used for all of the Apps.  When using 'positions_from_file' it is also admissable to provide one input_file per file.
    - name: interpolate_transfers
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Only valid when sub_cycling.  This allows transferred values to be interpolated over the time frame the MultiApp is executing over when sub_cycling
    - name: keep_solution_during_restore
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This is useful when doing Picard with catch_up steps.  It takes the solution from the final catch_up step and re-uses it as the initial guess for the next picard iteration
    - name: library_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The file name of the library (*.la file) that will be dynamically loaded.
    - name: library_path
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Path to search for dynamic libraries (please avoid committing absolute paths in addition to MOOSE_LIBRARY_PATH)
    - name: max_catch_up_steps
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        Maximum number of steps to allow an app to take when trying to catch back up after a failed solve.
    - name: max_failures
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of solve failures tolerated while sub_cycling.
    - name: max_procs_per_app
      required: No
      default: !!str 4294967295
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of processors to give to each App in this MultiApp.  Useful for restricting small solves to just a few procs so they don't get spread out
    - name: move_apps
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Apps, designated by their 'numbers' starting with 0 corresponding to the order of the App positions, to be moved at move_time to move_positions
    - name: move_positions
      required: No
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        The positions corresponding to each move_app.
    - name: move_time
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The time at which Apps designated by move_apps are moved to move_positions.
    - name: output_in_position
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true this will cause the output from the MultiApp to be 'moved' by its position vector
    - name: output_sub_cycles
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true then every sub-cycle will be output.
    - name: print_sub_cycles
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Toggle the display of sub-cycles on the screen.
    - name: reset_apps
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The Apps that will be reset when 'reset_time' is hit.  These are the App 'numbers' starting with 0 corresponding to the order of the App positions.  Resetting an App means that it is destroyed and recreated, possibly modeling the insertion of 'new' material for that app.
    - name: reset_time
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The time at which to reset Apps given by the 'reset_apps' parameter.  Resetting an App means that it is destroyed and recreated, possibly modeling the insertion of 'new' material for that app.
    - name: steady_state_tol
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        The relative difference between the new solution and the old solution that will be considered to be at steady state
    - name: sub_cycling
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to allow this MultiApp to take smaller timesteps than the rest of the simulation.  More than one timestep will be performed for each 'master' timestep
    - name: tolerate_failure
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true this MultiApp won't participate in dt decisions and will always be fast-forwarded to the current time.
    - name: type
      required: No
      default: !!str CentroidMultiApp
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /MultiApps/FullSolveMultiApp
    description: |
      
    parameters:
    - name: app_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: MouseApp MouseTestApp
      description: |
        The type of application to build (applications not registered can be loaded with dynamic libraries. Master application type will be used if not provided.
    - name: bounding_box_inflation
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        Relative amount to 'inflate' the bounding box of this MultiApp.
    - name: bounding_box_padding
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Additional padding added to the dimensions of the bounding box. The values are added to the x, y and z dimension respectively.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_BEGIN
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: input_files
      required: Yes
      default: !!str 
      cpp_type: std::vector<FileName, std::allocator<FileName> >
      group_name: 
      description: |
        The input file for each App.  If this parameter only contains one input file it will be used for all of the Apps.  When using 'positions_from_file' it is also admissable to provide one input_file per file.
    - name: library_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The file name of the library (*.la file) that will be dynamically loaded.
    - name: library_path
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Path to search for dynamic libraries (please avoid committing absolute paths in addition to MOOSE_LIBRARY_PATH)
    - name: max_procs_per_app
      required: No
      default: !!str 4294967295
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of processors to give to each App in this MultiApp.  Useful for restricting small solves to just a few procs so they don't get spread out
    - name: move_apps
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Apps, designated by their 'numbers' starting with 0 corresponding to the order of the App positions, to be moved at move_time to move_positions
    - name: move_positions
      required: No
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        The positions corresponding to each move_app.
    - name: move_time
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The time at which Apps designated by move_apps are moved to move_positions.
    - name: output_in_position
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true this will cause the output from the MultiApp to be 'moved' by its position vector
    - name: positions
      required: No
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        The positions of the App locations.  Each set of 3 values will represent a Point.  This and 'positions_file' cannot be both supplied. If this and 'positions_file' are not supplied, a single position (0,0,0) will be used
    - name: positions_file
      required: No
      default: !!str 
      cpp_type: std::vector<FileName, std::allocator<FileName> >
      group_name: 
      description: |
        A filename that should be looked in for positions. Each set of 3 values in that file will represent a Point.  This and 'positions' cannot be both supplied
    - name: reset_apps
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The Apps that will be reset when 'reset_time' is hit.  These are the App 'numbers' starting with 0 corresponding to the order of the App positions.  Resetting an App means that it is destroyed and recreated, possibly modeling the insertion of 'new' material for that app.
    - name: reset_time
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The time at which to reset Apps given by the 'reset_apps' parameter.  Resetting an App means that it is destroyed and recreated, possibly modeling the insertion of 'new' material for that app.
    - name: type
      required: No
      default: !!str FullSolveMultiApp
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /MultiApps/TransientMultiApp
    description: |
      
    parameters:
    - name: app_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: MouseApp MouseTestApp
      description: |
        The type of application to build (applications not registered can be loaded with dynamic libraries. Master application type will be used if not provided.
    - name: bounding_box_inflation
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        Relative amount to 'inflate' the bounding box of this MultiApp.
    - name: bounding_box_padding
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Additional padding added to the dimensions of the bounding box. The values are added to the x, y and z dimension respectively.
    - name: catch_up
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true this will allow failed solves to attempt to 'catch up' using smaller timesteps.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: detect_steady_state
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true then while sub_cycling a steady state check will be done.  In this mode output will only be done once the MultiApp reaches the target time or steady state is reached
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_BEGIN
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: input_files
      required: Yes
      default: !!str 
      cpp_type: std::vector<FileName, std::allocator<FileName> >
      group_name: 
      description: |
        The input file for each App.  If this parameter only contains one input file it will be used for all of the Apps.  When using 'positions_from_file' it is also admissable to provide one input_file per file.
    - name: interpolate_transfers
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Only valid when sub_cycling.  This allows transferred values to be interpolated over the time frame the MultiApp is executing over when sub_cycling
    - name: keep_solution_during_restore
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        This is useful when doing Picard with catch_up steps.  It takes the solution from the final catch_up step and re-uses it as the initial guess for the next picard iteration
    - name: library_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The file name of the library (*.la file) that will be dynamically loaded.
    - name: library_path
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Path to search for dynamic libraries (please avoid committing absolute paths in addition to MOOSE_LIBRARY_PATH)
    - name: max_catch_up_steps
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        Maximum number of steps to allow an app to take when trying to catch back up after a failed solve.
    - name: max_failures
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of solve failures tolerated while sub_cycling.
    - name: max_procs_per_app
      required: No
      default: !!str 4294967295
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of processors to give to each App in this MultiApp.  Useful for restricting small solves to just a few procs so they don't get spread out
    - name: move_apps
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Apps, designated by their 'numbers' starting with 0 corresponding to the order of the App positions, to be moved at move_time to move_positions
    - name: move_positions
      required: No
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        The positions corresponding to each move_app.
    - name: move_time
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The time at which Apps designated by move_apps are moved to move_positions.
    - name: output_in_position
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true this will cause the output from the MultiApp to be 'moved' by its position vector
    - name: output_sub_cycles
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true then every sub-cycle will be output.
    - name: positions
      required: No
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        The positions of the App locations.  Each set of 3 values will represent a Point.  This and 'positions_file' cannot be both supplied. If this and 'positions_file' are not supplied, a single position (0,0,0) will be used
    - name: positions_file
      required: No
      default: !!str 
      cpp_type: std::vector<FileName, std::allocator<FileName> >
      group_name: 
      description: |
        A filename that should be looked in for positions. Each set of 3 values in that file will represent a Point.  This and 'positions' cannot be both supplied
    - name: print_sub_cycles
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Toggle the display of sub-cycles on the screen.
    - name: reset_apps
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        The Apps that will be reset when 'reset_time' is hit.  These are the App 'numbers' starting with 0 corresponding to the order of the App positions.  Resetting an App means that it is destroyed and recreated, possibly modeling the insertion of 'new' material for that app.
    - name: reset_time
      required: No
      default: !!str 1.79769e+308
      cpp_type: double
      group_name: 
      description: |
        The time at which to reset Apps given by the 'reset_apps' parameter.  Resetting an App means that it is destroyed and recreated, possibly modeling the insertion of 'new' material for that app.
    - name: steady_state_tol
      required: No
      default: !!str 1e-08
      cpp_type: double
      group_name: 
      description: |
        The relative difference between the new solution and the old solution that will be considered to be at steady state
    - name: sub_cycling
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to allow this MultiApp to take smaller timesteps than the rest of the simulation.  More than one timestep will be performed for each 'master' timestep
    - name: tolerate_failure
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true this MultiApp won't participate in dt decisions and will always be fast-forwarded to the current time.
    - name: type
      required: No
      default: !!str TransientMultiApp
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
- name: /NodalKernels
  description: |
    
  parameters:
  subblocks:
  - name: /NodalKernels/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /NodalKernels/ConstantRate
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: rate
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The constant rate in 'du/dt = rate'
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ConstantRate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /NodalKernels/NodalGravity
    description: |
      
    parameters:
    - name: alpha
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Alpha parameter for mass dependent numerical damping induced by HHT time integration scheme
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: No
      default: !!str 1
      cpp_type: FunctionName
      group_name: 
      description: |
        A function that describes the gravitational force
    - name: gravity_value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Acceleration due to gravity.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: mass
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Mass associated with the node
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: nodal_mass_file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        The file containing the nodal positions and the corresponding nodal masses.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalGravity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /NodalKernels/NodalRotationalInertia
    description: |
      
    parameters:
    - name: Ixx
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Moment of inertia in the x direction.
    - name: Ixy
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Moment of inertia in the xy direction.
    - name: Ixz
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Moment of inertia in the xz direction.
    - name: Iyy
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Moment of inertia in the y direction.
    - name: Iyz
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Moment of inertia in the yz direction.
    - name: Izz
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Moment of inertia in the z direction.
    - name: alpha
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Alpha parameter for mass dependent numerical damping induced by HHT time integration scheme
    - name: beta
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        beta parameter for Newmark Time integration
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: component
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        An integer corresponding to the direction the variable this nodalkernel acts in. (0 for rot_x, 1 for rot_y, and 2 for rot_z).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Constant real number defining the eta parameter forRayleigh damping.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: gamma
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        gamma parameter for Newmark Time integration
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: rotational_accelerations
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        rotational acceleration variables
    - name: rotational_velocities
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        rotational velocity variables
    - name: rotations
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        rotational displacement variables
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalRotationalInertia
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: x_orientation
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Unit vector along the x direction if different from global x direction.
    - name: y_orientation
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Unit vector along the y direction if different from global y direction.
    subblocks:
  - name: /NodalKernels/NodalTranslationalInertia
    description: |
      
    parameters:
    - name: acceleration
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        acceleration variable
    - name: alpha
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Alpha parameter for mass dependent numerical damping induced by HHT time integration scheme
    - name: beta
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        beta parameter for Newmark Time integration
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: eta
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Constant real number defining the eta parameter for Rayleigh damping.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: gamma
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        gamma parameter for Newmark Time integration
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: mass
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Mass associated with the node
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: nodal_mass_file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        The file containing the nodal positions and the corresponding nodal masses.
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalTranslationalInertia
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    - name: velocity
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        velocity variable
    subblocks:
  - name: /NodalKernels/TimeDerivativeNodalKernel
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TimeDerivativeNodalKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /NodalKernels/UserForcingFunctionNodalKernel
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diag_save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's diagonal jacobian contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The forcing function
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: save_in
      required: No
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The name of auxiliary variables to save this BC's residual contributions to.  Everything about that variable must match everything about this variable (the type, what blocks it's on, etc.)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str UserForcingFunctionNodalKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
- name: /NodalNormals
  description: |
    
  parameters:
  - name: boundary
    required: No
    default: !!str ANY_BOUNDARY_ID 
    cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
    group_name: 
    description: |
      The boundary ID or name where the normals will be computed
  - name: corner_boundary
    required: No
    default: !!str 
    cpp_type: BoundaryName
    group_name: 
    description: |
      boundary ID or name with nodes at 'corners'
  - name: inactive
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      If specified blocks matching these identifiers will be skipped.
  - name: order
    required: No
    default: !!str FIRST
    cpp_type: MooseEnum
    group_name: 
    options: FIRST SECOND
    description: |
      Specifies the order of variables that hold the nodal normals. Needs to match the order of the mesh
  subblocks:
- name: /Outputs
  description: |
    
  parameters:
  - name: append_date
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      When true the date and time are appended to the output filename.
  - name: append_date_format
    required: No
    default: !!str 
    cpp_type: std::string
    group_name: 
    description: |
      The format of the date/time to append (see http://www.cplusplus.com/reference/ctime/strftime).
  - name: checkpoint
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Create checkpoint files using the default options.
  - name: color
    required: No
    default: !!str 1
    cpp_type: bool
    group_name: 
    description: |
      Set to false to turn off all coloring in all outputs
  - name: console
    required: No
    default: !!str 1
    cpp_type: bool
    group_name: 
    description: |
      Output the results using the default settings for Console output
  - name: controls
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Enable the screen output of Control systems.
  - name: csv
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Output the scalar variable and postprocessors to a *.csv file using the default CSV output.
  - name: dofmap
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Create the dof map .json output file
  - name: execute_on
    required: No
    default: !!str INITIAL TIMESTEP_END
    cpp_type: ExecFlagEnum
    group_name: 
    description: |
      The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
  - name: exodus
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Output the results using the default settings for Exodus output
  - name: file_base
    required: No
    default: !!str 
    cpp_type: std::string
    group_name: 
    description: |
      Common file base name to be utilized with all output objects
  - name: gmv
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Output the results using the default settings for GMV output
  - name: gnuplot
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Output the scalar and postprocessor results using the default settings for GNUPlot output
  - name: hide
    required: No
    default: !!str 
    cpp_type: std::vector<VariableName, std::allocator<VariableName> >
    group_name: 
    description: |
      A list of the variables and postprocessors that should NOT be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
  - name: inactive
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      If specified blocks matching these identifiers will be skipped.
  - name: interval
    required: No
    default: !!str 1
    cpp_type: unsigned int
    group_name: 
    description: |
      The interval at which timesteps are output to the solution file
  - name: nemesis
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Output the results using the default settings for Nemesis output
  - name: output_if_base_contains
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
  - name: perf_graph
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Enable printing of the performance graph to the screen (Console)
  - name: print_linear_residuals
    required: No
    default: !!str 1
    cpp_type: bool
    group_name: 
    description: |
      Enable printing of linear residuals to the screen (Console)
  - name: print_mesh_changed_info
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      When true, each time the mesh is changed the mesh information is printed
  - name: print_perf_log
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Use perf_graph instead!
  - name: show
    required: No
    default: !!str 
    cpp_type: std::vector<VariableName, std::allocator<VariableName> >
    group_name: 
    description: |
      A list of the variables and postprocessors that should be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
  - name: solution_history
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Print a solution history file (.slh) using the default settings
  - name: sync_times
    required: No
    default: !!str 
    cpp_type: std::vector<double, std::allocator<double> >
    group_name: 
    description: |
      Times at which the output and solution is forced to occur
  - name: tecplot
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Output the results using the default settings for Tecplot output
  - name: vtk
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Output the results using the default settings for VTKOutput output
  - name: xda
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Output the results using the default settings for XDA/XDR output (ascii)
  - name: xdr
    required: No
    default: !!str 0
    cpp_type: bool
    group_name: 
    description: |
      Output the results using the default settings for XDA/XDR output (binary)
  subblocks:
  - name: /Outputs/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /Outputs/CSV
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: align
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Align the outputted csv data by padding the numbers with trailing whitespace
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: append_restart
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Append existing file on restart
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: delimiter
      required: No
      default: !!str ","
      cpp_type: std::string
      group_name: 
      description: |
        Assign the delimiter (default is ','
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_elemental_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of elemental variables
    - name: execute_input
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of input file information
    - name: execute_nodal_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of nodal variables
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: execute_postprocessors_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control of when postprocessors are output
    - name: execute_scalar_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of aux scalar variables
    - name: execute_scalars_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control the output of scalar variables
    - name: execute_system_information
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of the simulation information
    - name: execute_vector_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of vector postprocessors
    - name: execute_vector_postprocessors_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Enable/disable the output of VectorPostprocessors
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: hide
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should NOT be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: new_row_tolerance
      required: No
      default: !!str 1e-12
      cpp_type: double
      group_name: 
      description: |
        The independent variable tolerance for determining when a new row should be added to the table (Note: This value must be set independently for Postprocessor output to type=Console and type=CSV file separately.
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of postprocessors
    - name: precision
      required: No
      default: !!str 14
      cpp_type: unsigned int
      group_name: 
      description: |
        Set the output precision
    - name: show
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: sort_columns
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Toggle the sorting of columns alphabetically.
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_column
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether or not the 'time' column should be written for Postprocessor CSV files
    - name: time_data
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true and VecptorPostprocessor data exists, write a csv file containing the timestep and time information.
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str CSV
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/Checkpoint
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: binary
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Toggle the output of binary files
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: num_files
      required: No
      default: !!str 2
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of the restart files to save
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: padding
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: suffix
      required: No
      default: !!str cp
      cpp_type: std::string
      group_name: 
      description: |
        This will be appended to the file_base to create the directory name for checkpoint files.
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str Checkpoint
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/Console
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: all_variable_norms
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Norms'
      description: |
        If true, all variable norms will be printed after each solve
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: append_restart
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Append existing file on restart
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_elemental_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of elemental variables
    - name: execute_input
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of input file information
    - name: execute_input_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Enable/disable the output of the input file
    - name: execute_nodal_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of nodal variables
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_BEGIN LINEAR NONLINEAR FAILED
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: execute_postprocessors_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control of when postprocessors are output
    - name: execute_scalar_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of aux scalar variables
    - name: execute_scalars_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control the output of scalar variables
    - name: execute_system_information
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of the simulation information
    - name: execute_system_information_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control when the output of the simulation information occurs
    - name: execute_vector_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of vector postprocessors
    - name: execute_vector_postprocessors_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Enable/disable the output of VectorPostprocessors
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: fit_mode
      required: No
      default: !!str ENVIRONMENT
      cpp_type: MooseEnum
      group_name: 
      options: ENVIRONMENT AUTO 80 120 160
      description: |
        Specifies the wrapping mode for post-processor tables that are printed to the screen (ENVIRONMENT: Read "MOOSE_PPS_WIDTH" for desired width, AUTO: Attempt to determine width automatically (serial only), <n>: Desired width
    - name: hide
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should NOT be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: libmesh_log
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Performance Log'
      description: |
        Print the libMesh performance log, requires libMesh to be configured with --enable-perflog
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: max_rows
      required: No
      default: !!str 15
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The maximum number of postprocessor/scalar values displayed on screen during a timestep (set to 0 for unlimited)
    - name: new_row_tolerance
      required: No
      default: !!str 1e-12
      cpp_type: double
      group_name: 
      description: |
        The independent variable tolerance for determining when a new row should be added to the table (Note: This value must be set independently for Postprocessor output to type=Console and type=CSV file separately.
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: outlier_multiplier
      required: No
      default: !!str 0.8 2 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Norms'
      description: |
        Multiplier utilized to determine if a residual norm is an outlier. If the variable residual is less than multiplier[0] times the total residual it is colored red. If the variable residual is less than multiplier[1] times the average residual it is colored yellow.
    - name: outlier_variable_norms
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Norms'
      description: |
        If true, outlier variable norms will be printed after each solve
    - name: output_file
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output to the file
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of postprocessors
    - name: output_screen
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Output to the screen
    - name: padding
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: perf_header
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 'Perf Log'
      description: |
        Print the libMesh performance log header (requires that 'perf_log = true')
    - name: perf_log
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Perf Log'
      description: |
        If true, all performance logs will be printed. The individual log settings will override this option.
    - name: perf_log_interval
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        If set, the performance log will be printed every n time steps
    - name: print_mesh_changed_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true, each time the mesh is changed the mesh information is printed
    - name: scientific_time
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Control the printing of time and dt in scientific notation
    - name: show
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: show_multiapp_name
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Indent multiapp output using the multiapp name
    - name: solve_log
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 'Perf Log'
      description: |
        Toggles the printing of the 'Moose Test Performance' log
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: system_info
      required: No
      default: !!str framework mesh aux nonlinear relationship execution
      cpp_type: MultiMooseEnum
      group_name: 'Advanced'
      options: framework mesh aux nonlinear relationship execution output
      description: |
        List of information types to display ('framework', 'mesh', 'aux', 'nonlinear', 'relationship', 'execution', 'output')
    - name: time_column
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether or not the 'time' column should be written for Postprocessor CSV files
    - name: time_data
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true and VecptorPostprocessor data exists, write a csv file containing the timestep and time information.
    - name: time_precision
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of significant digits that are printed on time related outputs
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str Console
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    - name: verbose
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Print detailed diagnostics on timestep calculation
    subblocks:
  - name: /Outputs/ControlOutput
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: clear_after_output
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Clear the active control display after each output.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_BEGIN
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: show_active_objects
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        List active MooseObjects.
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str ControlOutput
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/DOFMap
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_file
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Output to the file
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_screen
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output to the screen
    - name: padding
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: system_name
      required: No
      default: !!str nl0
      cpp_type: std::string
      group_name: 
      description: |
        System to output
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str DOFMap
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/Exodus
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: append_oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Append '_oversample' to the output file base
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: discontinuous
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enables discontinuous output format for Exodus files.
    - name: elemental_as_nodal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Variables'
      description: |
        Output elemental nonlinear variables as nodal
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_elemental_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control the output of elemental variables
    - name: execute_elemental_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of elemental variables
    - name: execute_input
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of input file information
    - name: execute_input_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Enable/disable the output of the input file
    - name: execute_nodal_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control the output of nodal variables
    - name: execute_nodal_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of nodal variables
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: execute_postprocessors_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control of when postprocessors are output
    - name: execute_scalar_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of aux scalar variables
    - name: execute_scalars_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control the output of scalar variables
    - name: execute_system_information
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of the simulation information
    - name: execute_vector_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of vector postprocessors
    - name: file
      required: No
      default: !!str 
      cpp_type: MeshFileName
      group_name: 'Oversampling'
      description: |
        The name of the mesh file to read, for oversampling
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: hide
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should NOT be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_dimension
      required: No
      default: !!str default
      cpp_type: MooseEnum
      group_name: 'Advanced'
      options: default 1 2 3 problem_dimension
      description: |
        The dimension of the output file
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_material_properties
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Materials'
      description: |
        Flag indicating if material properties should be output
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of postprocessors
    - name: oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to enable oversampling
    - name: overwrite
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the latest timestep will overwrite the existing file, so only a single timestep exists.
    - name: padding
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: position
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 'Oversampling'
      description: |
        Set a positional offset, this vector will get added to the nodal coordinates to move the domain.
    - name: refinements
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Oversampling'
      description: |
        Number of uniform refinements for oversampling (refinement levels beyond any uniform refinements)
    - name: scalar_as_nodal
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Variables'
      description: |
        Output scalar variables as nodal
    - name: sequence
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable sequential file output (enabled by default when 'use_displace = true', otherwise defaults to false
    - name: show
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: show_material_properties
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Materials'
      description: |
        List of materialproperties that should be written to the output
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str Exodus
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    - name: use_problem_dimension
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        Use the problem dimension to the mesh output. Set to false when outputting lower dimensional meshes embedded in a higher dimensional space.
    subblocks:
  - name: /Outputs/GMV
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: append_oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Append '_oversample' to the output file base
    - name: binary
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Output the file in binary format
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_elemental_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of elemental variables
    - name: execute_input
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of input file information
    - name: execute_nodal_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of nodal variables
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: execute_scalar_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of aux scalar variables
    - name: execute_system_information
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of the simulation information
    - name: execute_vector_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of vector postprocessors
    - name: file
      required: No
      default: !!str 
      cpp_type: MeshFileName
      group_name: 'Oversampling'
      description: |
        The name of the mesh file to read, for oversampling
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: hide
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should NOT be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of postprocessors
    - name: oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to enable oversampling
    - name: padding
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: position
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 'Oversampling'
      description: |
        Set a positional offset, this vector will get added to the nodal coordinates to move the domain.
    - name: refinements
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Oversampling'
      description: |
        Number of uniform refinements for oversampling (refinement levels beyond any uniform refinements)
    - name: show
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str GMV
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/Gnuplot
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: append_restart
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Append existing file on restart
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_elemental_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of elemental variables
    - name: execute_input
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of input file information
    - name: execute_nodal_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of nodal variables
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: execute_postprocessors_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control of when postprocessors are output
    - name: execute_scalar_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of aux scalar variables
    - name: execute_scalars_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control the output of scalar variables
    - name: execute_system_information
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of the simulation information
    - name: execute_vector_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of vector postprocessors
    - name: execute_vector_postprocessors_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Enable/disable the output of VectorPostprocessors
    - name: extension
      required: No
      default: !!str png
      cpp_type: MooseEnum
      group_name: 
      options: png ps gif
      description: |
        GNU plot file extension
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: hide
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should NOT be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: new_row_tolerance
      required: No
      default: !!str 1e-12
      cpp_type: double
      group_name: 
      description: |
        The independent variable tolerance for determining when a new row should be added to the table (Note: This value must be set independently for Postprocessor output to type=Console and type=CSV file separately.
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of postprocessors
    - name: padding
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: show
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_column
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether or not the 'time' column should be written for Postprocessor CSV files
    - name: time_data
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true and VecptorPostprocessor data exists, write a csv file containing the timestep and time information.
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str Gnuplot
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/MaterialPropertyDebugOutput
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str MaterialPropertyDebugOutput
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/Nemesis
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_elemental_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of elemental variables
    - name: execute_input
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of input file information
    - name: execute_input_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Enable/disable the output of the input file
    - name: execute_nodal_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of nodal variables
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: execute_postprocessors_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control of when postprocessors are output
    - name: execute_scalar_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of aux scalar variables
    - name: execute_scalars_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 'Variables'
      description: |
        Control the output of scalar variables
    - name: execute_system_information
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of the simulation information
    - name: execute_vector_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of vector postprocessors
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: hide
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should NOT be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of postprocessors
    - name: padding
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: show
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str Nemesis
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/PerfGraphOutput
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_on
      required: No
      default: !!str FINAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: heaviest_branch
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to print out the trace through the code that took the longest amount of time
    - name: heaviest_sections
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of sections to print out showing the parts of the code that take the most time.  When '0' it won't print at all.
    - name: hide
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 
      description: |
        A list of the variables and postprocessors that should NOT be output to thefile (may include Variables, ScalarVariables, and Postprocessor names).
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: level
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        The level of detail to output.  Higher levels will yield more detail.
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str PerfGraphOutput
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/SolutionHistory
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: padding
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str SolutionHistory
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/Tecplot
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: append_oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Append '_oversample' to the output file base
    - name: ascii_append
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true, append to an existing ASCII file rather than creating a new file each time
    - name: binary
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set Tecplot files to output in binary format
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_elemental_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of elemental variables
    - name: execute_input
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of input file information
    - name: execute_nodal_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of nodal variables
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: execute_scalar_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of aux scalar variables
    - name: execute_system_information
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of the simulation information
    - name: execute_vector_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of vector postprocessors
    - name: file
      required: No
      default: !!str 
      cpp_type: MeshFileName
      group_name: 'Oversampling'
      description: |
        The name of the mesh file to read, for oversampling
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: hide
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should NOT be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of postprocessors
    - name: oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to enable oversampling
    - name: padding
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: position
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 'Oversampling'
      description: |
        Set a positional offset, this vector will get added to the nodal coordinates to move the domain.
    - name: refinements
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Oversampling'
      description: |
        Number of uniform refinements for oversampling (refinement levels beyond any uniform refinements)
    - name: show
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str Tecplot
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/TopResidualDebugOutput
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_on
      required: No
      default: !!str LINEAR NONLINEAR TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: num_residuals
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of top residuals to print out (0 = no output)
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str TopResidualDebugOutput
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/VTK
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: append_oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Append '_oversample' to the output file base
    - name: binary
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set VTK files to output in binary format
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_elemental_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of elemental variables
    - name: execute_input
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of input file information
    - name: execute_nodal_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of nodal variables
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: execute_scalar_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of aux scalar variables
    - name: execute_system_information
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of the simulation information
    - name: execute_vector_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of vector postprocessors
    - name: file
      required: No
      default: !!str 
      cpp_type: MeshFileName
      group_name: 'Oversampling'
      description: |
        The name of the mesh file to read, for oversampling
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: hide
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should NOT be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of postprocessors
    - name: oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to enable oversampling
    - name: padding
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: position
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 'Oversampling'
      description: |
        Set a positional offset, this vector will get added to the nodal coordinates to move the domain.
    - name: refinements
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Oversampling'
      description: |
        Number of uniform refinements for oversampling (refinement levels beyond any uniform refinements)
    - name: show
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str VTK
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/VariableResidualNormsDebugOutput
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str VariableResidualNormsDebugOutput
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/XDA
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: append_oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Append '_oversample' to the output file base
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_elemental_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of elemental variables
    - name: execute_input
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of input file information
    - name: execute_nodal_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of nodal variables
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: execute_scalar_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of aux scalar variables
    - name: execute_system_information
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of the simulation information
    - name: execute_vector_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of vector postprocessors
    - name: file
      required: No
      default: !!str 
      cpp_type: MeshFileName
      group_name: 'Oversampling'
      description: |
        The name of the mesh file to read, for oversampling
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: hide
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should NOT be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of postprocessors
    - name: oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to enable oversampling
    - name: padding
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: position
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 'Oversampling'
      description: |
        Set a positional offset, this vector will get added to the nodal coordinates to move the domain.
    - name: refinements
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Oversampling'
      description: |
        Number of uniform refinements for oversampling (refinement levels beyond any uniform refinements)
    - name: show
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str XDA
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
  - name: /Outputs/XDR
    description: |
      
    parameters:
    - name: additional_execute_on
      required: No
      default: !!str 
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: append_date
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the date and time are appended to the output filename.
    - name: append_date_format
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The format of the date/time to append, if not given UTC format used (see http://www.cplusplus.com/reference/ctime/strftime).
    - name: append_oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Append '_oversample' to the output file base
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object stop operating
    - name: end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object stop operating
    - name: execute_elemental_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of elemental variables
    - name: execute_input
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of input file information
    - name: execute_nodal_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of nodal variables
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, FAILED, CUSTOM.
    - name: execute_scalar_variables
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of aux scalar variables
    - name: execute_system_information
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of the simulation information
    - name: execute_vector_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of vector postprocessors
    - name: file
      required: No
      default: !!str 
      cpp_type: MeshFileName
      group_name: 'Oversampling'
      description: |
        The name of the mesh file to read, for oversampling
    - name: file_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The desired solution output name without an extension
    - name: hide
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should NOT be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: interval
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 'Timing'
      description: |
        The interval at which time steps are output to the solution file
    - name: linear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting linear residuals
    - name: linear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each linear residual evaluation
    - name: linear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each linear residual evaluation
    - name: linear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: nonlinear_residual_dt_divisor
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Number of divisions applied to time step when outputting non-linear residuals
    - name: nonlinear_residual_end_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies an end time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residual_start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'PETSc'
      description: |
        Specifies a start time to begin output on each nonlinear residual evaluation
    - name: nonlinear_residuals
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'PETSc'
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_if_base_contains
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        If this is supplied then output will only be done in the case that the output base contains one of these strings.  This is helpful in outputting only a subset of outputs when using MultiApps.
    - name: output_linear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each linear residual evaluation
    - name: output_nonlinear
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Specifies whether output occurs on each nonlinear residual evaluation
    - name: output_postprocessors
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the output of postprocessors
    - name: oversample
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to enable oversampling
    - name: padding
      required: No
      default: !!str 4
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The number of for extension suffix (e.g., out.e-s002)
    - name: position
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 'Oversampling'
      description: |
        Set a positional offset, this vector will get added to the nodal coordinates to move the domain.
    - name: refinements
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Oversampling'
      description: |
        Number of uniform refinements for oversampling (refinement levels beyond any uniform refinements)
    - name: show
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 'Variables'
      description: |
        A list of the variables and postprocessors that should be output to the Exodus file (may include Variables, ScalarVariables, and Postprocessor names).
    - name: start_step
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Time step at which this output object begins to operate
    - name: start_time
      required: No
      default: !!str 
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time at which this output object begins to operate
    - name: sync_only
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Timing'
      description: |
        Only export results at sync times
    - name: sync_times
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 'Timing'
      description: |
        Times at which the output and solution is forced to occur
    - name: time_tolerance
      required: No
      default: !!str 1e-14
      cpp_type: double
      group_name: 'Timing'
      description: |
        Time tolerance utilized checking start and end times
    - name: type
      required: No
      default: !!str XDR
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Enable/disable the use of the displaced mesh for outputting
    subblocks:
- name: /Postprocessors
  description: |
    
  parameters:
  subblocks:
  - name: /Postprocessors/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /Postprocessors/AreaPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str AreaPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/AverageElementSize
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str AverageElementSize
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/AverageGrainVolume
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: feature_counter
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        number of grains to create
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str AverageGrainVolume
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    subblocks:
  - name: /Postprocessors/AverageNodalVariableValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str AverageNodalVariableValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /Postprocessors/AxisymmetricCenterlineAverageValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str AxisymmetricCenterlineAverageValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /Postprocessors/CavityPressurePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: cavity_pressure_uo
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CavityPressureUserObject that computes the initial moles
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: quantity
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: initial_moles cavity_pressure
      description: |
        The quantity to report: initial_moles cavity_pressure
    - name: type
      required: No
      default: !!str CavityPressurePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/ChangeOverTimePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: change_with_respect_to_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Compute change with respect to initial value instead of previous value
    - name: compute_relative_change
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Compute magnitude of relative change instead of change
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor
    - name: take_absolute_value
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Option to take absolute value of change
    - name: type
      required: No
      default: !!str ChangeOverTimePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/ChangeOverTimestepPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: change_with_respect_to_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Compute change with respect to initial value instead of previous value
    - name: compute_relative_change
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Compute magnitude of relative change instead of change
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor
    - name: take_absolute_value
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Option to take absolute value of change
    - name: type
      required: No
      default: !!str ChangeOverTimestepPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/CrackFrontData
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: crack_front_point_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of the point on the crack front where data is to be reported
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        A scale factor to be applied to the reported quantity
    - name: type
      required: No
      default: !!str CrackFrontData
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of a variable whose value at the crack front is to be reported
    subblocks:
  - name: /Postprocessors/CumulativeValuePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor
    - name: type
      required: No
      default: !!str CumulativeValuePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/DifferencePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str DifferencePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value1
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        First value
    - name: value2
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        Second value
    subblocks:
  - name: /Postprocessors/DiscreteNucleationData
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: inserter
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        DiscreteNucleationInserter user object
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str DiscreteNucleationData
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: Yes
      default: !!str COUNT
      cpp_type: MooseEnum
      group_name: 
      options: COUNT UPDATE RATE INSERTIONS DELETIONS
      description: |
        Select to output number of active nuclei, wether a change to the nucleus list occurred, the total rate over the entire domain, and numbers of insertions and deletions applied to the nucleus list.
    subblocks:
  - name: /Postprocessors/DiscreteNucleationTimeStep
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: dt_max
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Time step to cut back to at the start of a nucleation event
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: inserter
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        DiscreteNucleationInserter user object
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: p2nucleus
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        Maximum probability for more than one nucleus to appear during a time step. This will limit the time step based on the total nucleation rate for the domain to make sure the probability for two or more nuclei to appear is always below the chosen number.
    - name: type
      required: No
      default: !!str DiscreteNucleationTimeStep
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/ElementAverageSecondTimeDerivative
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementAverageSecondTimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/ElementAverageTimeDerivative
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementAverageTimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/ElementAverageValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementAverageValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/ElementExtremeValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementExtremeValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_type
      required: No
      default: !!str max
      cpp_type: MooseEnum
      group_name: 
      options: max min
      description: |
        Type of extreme value to return. 'max' returns the maximum value. 'min' returns the minimum value.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /Postprocessors/ElementH1Error
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: p
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The exponent used in the norm.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementH1Error
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/ElementH1SemiError
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementH1SemiError
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/ElementIntegralMaterialProperty
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: mat_prop
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The name of the material property
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementIntegralMaterialProperty
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/ElementIntegralVariablePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementIntegralVariablePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/ElementL2Difference
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: other_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to compare to
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementL2Difference
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/ElementL2Error
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementL2Error
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/ElementL2Norm
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementL2Norm
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/ElementVectorL2Error
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function_x
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: function_y
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: function_z
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementVectorL2Error
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: var_x
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The FE solution in x direction
    - name: var_y
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The FE solution in y direction
    - name: var_z
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The FE solution in z direction
    subblocks:
  - name: /Postprocessors/ElementW1pError
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: p
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The exponent used in the norm.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementW1pError
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/ElementalVariableValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elementid
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The ID of the element where we monitor
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str ElementalVariableValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to be monitored
    subblocks:
  - name: /Postprocessors/EmptyPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str EmptyPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/ExecutionerAttributeReporter
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str ExecutionerAttributeReporter
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/FauxGrainTracker
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 0.09
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: error_on_grain_creation
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Terminate with an error if a grain is created (does not include initial callback to start simulation)
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: halo_level
      required: No
      default: !!str 2
      cpp_type: unsigned short
      group_name: 
      description: |
        The thickness of the halo surrounding each feature.
    - name: max_remap_recursion_depth
      required: No
      default: !!str 6
      cpp_type: unsigned short
      group_name: 'Advanced'
      description: |
        The recursion depth allowed when searching for remapping candidates. Note: Setting this value high may result in very computationally expensive searches with little benefit. (Recommended level: 6)
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: polycrystal_ic_uo
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Optional: Polycrystal IC object
    - name: remap_grains
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates whether remapping should be done or not (default: true)
    - name: reserve_op
      required: No
      default: !!str 0
      cpp_type: unsigned short
      group_name: 
      description: |
        Indicates the number of reserved ops (variables that cannot be remapped to)
    - name: reserve_op_threshold
      required: No
      default: !!str 0.95
      cpp_type: double
      group_name: 
      description: |
        Threshold for locating a new feature on the reserved op variable(s)
    - name: threshold
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: tolerate_failure
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Allow the grain tracker to continue when it fails to find suitable grains for remapping. This will allow the simulation to continue but it will also allow non-physical grain coalesnce. DO NOT USE for production results!
    - name: tracking_step
      required: No
      default: !!str 0
      cpp_type: int
      group_name: 
      description: |
        The timestep for when we should start tracking grains
    - name: type
      required: No
      default: !!str FauxGrainTracker
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: verbosity_level
      required: No
      default: !!str 1
      cpp_type: short
      group_name: 
      description: |
        Level 0: Silent during normal operation, Level 1: Informational messages but no detailed grain structure printouts, Level 2: Verbose output including data structure dumps, Level 3: Debugging mode.
    subblocks:
  - name: /Postprocessors/FeatureFloodCount
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: threshold
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: type
      required: No
      default: !!str FeatureFloodCount
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable(s) for which to find connected regions of interests, i.e. "features".
    subblocks:
  - name: /Postprocessors/FeatureVolumeFraction
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: equil_fraction
      required: No
      default: !!str -1
      cpp_type: double
      group_name: 
      description: |
        Equilibrium volume fraction of 2nd phase for Avrami analysis
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: feature_volumes
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The feature volume VectorPostprocessorValue.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: mesh_volume
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        Postprocessor from which to get mesh volume
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str FeatureVolumeFraction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_type
      required: No
      default: !!str VOLUME_FRACTION
      cpp_type: MooseEnum
      group_name: 
      options: VOLUME_FRACTION AVRAMI
      description: |
        The value to output (VOLUME_FRACTION or AVRAMI value)
    subblocks:
  - name: /Postprocessors/FindValueOnLine
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depth
      required: No
      default: !!str 36
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of bisections to perform.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_point
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        End point of the sampling line.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: start_point
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Start point of the sampling line.
    - name: target
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Target value to locate.
    - name: tol
      required: No
      default: !!str 1e-10
      cpp_type: double
      group_name: 
      description: |
        Stop search if a value is found that is equal to the target with this tolerance applied.
    - name: type
      required: No
      default: !!str FindValueOnLine
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable to inspect
    subblocks:
  - name: /Postprocessors/FunctionSideIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: No
      default: !!str 1
      cpp_type: FunctionName
      group_name: 
      description: |
        This postprocessor will return the integral of this function over the boundary
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str FunctionSideIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/FunctionValuePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The function which supplies the postprocessor value.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: point
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        A point in space to be given to the function Default: (0, 0, 0)
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        A scale factor to be applied to the function
    - name: type
      required: No
      default: !!str FunctionValuePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/GrainBoundaryArea
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: grains_per_side
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        Number of order parameters contacting a boundary (should be 2.0 in polycrystals and 1.0 for dispersed particles)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: op_range
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Range over which order parameters change across an interface. By default order parameters are assumed to vary from 0 to 1
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str GrainBoundaryArea
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    subblocks:
  - name: /Postprocessors/GrainTracker
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 0.09
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: error_on_grain_creation
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Terminate with an error if a grain is created (does not include initial callback to start simulation)
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: halo_level
      required: No
      default: !!str 2
      cpp_type: unsigned short
      group_name: 
      description: |
        The thickness of the halo surrounding each feature.
    - name: max_remap_recursion_depth
      required: No
      default: !!str 6
      cpp_type: unsigned short
      group_name: 'Advanced'
      description: |
        The recursion depth allowed when searching for remapping candidates. Note: Setting this value high may result in very computationally expensive searches with little benefit. (Recommended level: 6)
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: polycrystal_ic_uo
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Optional: Polycrystal IC object
    - name: remap_grains
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates whether remapping should be done or not (default: true)
    - name: reserve_op
      required: No
      default: !!str 0
      cpp_type: unsigned short
      group_name: 
      description: |
        Indicates the number of reserved ops (variables that cannot be remapped to)
    - name: reserve_op_threshold
      required: No
      default: !!str 0.95
      cpp_type: double
      group_name: 
      description: |
        Threshold for locating a new feature on the reserved op variable(s)
    - name: threshold
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: tolerate_failure
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Allow the grain tracker to continue when it fails to find suitable grains for remapping. This will allow the simulation to continue but it will also allow non-physical grain coalesnce. DO NOT USE for production results!
    - name: tracking_step
      required: No
      default: !!str 0
      cpp_type: int
      group_name: 
      description: |
        The timestep for when we should start tracking grains
    - name: type
      required: No
      default: !!str GrainTracker
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: verbosity_level
      required: No
      default: !!str 1
      cpp_type: short
      group_name: 
      description: |
        Level 0: Silent during normal operation, Level 1: Informational messages but no detailed grain structure printouts, Level 2: Verbose output including data structure dumps, Level 3: Debugging mode.
    subblocks:
  - name: /Postprocessors/GrainTrackerElasticity
    description: |
      
    parameters:
    - name: C_ijkl
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Unrotated stiffness tensor
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 0.09
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: error_on_grain_creation
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Terminate with an error if a grain is created (does not include initial callback to start simulation)
    - name: euler_angle_provider
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Name of Euler angle provider user object
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: fill_method
      required: No
      default: !!str symmetric9
      cpp_type: MooseEnum
      group_name: 
      options: antisymmetric symmetric9 symmetric21 general_isotropic symmetric_isotropic symmetric_isotropic_E_nu antisymmetric_isotropic axisymmetric_rz general principal
      description: |
        The fill method
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: halo_level
      required: No
      default: !!str 2
      cpp_type: unsigned short
      group_name: 
      description: |
        The thickness of the halo surrounding each feature.
    - name: max_remap_recursion_depth
      required: No
      default: !!str 6
      cpp_type: unsigned short
      group_name: 'Advanced'
      description: |
        The recursion depth allowed when searching for remapping candidates. Note: Setting this value high may result in very computationally expensive searches with little benefit. (Recommended level: 6)
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: polycrystal_ic_uo
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Optional: Polycrystal IC object
    - name: random_rotations
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Generate random rotations when the Euler Angle provider runs out of data (otherwise error out)
    - name: remap_grains
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates whether remapping should be done or not (default: true)
    - name: reserve_op
      required: No
      default: !!str 0
      cpp_type: unsigned short
      group_name: 
      description: |
        Indicates the number of reserved ops (variables that cannot be remapped to)
    - name: reserve_op_threshold
      required: No
      default: !!str 0.95
      cpp_type: double
      group_name: 
      description: |
        Threshold for locating a new feature on the reserved op variable(s)
    - name: threshold
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: tolerate_failure
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Allow the grain tracker to continue when it fails to find suitable grains for remapping. This will allow the simulation to continue but it will also allow non-physical grain coalesnce. DO NOT USE for production results!
    - name: tracking_step
      required: No
      default: !!str 0
      cpp_type: int
      group_name: 
      description: |
        The timestep for when we should start tracking grains
    - name: type
      required: No
      default: !!str GrainTrackerElasticity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: verbosity_level
      required: No
      default: !!str 1
      cpp_type: short
      group_name: 
      description: |
        Level 0: Silent during normal operation, Level 1: Informational messages but no detailed grain structure printouts, Level 2: Verbose output including data structure dumps, Level 3: Debugging mode.
    subblocks:
  - name: /Postprocessors/InteractionIntegral
    description: |
      
    parameters:
    - name: K_factor
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Conversion factor between interaction integral and stress intensity factor K
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: crack_front_point_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of the point on the crack front corresponding to this q function
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poissons_ratio
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Poisson's ratio for the material.
    - name: q_function_type
      required: No
      default: !!str Geometry
      cpp_type: MooseEnum
      group_name: 
      options: Geometry Topology
      description: |
        The method used to define the integration domain. Options are: Geometry Topology
    - name: ring_first
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The first ring of elements for volume integral domain
    - name: ring_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Ring ID
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: sif_mode
      required: Yes
      default: !!str KI
      cpp_type: MooseEnum
      group_name: 
      options: KI KII KIII T
      description: |
        Stress intensity factor to calculate. Choices are: KI KII KIII T
    - name: symmetry_plane
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Account for a symmetry plane passing through the plane of the crack, normal to the specified axis (0=x, 1=y, 2=z)
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The temperature (optional). Must be provided to correctly compute stress intensity factors in models with thermal strain gradients.
    - name: type
      required: No
      default: !!str InteractionIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: youngs_modulus
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Young's modulus of the material.
    subblocks:
  - name: /Postprocessors/JIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: convert_J_to_K
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Convert J-integral to stress intensity factor K.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: crack_front_point_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of the point on the crack front corresponding to this q function
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poissons_ratio
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Poisson's ratio
    - name: q_function_type
      required: No
      default: !!str Geometry
      cpp_type: MooseEnum
      group_name: 
      options: Geometry Topology
      description: |
        The method used to define the integration domain. Options are: Geometry Topology
    - name: ring_first
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        First Ring ID
    - name: ring_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Ring ID
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: symmetry_plane
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Account for a symmetry plane passing through the plane of the crack, normal to the specified axis (0=x, 1=y, 2=z)
    - name: type
      required: No
      default: !!str JIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: youngs_modulus
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Young's modulus of the material.
    subblocks:
  - name: /Postprocessors/LinearCombinationPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: b
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Additional value to add to sum
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: pp_coefs
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        List of linear combination coefficients for each post-processor
    - name: pp_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<PostprocessorName, std::allocator<PostprocessorName> >
      group_name: 
      description: |
        List of post-processors
    - name: type
      required: No
      default: !!str LinearCombinationPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/Mass
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str Mass
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/MaterialTensorIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: index_i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ij for the tensor to output (0, 1, 2)
    - name: index_j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ij for the tensor to output (0, 1, 2)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: rank_two_tensor
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The rank two material tensor name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialTensorIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/MaterialTimeStepPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elements_changed
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Maximum number of elements within which the property named in 'elements_changed_property' is allowed to change by more than 'elements_changed_threshold' before the time step is limited.
    - name: elements_changed_property
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the material property used to limit the time step if its value changes by more than 'elements_changed_threshold' in at least 'elements_changed' elements
    - name: elements_changed_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Maximum permitted change in the value of 'elements_changed_property' in 'elements_changed' elements before the time step is limited.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialTimeStepPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_material_timestep_limit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        if true, the time step is limited by the minimum value of the matl_timestep_limit property
    subblocks:
  - name: /Postprocessors/MemoryUsage
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: mem_type
      required: No
      default: !!str physical_memory
      cpp_type: MooseEnum
      group_name: 
      options: physical_memory virtual_memory page_faults
      description: |
        Memory metric to report.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: report_peak_value
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        If the postprocessor is executed more than once during a time step, report the aggregated peak value.
    - name: type
      required: No
      default: !!str MemoryUsage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_type
      required: No
      default: !!str total
      cpp_type: MooseEnum
      group_name: 
      options: total average max_process min_process
      description: |
        Aggregation method to apply to the requested memory metric.
    subblocks:
  - name: /Postprocessors/MixedModeEquivalentK
    description: |
      
    parameters:
    - name: KIII_name
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the KIII postprocessor
    - name: KII_name
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the KII postprocessor
    - name: KI_name
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the KI postprocessor
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poissons_ratio
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Poisson's ratio for the material.
    - name: type
      required: No
      default: !!str MixedModeEquivalentK
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/NodalExtremeValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalExtremeValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_type
      required: No
      default: !!str max
      cpp_type: MooseEnum
      group_name: 
      options: max min
      description: |
        Type of extreme value to return. 'max' returns the maximum value. 'min' returns the minimum value.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /Postprocessors/NodalL2Error
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalL2Error
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /Postprocessors/NodalL2Norm
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalL2Norm
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /Postprocessors/NodalMaxValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalMaxValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /Postprocessors/NodalProxyMaxValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalProxyMaxValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /Postprocessors/NodalSum
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalSum
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /Postprocessors/NodalVariableValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: nodeid
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The ID of the node where we monitor
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        A scale factor to be applied to the variable
    - name: type
      required: No
      default: !!str NodalVariableValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to be monitored
    subblocks:
  - name: /Postprocessors/NumDOFs
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: system
      required: No
      default: !!str ALL
      cpp_type: MooseEnum
      group_name: 
      options: NL AUX ALL
      description: |
        The system(s) for which you want to retrieve the number of DOFs (NL, AUX, ALL). Default == ALL
    - name: type
      required: No
      default: !!str NumDOFs
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/NumElems
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elem_filter
      required: No
      default: !!str active
      cpp_type: MooseEnum
      group_name: 
      options: active total
      description: |
        The type of elements to include in the count (active, total). Default == active
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumElems
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/NumLinearIterations
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumLinearIterations
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/NumNodes
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumNodes
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/NumNonlinearIterations
    description: |
      
    parameters:
    - name: accumulate_over_step
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When set to true, accumulates to count the total over all Picard iterations for each step
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumNonlinearIterations
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/NumPicardIterations
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumPicardIterations
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/NumResidualEvaluations
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumResidualEvaluations
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/NumVars
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: system
      required: No
      default: !!str ALL
      cpp_type: MooseEnum
      group_name: 
      options: NL AUX ALL
      description: |
        The system(s) for which you want to retrieve the number of variables (NL, AUX, ALL). Default == ALL
    - name: type
      required: No
      default: !!str NumVars
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/PFCElementEnergyIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temp
      required: No
      default: !!str 1833
      cpp_type: double
      group_name: 
      description: |
        Temperature of simulation
    - name: type
      required: No
      default: !!str PFCElementEnergyIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/PercentChangePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor used for exit criterion
    - name: type
      required: No
      default: !!str PercentChangePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/PerfGraphData
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: data_type
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: SELF CHILDREN TOTAL SELF_AVG CHILDREN_AVG TOTAL_AVG SELF_PERCENT CHILDREN_PERCENT TOTAL_PERCENT CALLS
      description: |
        The type of data to retrieve for the section_name
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: section_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the section to get data for
    - name: type
      required: No
      default: !!str PerfGraphData
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/PerformanceData
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: category
      required: No
      default: !!str Execution
      cpp_type: MooseEnum
      group_name: 
      options: Application Execution Output Setup Utility
      description: |
        The category for the event
    - name: column
      required: No
      default: !!str total_time_with_sub
      cpp_type: MooseEnum
      group_name: 
      options: n_calls total_time average_time total_time_with_sub average_time_with_sub percent_of_active_time percent_of_active_time_with_sub
      description: |
        The column you want the value of (Default: total_time_with_sub).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: event
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: ACTIVE ALIVE solve() compute_residual() compute_jacobian()
      description: |
        The name or "label" of the event. Must match event name exactly including parenthesis if applicable. ("ALIVE" and "ACTIVE" are also valid events, category and column are ignored for these cases).
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str PerformanceData
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/PointValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: point
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The physical point where the solution will be evaluated.
    - name: type
      required: No
      default: !!str PointValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on.
    subblocks:
  - name: /Postprocessors/PolycrystalCircles
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coloring_algorithm
      required: No
      default: !!str jp
      cpp_type: MooseEnum
      group_name: 
      options: jp power greedy bt
      description: |
        The grain neighbor graph coloring algorithm to use: "jp" (DEFAULT) Jones and Plassmann, an efficient coloring algorithm, "power" an alternative stochastic algorithm, "greedy", a greedy assignment algorithm with stochastic updates to guarantee a valid coloring, "bt", a back tracking algorithm that produces good distributions but may experience exponential run time in the worst case scenario (works well on medium to large 2D problems)
    - name: columnar_3D
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        3D microstructure will be columnar in the z-direction?
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: execute_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File containing circle centers and radii
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_adjacency_matrix
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output the Grain Adjacency Matrix used in the coloring algorithms. Additionally, the grain to OP assignments will be printed
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: radii
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The radius for each circle
    - name: read_from_file
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to read the position and radius vectors from a file rather than inputing them manually
    - name: threshold
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: type
      required: No
      default: !!str PolycrystalCircles
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: x_positions
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        x coordinate for each circle center
    - name: y_positions
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        y coordinate for each circle center
    - name: z_positions
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        z coordinate for each circle center
    subblocks:
  - name: /Postprocessors/PolycrystalEBSD
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coloring_algorithm
      required: No
      default: !!str jp
      cpp_type: MooseEnum
      group_name: 
      options: jp power greedy bt
      description: |
        The grain neighbor graph coloring algorithm to use: "jp" (DEFAULT) Jones and Plassmann, an efficient coloring algorithm, "power" an alternative stochastic algorithm, "greedy", a greedy assignment algorithm with stochastic updates to guarantee a valid coloring, "bt", a back tracking algorithm that produces good distributions but may experience exponential run time in the worst case scenario (works well on medium to large 2D problems)
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: ebsd_reader
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        EBSD Reader for initial condition
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: execute_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_adjacency_matrix
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output the Grain Adjacency Matrix used in the coloring algorithms. Additionally, the grain to OP assignments will be printed
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: phase
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The phase to use for all queries. (Default: 0 ALL)
    - name: threshold
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: type
      required: No
      default: !!str PolycrystalEBSD
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    subblocks:
  - name: /Postprocessors/PolycrystalHex
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coloring_algorithm
      required: No
      default: !!str jp
      cpp_type: MooseEnum
      group_name: 
      options: jp power greedy bt
      description: |
        The grain neighbor graph coloring algorithm to use: "jp" (DEFAULT) Jones and Plassmann, an efficient coloring algorithm, "power" an alternative stochastic algorithm, "greedy", a greedy assignment algorithm with stochastic updates to guarantee a valid coloring, "bt", a back tracking algorithm that produces good distributions but may experience exponential run time in the worst case scenario (works well on medium to large 2D problems)
    - name: columnar_3D
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        3D microstructure will be columnar in the z-direction?
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: execute_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File containing grain centroids, if file_name is provided, the centroids from the file will be used.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_num
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of grains being represented by the order parameters
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_adjacency_matrix
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output the Grain Adjacency Matrix used in the coloring algorithms. Additionally, the grain to OP assignments will be printed
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perturbation_percent
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The percent to randomly perturb centers of grains relative to the size of the grain
    - name: rand_seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The random seed
    - name: threshold
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: type
      required: No
      default: !!str PolycrystalHex
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: x_offset
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        Specifies offset of hexagon grid in x-direction
    subblocks:
  - name: /Postprocessors/PolycrystalVoronoi
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coloring_algorithm
      required: No
      default: !!str jp
      cpp_type: MooseEnum
      group_name: 
      options: jp power greedy bt
      description: |
        The grain neighbor graph coloring algorithm to use: "jp" (DEFAULT) Jones and Plassmann, an efficient coloring algorithm, "power" an alternative stochastic algorithm, "greedy", a greedy assignment algorithm with stochastic updates to guarantee a valid coloring, "bt", a back tracking algorithm that produces good distributions but may experience exponential run time in the worst case scenario (works well on medium to large 2D problems)
    - name: columnar_3D
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        3D microstructure will be columnar in the z-direction?
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: execute_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File containing grain centroids, if file_name is provided, the centroids from the file will be used.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_num
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of grains being represented by the order parameters
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_adjacency_matrix
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output the Grain Adjacency Matrix used in the coloring algorithms. Additionally, the grain to OP assignments will be printed
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: rand_seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The random seed
    - name: threshold
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: type
      required: No
      default: !!str PolycrystalVoronoi
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    subblocks:
  - name: /Postprocessors/PostprocessorComparison
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-12
      cpp_type: double
      group_name: 
      description: |
        Absolute tolerance used in comparisons
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: comparison_type
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: equals greater_than_equals less_than_equals greater_than less_than
      description: |
        The type of comparison to perform. Options are: equals greater_than_equals less_than_equals greater_than less_than
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str PostprocessorComparison
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_a
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The first post-processor or value in the comparison
    - name: value_b
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The second post-processor or value in the comparison
    subblocks:
  - name: /Postprocessors/Receiver
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: default
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The default value
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: initialize_old
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Initialize the old postprocessor value with the default value
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str Receiver
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/RelativeDifferencePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str RelativeDifferencePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value1
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        First post-processor
    - name: value2
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        Second post-processor, base for relative difference
    subblocks:
  - name: /Postprocessors/RelativeSolutionDifferenceNorm
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str RelativeSolutionDifferenceNorm
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/Residual
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: residual_type
      required: No
      default: !!str FINAL
      cpp_type: MooseEnum
      group_name: 
      options: FINAL INITIAL_BEFORE_PRESET INITIAL_AFTER_PRESET
      description: |
        Type of residual to be reported.  Choices are: FINAL INITIAL_BEFORE_PRESET INITIAL_AFTER_PRESET
    - name: type
      required: No
      default: !!str Residual
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/ScalarL2Error
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str ScalarL2Error
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of the scalar variable
    subblocks:
  - name: /Postprocessors/ScalarVariable
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: component
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Component to output for this variable
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str ScalarVariable
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Name of the variable
    subblocks:
  - name: /Postprocessors/ScalePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scaling_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The scaling factor
    - name: type
      required: No
      default: !!str ScalePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The postprocessor to be scaled
    subblocks:
  - name: /Postprocessors/SideAverageValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str SideAverageValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /Postprocessors/SideFluxAverage
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diffusivity
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The name of the diffusivity material property that will be used in the flux computation.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str SideFluxAverage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /Postprocessors/SideFluxIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diffusivity
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The name of the diffusivity material property that will be used in the flux computation.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str SideFluxIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /Postprocessors/SideIntegralVariablePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str SideIntegralVariablePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /Postprocessors/TimeExtremeValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor used for reporting time extreme values
    - name: type
      required: No
      default: !!str TimeExtremeValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_type
      required: No
      default: !!str max
      cpp_type: MooseEnum
      group_name: 
      options: max min abs_max abs_min
      description: |
        Type of extreme value to return.'max' returns the maximum value.'min' returns the minimum value.'abs_max' returns the maximum absolute value.'abs_min' returns the minimum absolute value.
    subblocks:
  - name: /Postprocessors/TimestepSize
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str TimestepSize
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/TorqueReaction
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: axis_origin
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Origin of the axis of rotation used to calculate the torque
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction_vector
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The direction vector of the axis of rotation about which the calculated torque is calculated
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: reaction_force_variables
      required: Yes
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The reaction variables
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TorqueReaction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Postprocessors/TotalVariableValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str TotalVariableValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor
    subblocks:
  - name: /Postprocessors/VariableInnerProduct
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: second_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the second variable in the inner product (variable, second_variable)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VariableInnerProduct
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /Postprocessors/VariableResidual
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str VariableResidual
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of the variable to compute the residual for
    subblocks:
  - name: /Postprocessors/VectorPostprocessorComparison
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-12
      cpp_type: double
      group_name: 
      description: |
        Absolute tolerance used in comparisons
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: comparison_type
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: equals greater_than_equals less_than_equals greater_than less_than
      description: |
        The type of comparison to perform. Options are: equals greater_than_equals less_than_equals greater_than less_than
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str VectorPostprocessorComparison
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: vector_name_a
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the vector in the first vector post-processor to compare
    - name: vector_name_b
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the vector in the second vector post-processor to compare
    - name: vectorpostprocessor_a
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The first vector post-processor in the comparison
    - name: vectorpostprocessor_b
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The second vector post-processor in the comparison
    subblocks:
  - name: /Postprocessors/VolumePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VolumePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
- name: /Preconditioning
  description: |
    
  parameters:
  subblocks:
  - name: /Preconditioning/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
    - name: /Preconditioning/*/*
      description: |
        
      parameters:
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: isObjectAction
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Indicates that this is a MooseObjectAction.
      - name: petsc_options
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -dm_moose_print_embedding -dm_view -ksp_converged_reason -ksp_gmres_modifiedgramschmidt -ksp_monitor -ksp_monitor_snes_lg-snes_ksp_ew -ksp_snes_ew -snes_converged_reason -snes_ksp -snes_ksp_ew -snes_linesearch_monitor -snes_mf -snes_mf_operator -snes_monitor -snes_test_display -snes_view
        description: |
          Singleton PETSc options
      - name: petsc_options_iname
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -ksp_atol -ksp_gmres_restart -ksp_max_it -ksp_pc_side -ksp_rtol -ksp_type -mat_fd_coloring_err -mat_fd_type -mat_mffd_type -pc_asm_overlap -pc_factor_levels -pc_factor_mat_ordering_type -pc_hypre_boomeramg_grid_sweeps_all -pc_hypre_boomeramg_max_iter -pc_hypre_boomeramg_strong_threshold -pc_hypre_type -pc_type -snes_atol -snes_linesearch_type -snes_ls -snes_max_it -snes_rtol -snes_type -sub_ksp_type -sub_pc_type
        description: |
          Names of PETSc name/value pairs
      - name: petsc_options_value
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          Values of PETSc name/value pairs (must correspond with "petsc_options_iname"
      - name: type
        required: Yes
        default: !!str Split
        cpp_type: std::string
        group_name: 
        description: |
          Classname of the split object
      - name: vars
        required: No
        default: !!str 
        cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
        group_name: 
        description: |
          variables for this field
      subblocks:
    - name: /Preconditioning/*/Split
      description: |
        
      parameters:
      - name: blocks
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          Mesh blocks Split operates on (omitting this implies "all blocks"
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: petsc_options
        required: No
        default: !!str 
        cpp_type: MultiMooseEnum
        group_name: 
        options: -dm_moose_print_embedding -dm_view -ksp_converged_reason -ksp_gmres_modifiedgramschmidt -ksp_monitor -ksp_monitor_snes_lg-snes_ksp_ew -ksp_snes_ew -snes_converged_reason -snes_ksp -snes_ksp_ew -snes_linesearch_monitor -snes_mf -snes_mf_operator -snes_monitor -snes_test_display -snes_view
        description: |
          PETSc flags for the FieldSplit solver
      - name: petsc_options_iname
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          PETSc option names for the FieldSplit solver
      - name: petsc_options_value
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          PETSc option values for the FieldSplit solver
      - name: schur_ainv
        required: No
        default: !!str diag
        cpp_type: MooseEnum
        group_name: 
        options: diag lump
        description: |
          Type of approximation to inv(A) used when forming S = D - C inv(A) B
      - name: schur_pre
        required: No
        default: !!str S
        cpp_type: MooseEnum
        group_name: 
        options: S Sp A11
        description: |
          Type of Schur complement preconditioner matrix
      - name: schur_type
        required: No
        default: !!str full
        cpp_type: MooseEnum
        group_name: 
        options: full upper lower
        description: |
          Type of Schur complement
      - name: sides
        required: No
        default: !!str 
        cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
        group_name: 
        description: |
          Sidesets Split operates on (omitting this implies "no sidesets"
      - name: splitting
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          The names of the splits (subsystems) in the decomposition of this split
      - name: splitting_type
        required: No
        default: !!str additive
        cpp_type: MooseEnum
        group_name: 
        options: additive multiplicative symmetric_multiplicative schur
        description: |
          Split decomposition type
      - name: type
        required: No
        default: !!str Split
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: unsides
        required: No
        default: !!str 
        cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
        group_name: 
        description: |
          Sidesets Split excludes (omitting this implies "do not exclude any sidesets"
      - name: vars
        required: No
        default: !!str 
        cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
        group_name: 
        description: |
          Variables Split operates on (omitting this implies "all variables"
      subblocks:
  - name: /Preconditioning/FDP
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: finite_difference_type
      required: No
      default: !!str coloring
      cpp_type: MooseEnum
      group_name: 
      options: standard coloring
      description: |
        standard: standard finite differencecoloring: finite difference based on coloring
    - name: full
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true if you want the full set of couplings.  Simply for convenience so you don't have to set every off_diag_row and off_diag_column combination.
    - name: implicit_geometric_coupling
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true if you want to add entries into the matrix for degrees of freedom that might be coupled by inspection of the geometric search objects.
    - name: ksp_norm
      required: No
      default: !!str unpreconditioned
      cpp_type: MooseEnum
      group_name: 
      options: none preconditioned unpreconditioned natural default
      description: |
        Sets the norm that is used for convergence testing
    - name: mffd_type
      required: No
      default: !!str wp
      cpp_type: MooseEnum
      group_name: 
      options: wp ds
      description: |
        Specifies the finite differencing type for Jacobian-free solve types. Note that the default is wp (for Walker and Pernice).
    - name: off_diag_column
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The off diagonal column you want to add into the matrix, it will be associated with an off diagonal row from the same position in off_diag_row.
    - name: off_diag_row
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The off diagonal row you want to add into the matrix, it will be associated with an off diagonal column from the same position in off_diag_colum.
    - name: pc_side
      required: No
      default: !!str default
      cpp_type: MooseEnum
      group_name: 
      options: left right symmetric default
      description: |
        Preconditioning side
    - name: petsc_options
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: -dm_moose_print_embedding -dm_view -ksp_converged_reason -ksp_gmres_modifiedgramschmidt -ksp_monitor -ksp_monitor_snes_lg-snes_ksp_ew -ksp_snes_ew -snes_converged_reason -snes_ksp -snes_ksp_ew -snes_linesearch_monitor -snes_mf -snes_mf_operator -snes_monitor -snes_test_display -snes_view
      description: |
        Singleton PETSc options
    - name: petsc_options_iname
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: -ksp_atol -ksp_gmres_restart -ksp_max_it -ksp_pc_side -ksp_rtol -ksp_type -mat_fd_coloring_err -mat_fd_type -mat_mffd_type -pc_asm_overlap -pc_factor_levels -pc_factor_mat_ordering_type -pc_hypre_boomeramg_grid_sweeps_all -pc_hypre_boomeramg_max_iter -pc_hypre_boomeramg_strong_threshold -pc_hypre_type -pc_type -snes_atol -snes_linesearch_type -snes_ls -snes_max_it -snes_rtol -snes_type -sub_ksp_type -sub_pc_type
      description: |
        Names of PETSc name/value pairs
    - name: petsc_options_value
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Values of PETSc name/value pairs (must correspond with "petsc_options_iname"
    - name: solve_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: PJFNK JFNK NEWTON FD LINEAR
      description: |
        PJFNK: Preconditioned Jacobian-Free Newton Krylov JFNK: Jacobian-Free Newton Krylov NEWTON: Full Newton Solve FD: Use finite differences to compute Jacobian LINEAR: Solving a linear problem
    - name: type
      required: No
      default: !!str FDP
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Preconditioning/FSP
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: full
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Set to true if you want the full set of couplings.  Simply for convenience so you don't have to set every off_diag_row and off_diag_column combination.
    - name: ksp_norm
      required: No
      default: !!str unpreconditioned
      cpp_type: MooseEnum
      group_name: 
      options: none preconditioned unpreconditioned natural default
      description: |
        Sets the norm that is used for convergence testing
    - name: mffd_type
      required: No
      default: !!str wp
      cpp_type: MooseEnum
      group_name: 
      options: wp ds
      description: |
        Specifies the finite differencing type for Jacobian-free solve types. Note that the default is wp (for Walker and Pernice).
    - name: off_diag_column
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The off diagonal column you want to add into the matrix, it will be associated with an off diagonal row from the same position in off_diag_row.
    - name: off_diag_row
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The off diagonal row you want to add into the matrix, it will be associated with an off diagonal column from the same position in off_diag_colum.
    - name: pc_side
      required: No
      default: !!str default
      cpp_type: MooseEnum
      group_name: 
      options: left right symmetric default
      description: |
        Preconditioning side
    - name: petsc_options
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: -dm_moose_print_embedding -dm_view -ksp_converged_reason -ksp_gmres_modifiedgramschmidt -ksp_monitor -ksp_monitor_snes_lg-snes_ksp_ew -ksp_snes_ew -snes_converged_reason -snes_ksp -snes_ksp_ew -snes_linesearch_monitor -snes_mf -snes_mf_operator -snes_monitor -snes_test_display -snes_view
      description: |
        Singleton PETSc options
    - name: petsc_options_iname
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: -ksp_atol -ksp_gmres_restart -ksp_max_it -ksp_pc_side -ksp_rtol -ksp_type -mat_fd_coloring_err -mat_fd_type -mat_mffd_type -pc_asm_overlap -pc_factor_levels -pc_factor_mat_ordering_type -pc_hypre_boomeramg_grid_sweeps_all -pc_hypre_boomeramg_max_iter -pc_hypre_boomeramg_strong_threshold -pc_hypre_type -pc_type -snes_atol -snes_linesearch_type -snes_ls -snes_max_it -snes_rtol -snes_type -sub_ksp_type -sub_pc_type
      description: |
        Names of PETSc name/value pairs
    - name: petsc_options_value
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Values of PETSc name/value pairs (must correspond with "petsc_options_iname"
    - name: solve_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: PJFNK JFNK NEWTON FD LINEAR
      description: |
        PJFNK: Preconditioned Jacobian-Free Newton Krylov JFNK: Jacobian-Free Newton Krylov NEWTON: Full Newton Solve FD: Use finite differences to compute Jacobian LINEAR: Solving a linear problem
    - name: topsplit
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        entrance to splits, the top split will specify how splits will go.
    - name: type
      required: No
      default: !!str FSP
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Preconditioning/PBP
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: ksp_norm
      required: No
      default: !!str unpreconditioned
      cpp_type: MooseEnum
      group_name: 
      options: none preconditioned unpreconditioned natural default
      description: |
        Sets the norm that is used for convergence testing
    - name: mffd_type
      required: No
      default: !!str wp
      cpp_type: MooseEnum
      group_name: 
      options: wp ds
      description: |
        Specifies the finite differencing type for Jacobian-free solve types. Note that the default is wp (for Walker and Pernice).
    - name: off_diag_column
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The off diagonal column you want to add into the matrix, it will be associated with an off diagonal row from the same position in off_diag_row.
    - name: off_diag_row
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The off diagonal row you want to add into the matrix, it will be associated with an off diagonal column from the same position in off_diag_colum.
    - name: pc_side
      required: No
      default: !!str default
      cpp_type: MooseEnum
      group_name: 
      options: left right symmetric default
      description: |
        Preconditioning side
    - name: petsc_options
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: -dm_moose_print_embedding -dm_view -ksp_converged_reason -ksp_gmres_modifiedgramschmidt -ksp_monitor -ksp_monitor_snes_lg-snes_ksp_ew -ksp_snes_ew -snes_converged_reason -snes_ksp -snes_ksp_ew -snes_linesearch_monitor -snes_mf -snes_mf_operator -snes_monitor -snes_test_display -snes_view
      description: |
        Singleton PETSc options
    - name: petsc_options_iname
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: -ksp_atol -ksp_gmres_restart -ksp_max_it -ksp_pc_side -ksp_rtol -ksp_type -mat_fd_coloring_err -mat_fd_type -mat_mffd_type -pc_asm_overlap -pc_factor_levels -pc_factor_mat_ordering_type -pc_hypre_boomeramg_grid_sweeps_all -pc_hypre_boomeramg_max_iter -pc_hypre_boomeramg_strong_threshold -pc_hypre_type -pc_type -snes_atol -snes_linesearch_type -snes_ls -snes_max_it -snes_rtol -snes_type -sub_ksp_type -sub_pc_type
      description: |
        Names of PETSc name/value pairs
    - name: petsc_options_value
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Values of PETSc name/value pairs (must correspond with "petsc_options_iname"
    - name: preconditioner
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        TODO: docstring
    - name: solve_order
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The order the block rows will be solved in.  Put the name of variables here to stand for solving that variable's block row.  A variable may appear more than once (to create cylces if you like).
    - name: solve_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: PJFNK JFNK NEWTON FD LINEAR
      description: |
        PJFNK: Preconditioned Jacobian-Free Newton Krylov JFNK: Jacobian-Free Newton Krylov NEWTON: Full Newton Solve FD: Use finite differences to compute Jacobian LINEAR: Solving a linear problem
    - name: type
      required: No
      default: !!str PBP
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
  - name: /Preconditioning/SMP
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coupled_groups
      required: No
      default: !!str 
      cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
      group_name: 
      description: |
        List multiple space separated groups of comma separated variables. Off-diagonal jacobians will be generated for all pairs within a group.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: full
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true if you want the full set of couplings.  Simply for convenience so you don't have to set every off_diag_row and off_diag_column combination.
    - name: ksp_norm
      required: No
      default: !!str unpreconditioned
      cpp_type: MooseEnum
      group_name: 
      options: none preconditioned unpreconditioned natural default
      description: |
        Sets the norm that is used for convergence testing
    - name: mffd_type
      required: No
      default: !!str wp
      cpp_type: MooseEnum
      group_name: 
      options: wp ds
      description: |
        Specifies the finite differencing type for Jacobian-free solve types. Note that the default is wp (for Walker and Pernice).
    - name: off_diag_column
      required: No
      default: !!str 
      cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
      group_name: 
      description: |
        The off diagonal column you want to add into the matrix, it will be associated with an off diagonal row from the same position in off_diag_row.
    - name: off_diag_row
      required: No
      default: !!str 
      cpp_type: std::vector<NonlinearVariableName, std::allocator<NonlinearVariableName> >
      group_name: 
      description: |
        The off diagonal row you want to add into the matrix, it will be associated with an off diagonal column from the same position in off_diag_colum.
    - name: pc_side
      required: No
      default: !!str default
      cpp_type: MooseEnum
      group_name: 
      options: left right symmetric default
      description: |
        Preconditioning side
    - name: petsc_options
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: -dm_moose_print_embedding -dm_view -ksp_converged_reason -ksp_gmres_modifiedgramschmidt -ksp_monitor -ksp_monitor_snes_lg-snes_ksp_ew -ksp_snes_ew -snes_converged_reason -snes_ksp -snes_ksp_ew -snes_linesearch_monitor -snes_mf -snes_mf_operator -snes_monitor -snes_test_display -snes_view
      description: |
        Singleton PETSc options
    - name: petsc_options_iname
      required: No
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: -ksp_atol -ksp_gmres_restart -ksp_max_it -ksp_pc_side -ksp_rtol -ksp_type -mat_fd_coloring_err -mat_fd_type -mat_mffd_type -pc_asm_overlap -pc_factor_levels -pc_factor_mat_ordering_type -pc_hypre_boomeramg_grid_sweeps_all -pc_hypre_boomeramg_max_iter -pc_hypre_boomeramg_strong_threshold -pc_hypre_type -pc_type -snes_atol -snes_linesearch_type -snes_ls -snes_max_it -snes_rtol -snes_type -sub_ksp_type -sub_pc_type
      description: |
        Names of PETSc name/value pairs
    - name: petsc_options_value
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Values of PETSc name/value pairs (must correspond with "petsc_options_iname"
    - name: solve_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: PJFNK JFNK NEWTON FD LINEAR
      description: |
        PJFNK: Preconditioned Jacobian-Free Newton Krylov JFNK: Jacobian-Free Newton Krylov NEWTON: Full Newton Solve FD: Use finite differences to compute Jacobian LINEAR: Solving a linear problem
    - name: type
      required: No
      default: !!str SMP
      cpp_type: std::string
      group_name: 
      description: |
        
    subblocks:
- name: /Problem
  description: |
    
  parameters:
  - name: inactive
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      If specified blocks matching these identifiers will be skipped.
  - name: isObjectAction
    required: No
    default: !!str 1
    cpp_type: bool
    group_name: 
    description: |
      Indicates that this is a MooseObjectAction.
  - name: name
    required: No
    default: !!str MOOSE Problem
    cpp_type: std::string
    group_name: 
    description: |
      The name the problem
  - name: type
    required: Yes
    default: !!str FEProblem
    cpp_type: std::string
    group_name: 
    description: |
      Problem type
  - name: library_name
    required: No
    default: !!str 
    cpp_type: std::string
    group_name: 
    description: |
      The file name of the library (*.la file) that will be dynamically loaded.
  - name: library_path
    required: No
    default: !!str 
    cpp_type: std::string
    group_name: 
    description: |
      Path to search for dynamic libraries (please avoid committing absolute paths in addition to MOOSE_LIBRARY_PATH)
  - name: object_names
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      The names of the objects to register (Default: register all).
  - name: register_objects_from
    required: No
    default: !!str 
    cpp_type: std::vector<std::string, std::allocator<std::string> >
    group_name: 
    description: |
      The names of other applications from which objects will be registered from (dynamic registration).
  subblocks:
  - name: /Problem/<type>
    description: |
      
    parameters:
    subblocks:
    - name: /Problem/<type>/DisplacedProblem
      description: |
        
      parameters:
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: type
        required: No
        default: !!str DisplacedProblem
        cpp_type: std::string
        group_name: 
        description: |
          
      subblocks:
    - name: /Problem/<type>/DumpObjectsProblem
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          Block IDs for the coordinate systems
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: coord_type
        required: No
        default: !!str XYZ
        cpp_type: MultiMooseEnum
        group_name: 
        options: XYZ RZ RSPHERICAL
        description: |
          Type of the coordinate system per block param
      - name: dump_path
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          Syntax path of the action of which to dump the generated syntax
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: error_on_jacobian_nonzero_reallocation
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          This causes PETSc to error if it had to reallocate memory in the Jacobian matrix due to not having enough nonzeros
      - name: extra_tag_matrices
        required: No
        default: !!str 
        cpp_type: std::vector<TagName, std::allocator<TagName> >
        group_name: 
        description: |
          Extra matrices to add to the system that can be filled by objects which compute residuals and Jacobians (Kernels, BCs, etc.) by setting tags on them.
      - name: extra_tag_vectors
        required: No
        default: !!str 
        cpp_type: std::vector<TagName, std::allocator<TagName> >
        group_name: 
        description: |
          Extra vectors to add to the system that can be filled by objects which compute residuals and Jacobians (Kernels, BCs, etc.) by setting tags on them.
      - name: force_restart
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          EXPERIMENTAL: If true, a sub_app may use a restart file instead of using of using the master backup file
      - name: ignore_zeros_in_jacobian
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Do not explicitly store zero values in the Jacobian matrix if true
      - name: kernel_coverage_check
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Set to false to disable kernel->subdomain coverage check
      - name: material_coverage_check
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Set to false to disable material->subdomain coverage check
      - name: near_null_space_dimension
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          The dimension of the near nullspace
      - name: null_space_dimension
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          The dimension of the nullspace
      - name: parallel_barrier_messaging
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Displays messaging from parallel barrier notifications when executing or transferring to/from Multiapps (default: true)
      - name: restart_file_base
        required: No
        default: !!str 
        cpp_type: FileNameNoExtension
        group_name: 
        description: |
          File base name used for restart (e.g. <path>/<filebase> or <path>/LATEST to grab the latest file available)
      - name: rz_coord_axis
        required: No
        default: !!str Y
        cpp_type: MooseEnum
        group_name: 
        options: X Y
        description: |
          The rotation axis (X | Y) for axisymetric coordinates
      - name: skip_additional_restart_data
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          True to skip additional data in equation system for restart. It is useful for starting a transient calculation with a steady-state solution
      - name: skip_nl_system_check
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          True to skip the NonlinearSystem check for work to do (e.g. Make sure that there are variables to solve for).
      - name: solve
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Whether or not to actually solve the Nonlinear system.  This is handy in the case that all you want to do is execute AuxKernels, Transfers, etc. without actually solving anything
      - name: transpose_null_space_dimension
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          The dimension of the transpose nullspace
      - name: type
        required: No
        default: !!str DumpObjectsProblem
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: use_nonlinear
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Determines whether to use a Nonlinear vs a Eigenvalue system (Automatically determined based on executioner)
      subblocks:
    - name: /Problem/<type>/EigenProblem
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          Block IDs for the coordinate systems
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: coord_type
        required: No
        default: !!str XYZ
        cpp_type: MultiMooseEnum
        group_name: 
        options: XYZ RZ RSPHERICAL
        description: |
          Type of the coordinate system per block param
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: error_on_jacobian_nonzero_reallocation
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          This causes PETSc to error if it had to reallocate memory in the Jacobian matrix due to not having enough nonzeros
      - name: extra_tag_matrices
        required: No
        default: !!str 
        cpp_type: std::vector<TagName, std::allocator<TagName> >
        group_name: 
        description: |
          Extra matrices to add to the system that can be filled by objects which compute residuals and Jacobians (Kernels, BCs, etc.) by setting tags on them.
      - name: extra_tag_vectors
        required: No
        default: !!str 
        cpp_type: std::vector<TagName, std::allocator<TagName> >
        group_name: 
        description: |
          Extra vectors to add to the system that can be filled by objects which compute residuals and Jacobians (Kernels, BCs, etc.) by setting tags on them.
      - name: force_restart
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          EXPERIMENTAL: If true, a sub_app may use a restart file instead of using of using the master backup file
      - name: ignore_zeros_in_jacobian
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Do not explicitly store zero values in the Jacobian matrix if true
      - name: kernel_coverage_check
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Set to false to disable kernel->subdomain coverage check
      - name: material_coverage_check
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Set to false to disable material->subdomain coverage check
      - name: near_null_space_dimension
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          The dimension of the near nullspace
      - name: null_space_dimension
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          The dimension of the nullspace
      - name: parallel_barrier_messaging
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Displays messaging from parallel barrier notifications when executing or transferring to/from Multiapps (default: true)
      - name: restart_file_base
        required: No
        default: !!str 
        cpp_type: FileNameNoExtension
        group_name: 
        description: |
          File base name used for restart (e.g. <path>/<filebase> or <path>/LATEST to grab the latest file available)
      - name: rz_coord_axis
        required: No
        default: !!str Y
        cpp_type: MooseEnum
        group_name: 
        options: X Y
        description: |
          The rotation axis (X | Y) for axisymetric coordinates
      - name: skip_additional_restart_data
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          True to skip additional data in equation system for restart. It is useful for starting a transient calculation with a steady-state solution
      - name: skip_nl_system_check
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          True to skip the NonlinearSystem check for work to do (e.g. Make sure that there are variables to solve for).
      - name: solve
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Whether or not to actually solve the Nonlinear system.  This is handy in the case that all you want to do is execute AuxKernels, Transfers, etc. without actually solving anything
      - name: transpose_null_space_dimension
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          The dimension of the transpose nullspace
      - name: type
        required: No
        default: !!str EigenProblem
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: use_nonlinear
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Determines whether to use a Nonlinear vs a Eigenvalue system (Automatically determined based on executioner)
      subblocks:
    - name: /Problem/<type>/FEProblem
      description: |
        
      parameters:
      - name: block
        required: No
        default: !!str 
        cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
        group_name: 
        description: |
          Block IDs for the coordinate systems
      - name: control_tags
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 'Advanced'
        description: |
          Adds user-defined labels for accessing object parameters via control logic.
      - name: coord_type
        required: No
        default: !!str XYZ
        cpp_type: MultiMooseEnum
        group_name: 
        options: XYZ RZ RSPHERICAL
        description: |
          Type of the coordinate system per block param
      - name: enable
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 'Advanced'
        description: |
          Set the enabled status of the MooseObject.
      - name: error_on_jacobian_nonzero_reallocation
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          This causes PETSc to error if it had to reallocate memory in the Jacobian matrix due to not having enough nonzeros
      - name: extra_tag_matrices
        required: No
        default: !!str 
        cpp_type: std::vector<TagName, std::allocator<TagName> >
        group_name: 
        description: |
          Extra matrices to add to the system that can be filled by objects which compute residuals and Jacobians (Kernels, BCs, etc.) by setting tags on them.
      - name: extra_tag_vectors
        required: No
        default: !!str 
        cpp_type: std::vector<TagName, std::allocator<TagName> >
        group_name: 
        description: |
          Extra vectors to add to the system that can be filled by objects which compute residuals and Jacobians (Kernels, BCs, etc.) by setting tags on them.
      - name: force_restart
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          EXPERIMENTAL: If true, a sub_app may use a restart file instead of using of using the master backup file
      - name: ignore_zeros_in_jacobian
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          Do not explicitly store zero values in the Jacobian matrix if true
      - name: kernel_coverage_check
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Set to false to disable kernel->subdomain coverage check
      - name: material_coverage_check
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Set to false to disable material->subdomain coverage check
      - name: near_null_space_dimension
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          The dimension of the near nullspace
      - name: null_space_dimension
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          The dimension of the nullspace
      - name: parallel_barrier_messaging
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Displays messaging from parallel barrier notifications when executing or transferring to/from Multiapps (default: true)
      - name: restart_file_base
        required: No
        default: !!str 
        cpp_type: FileNameNoExtension
        group_name: 
        description: |
          File base name used for restart (e.g. <path>/<filebase> or <path>/LATEST to grab the latest file available)
      - name: rz_coord_axis
        required: No
        default: !!str Y
        cpp_type: MooseEnum
        group_name: 
        options: X Y
        description: |
          The rotation axis (X | Y) for axisymetric coordinates
      - name: skip_additional_restart_data
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          True to skip additional data in equation system for restart. It is useful for starting a transient calculation with a steady-state solution
      - name: skip_nl_system_check
        required: No
        default: !!str 0
        cpp_type: bool
        group_name: 
        description: |
          True to skip the NonlinearSystem check for work to do (e.g. Make sure that there are variables to solve for).
      - name: solve
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Whether or not to actually solve the Nonlinear system.  This is handy in the case that all you want to do is execute AuxKernels, Transfers, etc. without actually solving anything
      - name: transpose_null_space_dimension
        required: No
        default: !!str 0
        cpp_type: unsigned int
        group_name: 
        description: |
          The dimension of the transpose nullspace
      - name: type
        required: No
        default: !!str FEProblem
        cpp_type: std::string
        group_name: 
        description: |
          
      - name: use_nonlinear
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Determines whether to use a Nonlinear vs a Eigenvalue system (Automatically determined based on executioner)
      subblocks:
- name: /Samplers
  description: |
    
  parameters:
  subblocks:
  - name: /Samplers/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
- name: /ScalarKernels
  description: |
    
  parameters:
  subblocks:
  - name: /ScalarKernels/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /ScalarKernels/CoupledODETimeDerivative
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: type
      required: No
      default: !!str CoupledODETimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Coupled variable.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /ScalarKernels/GeneralizedPlaneStrain
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: generalized_plane_strain
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The name of the GeneralizedPlaneStrainUserObject
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: scalar_out_of_plane_strain_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index number of scalar_out_of_plane_strain this kernel acts on
    - name: type
      required: No
      default: !!str GeneralizedPlaneStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /ScalarKernels/GlobalStrain
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: global_strain_uo
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The name of the GlobalStrainUserObject
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: type
      required: No
      default: !!str GlobalStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /ScalarKernels/NodalEqualValueConstraint
    description: |
      
    parameters:
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs  from the mesh where this nodal kernel applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: nodes
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Supply nodes using node ids
    - name: type
      required: No
      default: !!str NodalEqualValueConstraint
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: var
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable(s) to put the constraint on
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /ScalarKernels/ODETimeDerivative
    description: |
      
    parameters:
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: type
      required: No
      default: !!str ODETimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    - name: vector_tags
      required: No
      default: !!str time
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
  - name: /ScalarKernels/ParsedODEKernel
    description: |
      
    parameters:
    - name: args
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        additional coupled variables
    - name: constant_expressions
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of values for the constants in constant_names (can be an FParser expression)
    - name: constant_names
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Vector of constants used in the parsed function (use this for kB etc.)
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: disable_fpoptimizer
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Disable the function parser algebraic optimizer
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_ad_cache
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable cacheing of function derivatives for faster startup time
    - name: enable_auto_optimize
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable automatic immediate optimization of derivatives
    - name: enable_jit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Enable just-in-time compilation of function expressions for faster evaluation
    - name: extra_matrix_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the matrices this Kernel should fill
    - name: extra_vector_tags
      required: No
      default: !!str 
      cpp_type: std::vector<TagName, std::allocator<TagName> >
      group_name: 'Tagging'
      description: |
        The extra tags for the vectors this Kernel should fill
    - name: fail_on_evalerror
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Fail fatally if a function evaluation returns an error code (otherwise just pass on NaN)
    - name: function
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        function expression
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: matrix_tags
      required: No
      default: !!str system
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime system
      description: |
        The tag for the matrices this Kernel should fill
    - name: type
      required: No
      default: !!str ParsedODEKernel
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: NonlinearVariableName
      group_name: 
      description: |
        The name of the variable that this kernel operates on
    - name: vector_tags
      required: No
      default: !!str nontime
      cpp_type: MultiMooseEnum
      group_name: 'Tagging'
      options: nontime time
      description: |
        The tag for the vectors this Kernel should fill
    subblocks:
- name: /Transfers
  description: |
    
  parameters:
  subblocks:
  - name: /Transfers/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /Transfers/MultiAppCopyTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: source_variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to transfer from.
    - name: type
      required: No
      default: !!str MultiAppCopyTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to store the transferred values in.
    subblocks:
  - name: /Transfers/MultiAppInterpolationTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: interp_type
      required: No
      default: !!str inverse_distance
      cpp_type: MooseEnum
      group_name: 
      options: inverse_distance radial_basis
      description: |
        The algorithm to use for interpolation.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: num_points
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of nearest points to use for interpolation.
    - name: power
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The polynomial power to use for calculation of the decay in the interpolation.
    - name: radius
      required: No
      default: !!str -1
      cpp_type: double
      group_name: 
      description: |
        Radius to use for radial_basis interpolation.  If negative then the radius is taken as the max distance between points.
    - name: source_variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to transfer from.
    - name: type
      required: No
      default: !!str MultiAppInterpolationTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The auxiliary variable to store the transferred values in.
    subblocks:
  - name: /Transfers/MultiAppMeshFunctionTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: error_on_miss
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to error in the case that a target point is not found in the source domain.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: source_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName, std::allocator<VariableName> >
      group_name: 
      description: |
        The variable to transfer from.
    - name: type
      required: No
      default: !!str MultiAppMeshFunctionTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The auxiliary variable to store the transferred values in.
    subblocks:
  - name: /Transfers/MultiAppNearestNodeTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: fixed_meshes
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true when the meshes are not changing (ie, no movement or adaptivity).  This will cache nearest node neighbors to greatly speed up the transfer.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: source_boundary
      required: No
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary we are transferring from (if not specified, whole domain is used).
    - name: source_variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to transfer from.
    - name: target_boundary
      required: No
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        The boundary we are transferring to (if not specified, whole domain is used).
    - name: type
      required: No
      default: !!str MultiAppNearestNodeTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The auxiliary variable to store the transferred values in.
    subblocks:
  - name: /Transfers/MultiAppPostprocessorInterpolationTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: interp_type
      required: No
      default: !!str inverse_distance
      cpp_type: MooseEnum
      group_name: 
      options: inverse_distance radial_basis
      description: |
        The algorithm to use for interpolation.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: num_points
      required: No
      default: !!str 3
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of nearest points to use for interpolation.
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The Postprocessor to interpolate.
    - name: power
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The polynomial power to use for calculation of the decay in the interpolation.
    - name: radius
      required: No
      default: !!str -1
      cpp_type: double
      group_name: 
      description: |
        Radius to use for radial_basis interpolation.  If negative then the radius is taken as the max distance between points.
    - name: type
      required: No
      default: !!str MultiAppPostprocessorInterpolationTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The auxiliary variable to store the transferred values in.
    subblocks:
  - name: /Transfers/MultiAppPostprocessorToAuxScalarTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: from_postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the Postprocessor in the Master to transfer the value from.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: to_aux_scalar
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of the scalar Aux variable in the MultiApp to transfer the value to.
    - name: type
      required: No
      default: !!str MultiAppPostprocessorToAuxScalarTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Transfers/MultiAppPostprocessorTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: from_postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the Postprocessor in the Master to transfer the value from.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: reduction_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: average sum maximum minimum
      description: |
        The type of reduction to perform to reduce postprocessor values from multiple SubApps to a single value
    - name: to_postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the Postprocessor in the MultiApp to transfer the value to.  This should most likely be a Reporter Postprocessor.
    - name: type
      required: No
      default: !!str MultiAppPostprocessorTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Transfers/MultiAppProjectionTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: fixed_meshes
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true when the meshes are not changing (ie, no movement or adaptivity).  This will cache some information to speed up the transfer.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: proj_type
      required: No
      default: !!str l2
      cpp_type: MooseEnum
      group_name: 
      options: l2
      description: |
        The type of the projection.
    - name: source_variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to transfer from.
    - name: type
      required: No
      default: !!str MultiAppProjectionTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The auxiliary variable to store the transferred values in.
    subblocks:
  - name: /Transfers/MultiAppScalarToAuxScalarTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: source_variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of the scalar variable in the MultiApp to transfer the value from.
    - name: to_aux_scalar
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of the scalar Aux variable in the MultiApp to transfer the value to.
    - name: type
      required: No
      default: !!str MultiAppScalarToAuxScalarTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Transfers/MultiAppUserObjectTransfer
    description: |
      
    parameters:
    - name: all_master_nodes_contained_in_sub_app
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true if every master node is mapped to a distinct point on one of the subApps during a transfer from sub App to Master App. If master node cannot be found within bounding boxes of any of the subApps, an error is generated.
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: type
      required: No
      default: !!str MultiAppUserObjectTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: user_object
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The UserObject you want to transfer values from.  Note: This might be a UserObject from your MultiApp's input file!
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The auxiliary variable to store the transferred values in.
    subblocks:
  - name: /Transfers/MultiAppVariableValueSamplePostprocessorTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor in the MultiApp to transfer the value to.  This should most likely be a Reporter Postprocessor.
    - name: source_variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to transfer from.
    - name: type
      required: No
      default: !!str MultiAppVariableValueSamplePostprocessorTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /Transfers/MultiAppVariableValueSampleTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: source_variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to transfer from.
    - name: type
      required: No
      default: !!str MultiAppVariableValueSampleTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        The auxiliary variable to store the transferred values in.
    subblocks:
  - name: /Transfers/MultiAppVectorPostprocessorTransfer
    description: |
      
    parameters:
    - name: check_multiapp_execute_on
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false the check between the multiapp and transfer execute on flags is not preformed.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: to_multiapp from_multiapp
      description: |
        Whether this Transfer will be 'to' or 'from' a MultiApp.
    - name: displaced_source_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the source mesh.
    - name: displaced_target_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to use the displaced mesh for the target mesh.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str SAME_AS_MULTIAPP
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM, SAME_AS_MULTIAPP.
    - name: multi_app
      required: Yes
      default: !!str 
      cpp_type: MultiAppName
      group_name: 
      description: |
        The name of the MultiApp to use.
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the Postprocessors on the sub-app to transfer from/to.
    - name: type
      required: No
      default: !!str MultiAppVectorPostprocessorTransfer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: vector_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Named vector quantity to transfer from/to in VectorPostprocessor.
    - name: vector_postprocessor
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The name of the VectorPostprocessor in the MultiApp to transfer values from/to.
    subblocks:
- name: /UserObjects
  description: |
    
  parameters:
  subblocks:
  - name: /UserObjects/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /UserObjects/AreaPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str AreaPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/AverageElementSize
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str AverageElementSize
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/AverageGrainVolume
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: feature_counter
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        number of grains to create
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str AverageGrainVolume
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    subblocks:
  - name: /UserObjects/AverageNodalVariableValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str AverageNodalVariableValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /UserObjects/AxisymmetricCenterlineAverageValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str AxisymmetricCenterlineAverageValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /UserObjects/CavityPressurePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: cavity_pressure_uo
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CavityPressureUserObject that computes the initial moles
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: quantity
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: initial_moles cavity_pressure
      description: |
        The quantity to report: initial_moles cavity_pressure
    - name: type
      required: No
      default: !!str CavityPressurePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/CavityPressureUserObject
    description: |
      
    parameters:
    - name: R
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The universal gas constant for the units used.
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: initial_pressure
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The initial pressure in the cavity.  If not given, a zero initial pressure will be used.
    - name: initial_temperature
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Initial temperature (optional)
    - name: material_input
      required: No
      default: !!str 
      cpp_type: std::vector<PostprocessorName, std::allocator<PostprocessorName> >
      group_name: 
      description: |
        The name of the postprocessor(s) that holds the amount of material injected into the cavity.
    - name: startup_time
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The amount of time during which the pressure will ramp from zero to its true value.
    - name: temperature
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the average temperature postprocessor value.
    - name: type
      required: No
      default: !!str CavityPressureUserObject
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: volume
      required: Yes
      default: !!str 
      cpp_type: std::vector<PostprocessorName, std::allocator<PostprocessorName> >
      group_name: 
      description: |
        The name of the postprocessor(s) that holds the value of the internal volume in the cavity
    subblocks:
  - name: /UserObjects/ChangeOverTimePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: change_with_respect_to_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Compute change with respect to initial value instead of previous value
    - name: compute_relative_change
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Compute magnitude of relative change instead of change
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor
    - name: take_absolute_value
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Option to take absolute value of change
    - name: type
      required: No
      default: !!str ChangeOverTimePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ChangeOverTimestepPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: change_with_respect_to_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Compute change with respect to initial value instead of previous value
    - name: compute_relative_change
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Compute magnitude of relative change instead of change
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor
    - name: take_absolute_value
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Option to take absolute value of change
    - name: type
      required: No
      default: !!str ChangeOverTimestepPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ComputeExternalGrainForceAndTorque
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration field
    - name: compute_jacobians
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Compute Jacobians for coupled variables
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled order parameters
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_density
      required: No
      default: !!str force_density
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Force density material
    - name: grain_data
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        center of mass of grains
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeExternalGrainForceAndTorque
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ComputeGrainForceAndTorque
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: c
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Concentration field
    - name: compute_jacobians
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Compute Jacobians for coupled variables
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: etas
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled order parameters
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_density
      required: No
      default: !!str force_density
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Force density material
    - name: grain_data
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        center of mass of grains
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ComputeGrainForceAndTorque
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ConservedMaskedNormalNoise
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_BEGIN
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: mask
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Material property to multiply the random numbers with
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ConservedMaskedNormalNoise
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ConservedMaskedUniformNoise
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_BEGIN
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: mask
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Material property to multiply the random numbers with
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ConservedMaskedUniformNoise
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ConservedNormalNoise
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_BEGIN
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ConservedNormalNoise
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ConservedUniformNoise
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_BEGIN
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ConservedUniformNoise
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ConstantGrainForceAndTorque
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        force acting on grains
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: torque
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        torque acting on grains
    - name: type
      required: No
      default: !!str ConstantGrainForceAndTorque
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/CrackFrontData
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: crack_front_point_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of the point on the crack front where data is to be reported
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        A scale factor to be applied to the reported quantity
    - name: type
      required: No
      default: !!str CrackFrontData
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of a variable whose value at the crack front is to be reported
    subblocks:
  - name: /UserObjects/CrackFrontDefinition
    description: |
      
    parameters:
    - name: 2d
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Treat body as two-dimensional
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: axis_2d
      required: No
      default: !!str 2
      cpp_type: unsigned int
      group_name: 
      description: |
        Out of plane axis for models treated as two-dimensional (0=x, 1=y, 2=z)
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: closed_loop
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set of points forms forms a closed loop
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crack_direction_method
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: CrackDirectionVector CrackMouth CurvedCrackFront
      description: |
        Method to determine direction of crack propagation.  Choices are: CrackDirectionVector CrackMouth CurvedCrackFront
    - name: crack_direction_vector
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Direction of crack propagation
    - name: crack_direction_vector_end_1
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Direction of crack propagation for the node at end 1 of the crack
    - name: crack_direction_vector_end_2
      required: No
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Direction of crack propagation for the node at end 2 of the crack
    - name: crack_end_direction_method
      required: No
      default: !!str NoSpecialTreatment
      cpp_type: MooseEnum
      group_name: 
      options: NoSpecialTreatment CrackDirectionVector
      description: |
        Method to determine direction of crack propagation at ends of crack.  Choices are: NoSpecialTreatment CrackDirectionVector
    - name: crack_front_points
      required: No
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        Set of points to define crack front
    - name: crack_front_points_provider
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The UserObject provides the crack front points from XFEM GeometricCutObject
    - name: crack_mouth_boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        Boundaries whose average coordinate defines the crack mouth
    - name: disp_x
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Variable containing the x displacement
    - name: disp_y
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Variable containing the y displacement
    - name: disp_z
      required: No
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Variable containing the z displacement
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: first_ring
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of rings of nodes to generate
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: intersecting_boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        Boundaries intersected by ends of crack
    - name: j_integral_radius_inner
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Radius for J-Integral calculation
    - name: j_integral_radius_outer
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Radius for J-Integral calculation
    - name: last_ring
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of rings of nodes to generate
    - name: nrings
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of rings of nodes to generate
    - name: number_points_from_provider
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of crack front points, only needed if crack_front_points_provider is used.
    - name: q_function_rings
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Generate rings of nodes for q-function
    - name: q_function_type
      required: No
      default: !!str Geometry
      cpp_type: MooseEnum
      group_name: 
      options: Geometry Topology
      description: |
        The method used to define the integration domain. Options are: Geometry Topology
    - name: symmetry_plane
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Account for a symmetry plane passing through the plane of the crack, normal to the specified axis (0=x, 1=y, 2=z)
    - name: t_stress
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Calculate T-stress
    - name: type
      required: No
      default: !!str CrackFrontDefinition
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/CrystalPlasticitySlipRateGSS
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: flowprops
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Parameters used in slip rate equations
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: num_slip_sys_flowrate_props
      required: No
      default: !!str 2
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of flow rate properties for a slip system
    - name: num_slip_sys_props
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of slip system specific properties provided in the file containing slip system normals and directions
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: slip_incr_tol
      required: No
      default: !!str 0.02
      cpp_type: double
      group_name: 
      description: |
        Maximum allowable slip in an increment
    - name: slip_sys_file_name
      required: Yes
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the slip system
    - name: slip_sys_flow_prop_file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the values of slip rate equation parameters
    - name: type
      required: No
      default: !!str CrystalPlasticitySlipRateGSS
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: uo_state_var_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name of state variable property: Same as state variable user object specified in input file.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable_size
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The userobject's variable size.
    subblocks:
  - name: /UserObjects/CrystalPlasticitySlipResistanceGSS
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str CrystalPlasticitySlipResistanceGSS
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: uo_state_var_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name of state variable property: Same as state variable user object specified in input file.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable_size
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The userobject's variable size.
    subblocks:
  - name: /UserObjects/CrystalPlasticityStateVarRateComponentGSS
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: hprops
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Hardening properties
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: slip_sys_hard_prop_file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the values of hardness evolution parameters
    - name: type
      required: No
      default: !!str CrystalPlasticityStateVarRateComponentGSS
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: uo_slip_rate_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name of slip rate property: Same as slip rate user object specified in input file.
    - name: uo_state_var_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name of state variable property: Same as state variable user object specified in input file.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable_size
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The userobject's variable size.
    subblocks:
  - name: /UserObjects/CrystalPlasticityStateVarRateComponentVoce
    description: |
      
    parameters:
    - name: GroupGroup_Hardening_group_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The group-to-group latent hardening coefficient q_abThis is a NxN vector i.e. '1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0' means non-coplanar slip systems in gr_11,22,33= 1.0, 5.0 and 9.0 respectively.latent hardening between for gr_12,13 = 2.0 3.0 respectively
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: coplanarHardening_group_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The coplanar latent hardening coefficient q_abcorresponding to each group i.e. '1.0 2.0 3.0' means 0-11 = 1.0, 12-23 = 2.0 and 24-48 = 3.0 
    - name: crystal_lattice_type
      required: No
      default: !!str FCC
      cpp_type: MooseEnum
      group_name: 
      options: FCC BCC
      description: |
        Type of crystal lattyce structure output
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: groups
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        To group the initial values on different slip systems 'format: [start end)', i.e.'0 12 24 48' groups 0-11, 12-23 and 24-48 
    - name: h0_group_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        h0 hardening constant for each group  i.e. '0.0 1.0 2.0' means 0-11 = 0.0, 12-23 = 1.0 and 24-48 = 2.0 
    - name: hardeningExponent_group_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The hardening exponent mcorresponding to each group i.e. '1.0 2.0 3.0' means 0-11 = 1.0, 12-23 = 2.0 and 24-48 = 3.0 
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: selfHardening_group_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The self hardening coefficient q_aacorresponding to each group i.e. '1.0 2.0 3.0' means 0-11 = 1.0, 12-23 = 2.0 and 24-48 = 3.0  usually these are all 1.
    - name: tau0_group_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The initial critical resolved shear stresscorresponding to each group i.e. '100.0 110.0 120.0' means 0-11 = 100.0, 12-23 = 110.0 and 24-48 = 120.0 
    - name: tauSat_group_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The saturation resolved shear stresscorresponding to each group i.e. '150.0 170.0 180.0' means 0-11 = 150.0, 12-23 = 170.0 and 24-48 = 180.0 
    - name: type
      required: No
      default: !!str CrystalPlasticityStateVarRateComponentVoce
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: uo_slip_rate_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name of slip rate property: Same as slip rate user object specified in input file.
    - name: uo_state_var_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name of state variable property: Same as state variable user object specified in input file.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable_size
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The userobject's variable size.
    subblocks:
  - name: /UserObjects/CrystalPlasticityStateVariable
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: group_values
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The initial values correspoinding to each group, i.e. '0.0 1.0 2.0' means 0-4 = 0.0, 4-8 = 1.0 and 8-12 = 2.0 
    - name: groups
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        To group the initial values on different slip systems 'format: [start end)', i.e.'0 4 8 11' groups 0-3, 4-7 and 8-11 
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: intvar_read_type
      required: No
      default: !!str inline_input
      cpp_type: MooseEnum
      group_name: 
      options: file_input inline_input user_input
      description: |
        Read from options for initial value of internal variables: Default from .i file
    - name: scale_factor
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Scale factor of individual component.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: state_variable_file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the file containing the initial values of slip system resistances
    - name: type
      required: No
      default: !!str CrystalPlasticityStateVariable
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: uo_state_var_evol_rate_comp_name
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Name of state variable evolution rate component property: Same as state variable evolution rate component user object specified in input file.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable_size
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The userobject's variable size.
    - name: zero
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Numerical zero for interval variable
    subblocks:
  - name: /UserObjects/CumulativeValuePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor
    - name: type
      required: No
      default: !!str CumulativeValuePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/DifferencePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str DifferencePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value1
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        First value
    - name: value2
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        Second value
    subblocks:
  - name: /UserObjects/DiscreteNucleationData
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: inserter
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        DiscreteNucleationInserter user object
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str DiscreteNucleationData
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: Yes
      default: !!str COUNT
      cpp_type: MooseEnum
      group_name: 
      options: COUNT UPDATE RATE INSERTIONS DELETIONS
      description: |
        Select to output number of active nuclei, wether a change to the nucleus list occurred, the total rate over the entire domain, and numbers of insertions and deletions applied to the nucleus list.
    subblocks:
  - name: /UserObjects/DiscreteNucleationFromFile
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: file
      required: Yes
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        CSV file with (time, x, y, z) coordinates for nucleation events.
    - name: hold_time
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Time to keep each nucleus active
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: tolerance
      required: No
      default: !!str 1e-09
      cpp_type: double
      group_name: 
      description: |
        Tolerance for determining insertion time
    - name: type
      required: No
      default: !!str DiscreteNucleationFromFile
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/DiscreteNucleationInserter
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: hold_time
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Time to keep each nucleus active
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: probability
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Probability density for inserting a discrete nucleus
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DiscreteNucleationInserter
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/DiscreteNucleationMap
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_BEGIN
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: inserter
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        DiscreteNucleationInserter user object
    - name: int_width
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Nucleus interface width for smooth nuclei
    - name: periodic
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Use the periodicity settings of this variable to populate the grain map
    - name: radius
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Radius for the inserted nuclei
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str DiscreteNucleationMap
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/DiscreteNucleationTimeStep
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: dt_max
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Time step to cut back to at the start of a nucleation event
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: inserter
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        DiscreteNucleationInserter user object
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: p2nucleus
      required: No
      default: !!str 0.01
      cpp_type: double
      group_name: 
      description: |
        Maximum probability for more than one nucleus to appear during a time step. This will limit the time step based on the total nucleation rate for the domain to make sure the probability for two or more nuclei to appear is always below the chosen number.
    - name: type
      required: No
      default: !!str DiscreteNucleationTimeStep
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/EBSDReader
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: custom_columns
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of additional custom data columns to read from the EBSD file
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: type
      required: No
      default: !!str EBSDReader
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ElementAverageSecondTimeDerivative
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementAverageSecondTimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/ElementAverageTimeDerivative
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementAverageTimeDerivative
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/ElementAverageValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementAverageValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/ElementExtremeValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementExtremeValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_type
      required: No
      default: !!str max
      cpp_type: MooseEnum
      group_name: 
      options: max min
      description: |
        Type of extreme value to return. 'max' returns the maximum value. 'min' returns the minimum value.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /UserObjects/ElementH1Error
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: p
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The exponent used in the norm.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementH1Error
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/ElementH1SemiError
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementH1SemiError
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/ElementIntegralMaterialProperty
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: mat_prop
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The name of the material property
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementIntegralMaterialProperty
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ElementIntegralVariablePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementIntegralVariablePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/ElementIntegralVariableUserObject
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementIntegralVariableUserObject
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/ElementL2Difference
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: other_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable to compare to
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementL2Difference
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/ElementL2Error
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementL2Error
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/ElementL2Norm
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementL2Norm
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/ElementPropertyReadFile
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: ngrain
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of grains
    - name: nprop
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of tabulated property values
    - name: prop_file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Name of the property file name
    - name: rand_seed
      required: No
      default: !!str 2000
      cpp_type: unsigned int
      group_name: 
      description: |
        random seed
    - name: read_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: element grain none
      description: |
        Type of property distribution: element:element by element property variation; grain:voronoi grain structure
    - name: rve_type
      required: No
      default: !!str none
      cpp_type: MooseEnum
      group_name: 
      options: periodic none
      description: |
        Periodic or non-periodic grain distribution: Default is non-periodic
    - name: type
      required: No
      default: !!str ElementPropertyReadFile
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ElementQualityChecker
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: failure_type
      required: No
      default: !!str WARNING
      cpp_type: MooseEnum
      group_name: 
      options: WARNING ERROR
      description: |
        The way how the failure of quality metric check should respond
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: lower_bound
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The lower bound for provided metric type
    - name: metric_type
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: ASPECT_RATIO SKEW SHEAR SHAPE MAX_ANGLE MIN_ANGLE CONDITION DISTORTION TAPER WARP STRETCH DIAGONAL ASPECT_RATIO_BETA ASPECT_RATIO_GAMMA SIZE JACOBIAN
      description: |
        Type of quality metric to be checked
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementQualityChecker
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: upper_bound
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        the upper bound for provided metric type
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ElementVectorL2Error
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function_x
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: function_y
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: function_z
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementVectorL2Error
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: var_x
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The FE solution in x direction
    - name: var_y
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The FE solution in y direction
    - name: var_z
      required: No
      default: !!str 0
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The FE solution in z direction
    subblocks:
  - name: /UserObjects/ElementW1pError
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: p
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        The exponent used in the norm.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementW1pError
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/ElementalVariableValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elementid
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The ID of the element where we monitor
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str ElementalVariableValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to be monitored
    subblocks:
  - name: /UserObjects/EmptyPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str EmptyPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/EulerAngleFileReader
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: file_name
      required: Yes
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        Euler angle data file name
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: type
      required: No
      default: !!str EulerAngleFileReader
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/EulerAngleUpdater
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: euler_angle_provider
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Name of Euler angle provider user object
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_torques_object
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Name of Euler angle provider user object
    - name: grain_tracker_object
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: grain_volumes
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The feature volume VectorPostprocessorValue.
    - name: rotation_constant
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Constant value characterizing grain rotation
    - name: type
      required: No
      default: !!str EulerAngleUpdater
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ExecutionerAttributeReporter
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str ExecutionerAttributeReporter
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/FauxGrainTracker
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 0.09
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: error_on_grain_creation
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Terminate with an error if a grain is created (does not include initial callback to start simulation)
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: halo_level
      required: No
      default: !!str 2
      cpp_type: unsigned short
      group_name: 
      description: |
        The thickness of the halo surrounding each feature.
    - name: max_remap_recursion_depth
      required: No
      default: !!str 6
      cpp_type: unsigned short
      group_name: 'Advanced'
      description: |
        The recursion depth allowed when searching for remapping candidates. Note: Setting this value high may result in very computationally expensive searches with little benefit. (Recommended level: 6)
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: polycrystal_ic_uo
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Optional: Polycrystal IC object
    - name: remap_grains
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates whether remapping should be done or not (default: true)
    - name: reserve_op
      required: No
      default: !!str 0
      cpp_type: unsigned short
      group_name: 
      description: |
        Indicates the number of reserved ops (variables that cannot be remapped to)
    - name: reserve_op_threshold
      required: No
      default: !!str 0.95
      cpp_type: double
      group_name: 
      description: |
        Threshold for locating a new feature on the reserved op variable(s)
    - name: threshold
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: tolerate_failure
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Allow the grain tracker to continue when it fails to find suitable grains for remapping. This will allow the simulation to continue but it will also allow non-physical grain coalesnce. DO NOT USE for production results!
    - name: tracking_step
      required: No
      default: !!str 0
      cpp_type: int
      group_name: 
      description: |
        The timestep for when we should start tracking grains
    - name: type
      required: No
      default: !!str FauxGrainTracker
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: verbosity_level
      required: No
      default: !!str 1
      cpp_type: short
      group_name: 
      description: |
        Level 0: Silent during normal operation, Level 1: Informational messages but no detailed grain structure printouts, Level 2: Verbose output including data structure dumps, Level 3: Debugging mode.
    subblocks:
  - name: /UserObjects/FeatureFloodCount
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: threshold
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: type
      required: No
      default: !!str FeatureFloodCount
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The variable(s) for which to find connected regions of interests, i.e. "features".
    subblocks:
  - name: /UserObjects/FeatureVolumeFraction
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: equil_fraction
      required: No
      default: !!str -1
      cpp_type: double
      group_name: 
      description: |
        Equilibrium volume fraction of 2nd phase for Avrami analysis
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: feature_volumes
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The feature volume VectorPostprocessorValue.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: mesh_volume
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        Postprocessor from which to get mesh volume
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str FeatureVolumeFraction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_type
      required: No
      default: !!str VOLUME_FRACTION
      cpp_type: MooseEnum
      group_name: 
      options: VOLUME_FRACTION AVRAMI
      description: |
        The value to output (VOLUME_FRACTION or AVRAMI value)
    subblocks:
  - name: /UserObjects/FindValueOnLine
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: depth
      required: No
      default: !!str 36
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of bisections to perform.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_point
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        End point of the sampling line.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: start_point
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Start point of the sampling line.
    - name: target
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Target value to locate.
    - name: tol
      required: No
      default: !!str 1e-10
      cpp_type: double
      group_name: 
      description: |
        Stop search if a value is found that is equal to the target with this tolerance applied.
    - name: type
      required: No
      default: !!str FindValueOnLine
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable to inspect
    subblocks:
  - name: /UserObjects/FunctionSideIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: No
      default: !!str 1
      cpp_type: FunctionName
      group_name: 
      description: |
        This postprocessor will return the integral of this function over the boundary
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str FunctionSideIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/FunctionValuePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The function which supplies the postprocessor value.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: point
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        A point in space to be given to the function Default: (0, 0, 0)
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        A scale factor to be applied to the function
    - name: type
      required: No
      default: !!str FunctionValuePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/GeneralizedPlaneStrainUserObject
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material properties base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scale factor applied to prescribed pressure
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: out_of_plane_direction
      required: No
      default: !!str z
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the out-of-plane strain.
    - name: out_of_plane_pressure
      required: No
      default: !!str 0
      cpp_type: FunctionName
      group_name: 
      description: |
        Function used to prescribe pressure in the out-of-plane direction
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: subblock_index_provider
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        SubblockIndexProvider user object name
    - name: type
      required: No
      default: !!str GeneralizedPlaneStrainUserObject
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/GeometrySphere
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        List of boundaries whose nodes are snapped to a given geometry
    - name: center
      required: No
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Sphere center
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: radius
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Sphere radius
    - name: type
      required: No
      default: !!str GeometrySphere
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/GlobalStrainUserObject
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: applied_stress_tensor
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Vector of values defining the constant applied stress to add, in order 11, 22, 33, 23, 13, 12
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Material properties base name
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: displacements
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the displacement variables
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str LINEAR
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str GlobalStrainUserObject
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/GrainBoundaryArea
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: grains_per_side
      required: No
      default: !!str 2
      cpp_type: double
      group_name: 
      description: |
        Number of order parameters contacting a boundary (should be 2.0 in polycrystals and 1.0 for dispersed particles)
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: op_range
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Range over which order parameters change across an interface. By default order parameters are assumed to vary from 0 to 1
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str GrainBoundaryArea
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: v
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    subblocks:
  - name: /UserObjects/GrainForceAndTorqueSum
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_forces
      required: No
      default: !!str 
      cpp_type: std::vector<UserObjectName, std::allocator<UserObjectName> >
      group_name: 
      description: |
        List of names of user objects that provides forces and torques applied to grains
    - name: grain_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of grains
    - name: type
      required: No
      default: !!str GrainForceAndTorqueSum
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/GrainTracker
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 0.09
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: error_on_grain_creation
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Terminate with an error if a grain is created (does not include initial callback to start simulation)
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: halo_level
      required: No
      default: !!str 2
      cpp_type: unsigned short
      group_name: 
      description: |
        The thickness of the halo surrounding each feature.
    - name: max_remap_recursion_depth
      required: No
      default: !!str 6
      cpp_type: unsigned short
      group_name: 'Advanced'
      description: |
        The recursion depth allowed when searching for remapping candidates. Note: Setting this value high may result in very computationally expensive searches with little benefit. (Recommended level: 6)
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: polycrystal_ic_uo
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Optional: Polycrystal IC object
    - name: remap_grains
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates whether remapping should be done or not (default: true)
    - name: reserve_op
      required: No
      default: !!str 0
      cpp_type: unsigned short
      group_name: 
      description: |
        Indicates the number of reserved ops (variables that cannot be remapped to)
    - name: reserve_op_threshold
      required: No
      default: !!str 0.95
      cpp_type: double
      group_name: 
      description: |
        Threshold for locating a new feature on the reserved op variable(s)
    - name: threshold
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: tolerate_failure
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Allow the grain tracker to continue when it fails to find suitable grains for remapping. This will allow the simulation to continue but it will also allow non-physical grain coalesnce. DO NOT USE for production results!
    - name: tracking_step
      required: No
      default: !!str 0
      cpp_type: int
      group_name: 
      description: |
        The timestep for when we should start tracking grains
    - name: type
      required: No
      default: !!str GrainTracker
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: verbosity_level
      required: No
      default: !!str 1
      cpp_type: short
      group_name: 
      description: |
        Level 0: Silent during normal operation, Level 1: Informational messages but no detailed grain structure printouts, Level 2: Verbose output including data structure dumps, Level 3: Debugging mode.
    subblocks:
  - name: /UserObjects/GrainTrackerElasticity
    description: |
      
    parameters:
    - name: C_ijkl
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Unrotated stiffness tensor
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 0.09
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: error_on_grain_creation
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Terminate with an error if a grain is created (does not include initial callback to start simulation)
    - name: euler_angle_provider
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Name of Euler angle provider user object
    - name: execute_on
      required: No
      default: !!str INITIAL TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: fill_method
      required: No
      default: !!str symmetric9
      cpp_type: MooseEnum
      group_name: 
      options: antisymmetric symmetric9 symmetric21 general_isotropic symmetric_isotropic symmetric_isotropic_E_nu antisymmetric_isotropic axisymmetric_rz general principal
      description: |
        The fill method
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: halo_level
      required: No
      default: !!str 2
      cpp_type: unsigned short
      group_name: 
      description: |
        The thickness of the halo surrounding each feature.
    - name: max_remap_recursion_depth
      required: No
      default: !!str 6
      cpp_type: unsigned short
      group_name: 'Advanced'
      description: |
        The recursion depth allowed when searching for remapping candidates. Note: Setting this value high may result in very computationally expensive searches with little benefit. (Recommended level: 6)
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: polycrystal_ic_uo
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Optional: Polycrystal IC object
    - name: random_rotations
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Generate random rotations when the Euler Angle provider runs out of data (otherwise error out)
    - name: remap_grains
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates whether remapping should be done or not (default: true)
    - name: reserve_op
      required: No
      default: !!str 0
      cpp_type: unsigned short
      group_name: 
      description: |
        Indicates the number of reserved ops (variables that cannot be remapped to)
    - name: reserve_op_threshold
      required: No
      default: !!str 0.95
      cpp_type: double
      group_name: 
      description: |
        Threshold for locating a new feature on the reserved op variable(s)
    - name: threshold
      required: No
      default: !!str 0.1
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: tolerate_failure
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Allow the grain tracker to continue when it fails to find suitable grains for remapping. This will allow the simulation to continue but it will also allow non-physical grain coalesnce. DO NOT USE for production results!
    - name: tracking_step
      required: No
      default: !!str 0
      cpp_type: int
      group_name: 
      description: |
        The timestep for when we should start tracking grains
    - name: type
      required: No
      default: !!str GrainTrackerElasticity
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: verbosity_level
      required: No
      default: !!str 1
      cpp_type: short
      group_name: 
      description: |
        Level 0: Silent during normal operation, Level 1: Informational messages but no detailed grain structure printouts, Level 2: Verbose output including data structure dumps, Level 3: Debugging mode.
    subblocks:
  - name: /UserObjects/HEVPEqvPlasticStrain
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: intvar_rate_prop_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name of internal variable property: Same as internal variable rate user object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str HEVPEqvPlasticStrain
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/HEVPEqvPlasticStrainRate
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: flow_rate_prop_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name of flow rate property: Same as the flow rate user object name specified in input file
    - name: h_scaling
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Scaling parameter
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str HEVPEqvPlasticStrainRate
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/HEVPFlowRatePowerLawJ2
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: base_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Base name of tensor properties to fetch
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: flow_rate_exponent
      required: No
      default: !!str 10
      cpp_type: double
      group_name: 
      description: |
        Power law exponent in flow rate equation
    - name: flow_rate_tol
      required: No
      default: !!str 1000
      cpp_type: double
      group_name: 
      description: |
        Tolerance for flow rate
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: reference_flow_rate
      required: No
      default: !!str 0.001
      cpp_type: double
      group_name: 
      description: |
        Reference flow rate for rate dependent flow
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: strength_prop_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name of strength property: Same as strength user object specified in input file
    - name: type
      required: No
      default: !!str HEVPFlowRatePowerLawJ2
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/HEVPLinearHardening
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: intvar_prop_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name of internal variable property to calculate material resistance: Same as internal variable user object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: slope
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Linear hardening slope
    - name: type
      required: No
      default: !!str HEVPLinearHardening
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_stress
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Yield strength
    subblocks:
  - name: /UserObjects/HEVPRambergOsgoodHardening
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: hardening_exponent
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The hardening exponent value
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: intvar_prop_name
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Name of internal variable property to calculate material resistance: Same as internal variable user object
    - name: reference_plastic_strain
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Reference plastic strain value
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str HEVPRambergOsgoodHardening
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_stress
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Yield strength
    subblocks:
  - name: /UserObjects/InteractionIntegral
    description: |
      
    parameters:
    - name: K_factor
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Conversion factor between interaction integral and stress intensity factor K
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: crack_front_point_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of the point on the crack front corresponding to this q function
    - name: displacements
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The displacements appropriate for the simulation geometry and coordinate system
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poissons_ratio
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Poisson's ratio for the material.
    - name: q_function_type
      required: No
      default: !!str Geometry
      cpp_type: MooseEnum
      group_name: 
      options: Geometry Topology
      description: |
        The method used to define the integration domain. Options are: Geometry Topology
    - name: ring_first
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The first ring of elements for volume integral domain
    - name: ring_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Ring ID
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: sif_mode
      required: Yes
      default: !!str KI
      cpp_type: MooseEnum
      group_name: 
      options: KI KII KIII T
      description: |
        Stress intensity factor to calculate. Choices are: KI KII KIII T
    - name: symmetry_plane
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Account for a symmetry plane passing through the plane of the crack, normal to the specified axis (0=x, 1=y, 2=z)
    - name: temperature
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The temperature (optional). Must be provided to correctly compute stress intensity factors in models with thermal strain gradients.
    - name: type
      required: No
      default: !!str InteractionIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: youngs_modulus
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Young's modulus of the material.
    subblocks:
  - name: /UserObjects/JIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: convert_J_to_K
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Convert J-integral to stress intensity factor K.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: crack_front_point_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index of the point on the crack front corresponding to this q function
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poissons_ratio
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Poisson's ratio
    - name: q_function_type
      required: No
      default: !!str Geometry
      cpp_type: MooseEnum
      group_name: 
      options: Geometry Topology
      description: |
        The method used to define the integration domain. Options are: Geometry Topology
    - name: ring_first
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        First Ring ID
    - name: ring_index
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Ring ID
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: symmetry_plane
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Account for a symmetry plane passing through the plane of the crack, normal to the specified axis (0=x, 1=y, 2=z)
    - name: type
      required: No
      default: !!str JIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: youngs_modulus
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Young's modulus of the material.
    subblocks:
  - name: /UserObjects/LayeredAverage
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: average_radius
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        When using 'average' sampling this is how the number of values both above and below the layer that will be averaged.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: bounds
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The 'bounding' positions of the layers i.e.: '0, 1.2, 3.7, 4.2' will mean 3 layers between those positions.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cumulative
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the value in each layer is the sum of the values up to and including that layer
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the layers.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: num_layers
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of layers.
    - name: sample_type
      required: No
      default: !!str direct
      cpp_type: MooseEnum
      group_name: 
      options: direct interpolate average
      description: |
        How to sample the layers.  'direct' means get the value of the layer the point falls in directly (or average if that layer has no value).  'interpolate' does a linear interpolation between the two closest layers.  'average' averages the two closest layers.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str LayeredAverage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/LayeredIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: average_radius
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        When using 'average' sampling this is how the number of values both above and below the layer that will be averaged.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: bounds
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The 'bounding' positions of the layers i.e.: '0, 1.2, 3.7, 4.2' will mean 3 layers between those positions.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cumulative
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the value in each layer is the sum of the values up to and including that layer
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the layers.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: num_layers
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of layers.
    - name: sample_type
      required: No
      default: !!str direct
      cpp_type: MooseEnum
      group_name: 
      options: direct interpolate average
      description: |
        How to sample the layers.  'direct' means get the value of the layer the point falls in directly (or average if that layer has no value).  'interpolate' does a linear interpolation between the two closest layers.  'average' averages the two closest layers.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str LayeredIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/LayeredSideAverage
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: average_radius
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        When using 'average' sampling this is how the number of values both above and below the layer that will be averaged.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bounds
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The 'bounding' positions of the layers i.e.: '0, 1.2, 3.7, 4.2' will mean 3 layers between those positions.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cumulative
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the value in each layer is the sum of the values up to and including that layer
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the layers.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: num_layers
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of layers.
    - name: sample_type
      required: No
      default: !!str direct
      cpp_type: MooseEnum
      group_name: 
      options: direct interpolate average
      description: |
        How to sample the layers.  'direct' means get the value of the layer the point falls in directly (or average if that layer has no value).  'interpolate' does a linear interpolation between the two closest layers.  'average' averages the two closest layers.
    - name: type
      required: No
      default: !!str LayeredSideAverage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /UserObjects/LayeredSideFluxAverage
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: average_radius
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        When using 'average' sampling this is how the number of values both above and below the layer that will be averaged.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bounds
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The 'bounding' positions of the layers i.e.: '0, 1.2, 3.7, 4.2' will mean 3 layers between those positions.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cumulative
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the value in each layer is the sum of the values up to and including that layer
    - name: diffusivity
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the diffusivity material property that will be used in the flux computation.
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the layers.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: num_layers
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of layers.
    - name: sample_type
      required: No
      default: !!str direct
      cpp_type: MooseEnum
      group_name: 
      options: direct interpolate average
      description: |
        How to sample the layers.  'direct' means get the value of the layer the point falls in directly (or average if that layer has no value).  'interpolate' does a linear interpolation between the two closest layers.  'average' averages the two closest layers.
    - name: type
      required: No
      default: !!str LayeredSideFluxAverage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /UserObjects/LayeredSideIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: average_radius
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        When using 'average' sampling this is how the number of values both above and below the layer that will be averaged.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: bounds
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The 'bounding' positions of the layers i.e.: '0, 1.2, 3.7, 4.2' will mean 3 layers between those positions.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cumulative
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the value in each layer is the sum of the values up to and including that layer
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the layers.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: num_layers
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of layers.
    - name: sample_type
      required: No
      default: !!str direct
      cpp_type: MooseEnum
      group_name: 
      options: direct interpolate average
      description: |
        How to sample the layers.  'direct' means get the value of the layer the point falls in directly (or average if that layer has no value).  'interpolate' does a linear interpolation between the two closest layers.  'average' averages the two closest layers.
    - name: type
      required: No
      default: !!str LayeredSideIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /UserObjects/LinearCombinationPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: b
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Additional value to add to sum
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: pp_coefs
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        List of linear combination coefficients for each post-processor
    - name: pp_names
      required: Yes
      default: !!str 
      cpp_type: std::vector<PostprocessorName, std::allocator<PostprocessorName> >
      group_name: 
      description: |
        List of post-processors
    - name: type
      required: No
      default: !!str LinearCombinationPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/LinearViscoelasticityManager
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: creep_strain_name
      required: No
      default: !!str creep_strain
      cpp_type: std::string
      group_name: 
      description: |
        name of the creep strain tensor used for the viscoelastic update
    - name: elastic_strain_name
      required: No
      default: !!str elastic_strain
      cpp_type: std::string
      group_name: 
      description: |
        name of the elastic strain tensor used for the viscoelastic update
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: stress_name
      required: No
      default: !!str stress
      cpp_type: std::string
      group_name: 
      description: |
        name of the stress tensor used for the viscoelastic update
    - name: type
      required: No
      default: !!str LinearViscoelasticityManager
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: viscoelastic_model
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        name of the LinearViscoelasticityBase object to manage
    subblocks:
  - name: /UserObjects/MaskedGrainForceAndTorque
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_force
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        userobject for getting force and torque acting on grains
    - name: pinned_grains
      required: No
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Grain numbers for pinned grains
    - name: type
      required: No
      default: !!str MaskedGrainForceAndTorque
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/Mass
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str Mass
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/MaterialTensorIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: index_i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ij for the tensor to output (0, 1, 2)
    - name: index_j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ij for the tensor to output (0, 1, 2)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: rank_two_tensor
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The rank two material tensor name
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialTensorIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/MaterialTimeStepPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elements_changed
      required: No
      default: !!str 
      cpp_type: int
      group_name: 
      description: |
        Maximum number of elements within which the property named in 'elements_changed_property' is allowed to change by more than 'elements_changed_threshold' before the time step is limited.
    - name: elements_changed_property
      required: No
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        Name of the material property used to limit the time step if its value changes by more than 'elements_changed_threshold' in at least 'elements_changed' elements
    - name: elements_changed_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Maximum permitted change in the value of 'elements_changed_property' in 'elements_changed' elements before the time step is limited.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialTimeStepPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_material_timestep_limit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        if true, the time step is limited by the minimum value of the matl_timestep_limit property
    subblocks:
  - name: /UserObjects/MemoryUsage
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: mem_type
      required: No
      default: !!str physical_memory
      cpp_type: MooseEnum
      group_name: 
      options: physical_memory virtual_memory page_faults
      description: |
        Memory metric to report.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: report_peak_value
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        If the postprocessor is executed more than once during a time step, report the aggregated peak value.
    - name: type
      required: No
      default: !!str MemoryUsage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_type
      required: No
      default: !!str total
      cpp_type: MooseEnum
      group_name: 
      options: total average max_process min_process
      description: |
        Aggregation method to apply to the requested memory metric.
    subblocks:
  - name: /UserObjects/MixedModeEquivalentK
    description: |
      
    parameters:
    - name: KIII_name
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the KIII postprocessor
    - name: KII_name
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the KII postprocessor
    - name: KI_name
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the KI postprocessor
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: poissons_ratio
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Poisson's ratio for the material.
    - name: type
      required: No
      default: !!str MixedModeEquivalentK
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/NearestPointLayeredAverage
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: average_radius
      required: No
      default: !!str 1
      cpp_type: unsigned int
      group_name: 
      description: |
        When using 'average' sampling this is how the number of values both above and below the layer that will be averaged.
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: bounds
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The 'bounding' positions of the layers i.e.: '0, 1.2, 3.7, 4.2' will mean 3 layers between those positions.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: cumulative
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When true the value in each layer is the sum of the values up to and including that layer
    - name: direction
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z
      description: |
        The direction of the layers.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: num_layers
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of layers.
    - name: points
      required: No
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        Computations will be lumped into values at these points.
    - name: points_file
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        A filename that should be looked in for points. Each set of 3 values in that file will represent a Point.  This and 'points' cannot be both supplied.
    - name: sample_type
      required: No
      default: !!str direct
      cpp_type: MooseEnum
      group_name: 
      options: direct interpolate average
      description: |
        How to sample the layers.  'direct' means get the value of the layer the point falls in directly (or average if that layer has no value).  'interpolate' does a linear interpolation between the two closest layers.  'average' averages the two closest layers.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NearestPointLayeredAverage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/NodalExtremeValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalExtremeValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_type
      required: No
      default: !!str max
      cpp_type: MooseEnum
      group_name: 
      options: max min
      description: |
        Type of extreme value to return. 'max' returns the maximum value. 'min' returns the minimum value.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /UserObjects/NodalL2Error
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalL2Error
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /UserObjects/NodalL2Norm
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalL2Norm
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /UserObjects/NodalMaxValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalMaxValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /UserObjects/NodalNormalsCorner
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: corner_boundary
      required: Yes
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        Node set ID which contains the nodes that are in 'corners'.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: type
      required: No
      default: !!str NodalNormalsCorner
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/NodalNormalsEvaluator
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str ANY_BLOCK_ID 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalNormalsEvaluator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/NodalNormalsPreprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: corner_boundary
      required: No
      default: !!str 
      cpp_type: BoundaryName
      group_name: 
      description: |
        Node set ID which contains the nodes that are in 'corners'.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: surface_boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs where nodal normals are computed
    - name: type
      required: No
      default: !!str NodalNormalsPreprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/NodalProxyMaxValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalProxyMaxValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /UserObjects/NodalSum
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str NodalSum
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on
    subblocks:
  - name: /UserObjects/NodalVariableValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: nodeid
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The ID of the node where we monitor
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scale_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        A scale factor to be applied to the variable
    - name: type
      required: No
      default: !!str NodalVariableValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The variable to be monitored
    subblocks:
  - name: /UserObjects/NumDOFs
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: system
      required: No
      default: !!str ALL
      cpp_type: MooseEnum
      group_name: 
      options: NL AUX ALL
      description: |
        The system(s) for which you want to retrieve the number of DOFs (NL, AUX, ALL). Default == ALL
    - name: type
      required: No
      default: !!str NumDOFs
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/NumElems
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elem_filter
      required: No
      default: !!str active
      cpp_type: MooseEnum
      group_name: 
      options: active total
      description: |
        The type of elements to include in the count (active, total). Default == active
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumElems
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/NumLinearIterations
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumLinearIterations
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/NumNodes
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumNodes
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/NumNonlinearIterations
    description: |
      
    parameters:
    - name: accumulate_over_step
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When set to true, accumulates to count the total over all Picard iterations for each step
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumNonlinearIterations
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/NumPicardIterations
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumPicardIterations
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/NumResidualEvaluations
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str NumResidualEvaluations
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/NumVars
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: system
      required: No
      default: !!str ALL
      cpp_type: MooseEnum
      group_name: 
      options: NL AUX ALL
      description: |
        The system(s) for which you want to retrieve the number of variables (NL, AUX, ALL). Default == ALL
    - name: type
      required: No
      default: !!str NumVars
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/PFCElementEnergyIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: temp
      required: No
      default: !!str 1833
      cpp_type: double
      group_name: 
      description: |
        Temperature of simulation
    - name: type
      required: No
      default: !!str PFCElementEnergyIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/PercentChangePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor used for exit criterion
    - name: type
      required: No
      default: !!str PercentChangePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/PerfGraphData
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: data_type
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: SELF CHILDREN TOTAL SELF_AVG CHILDREN_AVG TOTAL_AVG SELF_PERCENT CHILDREN_PERCENT TOTAL_PERCENT CALLS
      description: |
        The type of data to retrieve for the section_name
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: section_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the section to get data for
    - name: type
      required: No
      default: !!str PerfGraphData
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/PerflogDumper
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str FINAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outfile
      required: No
      default: !!str perflog.csv
      cpp_type: std::string
      group_name: 
      description: |
        name of perf log output file
    - name: type
      required: No
      default: !!str PerflogDumper
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/PerformanceData
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: category
      required: No
      default: !!str Execution
      cpp_type: MooseEnum
      group_name: 
      options: Application Execution Output Setup Utility
      description: |
        The category for the event
    - name: column
      required: No
      default: !!str total_time_with_sub
      cpp_type: MooseEnum
      group_name: 
      options: n_calls total_time average_time total_time_with_sub average_time_with_sub percent_of_active_time percent_of_active_time_with_sub
      description: |
        The column you want the value of (Default: total_time_with_sub).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: event
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: ACTIVE ALIVE solve() compute_residual() compute_jacobian()
      description: |
        The name or "label" of the event. Must match event name exactly including parenthesis if applicable. ("ALIVE" and "ACTIVE" are also valid events, category and column are ignored for these cases).
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str PerformanceData
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/PointValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: point
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The physical point where the solution will be evaluated.
    - name: type
      required: No
      default: !!str PointValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of the variable that this postprocessor operates on.
    subblocks:
  - name: /UserObjects/PolycrystalCircles
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coloring_algorithm
      required: No
      default: !!str jp
      cpp_type: MooseEnum
      group_name: 
      options: jp power greedy bt
      description: |
        The grain neighbor graph coloring algorithm to use: "jp" (DEFAULT) Jones and Plassmann, an efficient coloring algorithm, "power" an alternative stochastic algorithm, "greedy", a greedy assignment algorithm with stochastic updates to guarantee a valid coloring, "bt", a back tracking algorithm that produces good distributions but may experience exponential run time in the worst case scenario (works well on medium to large 2D problems)
    - name: columnar_3D
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        3D microstructure will be columnar in the z-direction?
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: execute_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File containing circle centers and radii
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_adjacency_matrix
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output the Grain Adjacency Matrix used in the coloring algorithms. Additionally, the grain to OP assignments will be printed
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: radii
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The radius for each circle
    - name: read_from_file
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to read the position and radius vectors from a file rather than inputing them manually
    - name: threshold
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: type
      required: No
      default: !!str PolycrystalCircles
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: x_positions
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        x coordinate for each circle center
    - name: y_positions
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        y coordinate for each circle center
    - name: z_positions
      required: No
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        z coordinate for each circle center
    subblocks:
  - name: /UserObjects/PolycrystalEBSD
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coloring_algorithm
      required: No
      default: !!str jp
      cpp_type: MooseEnum
      group_name: 
      options: jp power greedy bt
      description: |
        The grain neighbor graph coloring algorithm to use: "jp" (DEFAULT) Jones and Plassmann, an efficient coloring algorithm, "power" an alternative stochastic algorithm, "greedy", a greedy assignment algorithm with stochastic updates to guarantee a valid coloring, "bt", a back tracking algorithm that produces good distributions but may experience exponential run time in the worst case scenario (works well on medium to large 2D problems)
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: ebsd_reader
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        EBSD Reader for initial condition
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: execute_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_adjacency_matrix
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output the Grain Adjacency Matrix used in the coloring algorithms. Additionally, the grain to OP assignments will be printed
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: phase
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The phase to use for all queries. (Default: 0 ALL)
    - name: threshold
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: type
      required: No
      default: !!str PolycrystalEBSD
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    subblocks:
  - name: /UserObjects/PolycrystalHex
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coloring_algorithm
      required: No
      default: !!str jp
      cpp_type: MooseEnum
      group_name: 
      options: jp power greedy bt
      description: |
        The grain neighbor graph coloring algorithm to use: "jp" (DEFAULT) Jones and Plassmann, an efficient coloring algorithm, "power" an alternative stochastic algorithm, "greedy", a greedy assignment algorithm with stochastic updates to guarantee a valid coloring, "bt", a back tracking algorithm that produces good distributions but may experience exponential run time in the worst case scenario (works well on medium to large 2D problems)
    - name: columnar_3D
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        3D microstructure will be columnar in the z-direction?
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: execute_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File containing grain centroids, if file_name is provided, the centroids from the file will be used.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_num
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of grains being represented by the order parameters
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_adjacency_matrix
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output the Grain Adjacency Matrix used in the coloring algorithms. Additionally, the grain to OP assignments will be printed
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: perturbation_percent
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The percent to randomly perturb centers of grains relative to the size of the grain
    - name: rand_seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The random seed
    - name: threshold
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: type
      required: No
      default: !!str PolycrystalHex
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    - name: x_offset
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        Specifies offset of hexagon grid in x-direction
    subblocks:
  - name: /UserObjects/PolycrystalVoronoi
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: coloring_algorithm
      required: No
      default: !!str jp
      cpp_type: MooseEnum
      group_name: 
      options: jp power greedy bt
      description: |
        The grain neighbor graph coloring algorithm to use: "jp" (DEFAULT) Jones and Plassmann, an efficient coloring algorithm, "power" an alternative stochastic algorithm, "greedy", a greedy assignment algorithm with stochastic updates to guarantee a valid coloring, "bt", a back tracking algorithm that produces good distributions but may experience exponential run time in the worst case scenario (works well on medium to large 2D problems)
    - name: columnar_3D
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        3D microstructure will be columnar in the z-direction?
    - name: compute_halo_maps
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to communicate proper halo information to all ranks
    - name: compute_var_to_feature_map
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to compute the active vars to features map
    - name: condense_map_info
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether we condense all the node values when in multimap mode (default: false)
    - name: connecting_threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The threshold for which an existing feature may be extended (defaults to "threshold")
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: enable_var_coloring
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Instruct the Postprocessor to populate the variable index map.
    - name: execute_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: file_name
      required: No
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        File containing grain centroids, if file_name is provided, the centroids from the file will be used.
    - name: flood_entity_type
      required: No
      default: !!str ELEMENTAL
      cpp_type: MooseEnum
      group_name: 
      options: NODAL ELEMENTAL
      description: |
        Determines whether the flood algorithm runs on nodes or elements
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_num
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of grains being represented by the order parameters
    - name: op_num
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        Array of coupled variables (num_name)
    - name: output_adjacency_matrix
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Output the Grain Adjacency Matrix used in the coloring algorithms. Additionally, the grain to OP assignments will be printed
    - name: outputs
      required: No
      default: !!str none 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: rand_seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        The random seed
    - name: threshold
      required: No
      default: !!str 0.5
      cpp_type: double
      group_name: 
      description: |
        The threshold value for which a new feature may be started
    - name: type
      required: No
      default: !!str PolycrystalVoronoi
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: use_global_numbering
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether or not global numbers are used to label features on multiple maps (default: true)
    - name: use_less_than_threshold_comparison
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Controls whether features are defined to be less than or greater than the threshold value.
    - name: use_single_map
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determine whether information is tracked per coupled variable or consolidated into one (default: true)
    - name: var_name_base
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Array of coupled variables (base_name)
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Array of coupled variables
    subblocks:
  - name: /UserObjects/PostprocessorComparison
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-12
      cpp_type: double
      group_name: 
      description: |
        Absolute tolerance used in comparisons
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: comparison_type
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: equals greater_than_equals less_than_equals greater_than less_than
      description: |
        The type of comparison to perform. Options are: equals greater_than_equals less_than_equals greater_than less_than
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str PostprocessorComparison
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_a
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The first post-processor or value in the comparison
    - name: value_b
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The second post-processor or value in the comparison
    subblocks:
  - name: /UserObjects/RandomEulerAngleProvider
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_tracker_object
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Seed value for the random number generator
    - name: type
      required: No
      default: !!str RandomEulerAngleProvider
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/Receiver
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: default
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The default value
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: initialize_old
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Initialize the old postprocessor value with the default value
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str Receiver
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/RelativeDifferencePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str RelativeDifferencePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value1
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        First post-processor
    - name: value2
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        Second post-processor, base for relative difference
    subblocks:
  - name: /UserObjects/RelativeSolutionDifferenceNorm
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str RelativeSolutionDifferenceNorm
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/Residual
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: residual_type
      required: No
      default: !!str FINAL
      cpp_type: MooseEnum
      group_name: 
      options: FINAL INITIAL_BEFORE_PRESET INITIAL_AFTER_PRESET
      description: |
        Type of residual to be reported.  Choices are: FINAL INITIAL_BEFORE_PRESET INITIAL_AFTER_PRESET
    - name: type
      required: No
      default: !!str Residual
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/ScalarL2Error
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: function
      required: Yes
      default: !!str 
      cpp_type: FunctionName
      group_name: 
      description: |
        The analytic solution to compare against
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str ScalarL2Error
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of the scalar variable
    subblocks:
  - name: /UserObjects/ScalarVariable
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: component
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 
      description: |
        Component to output for this variable
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str ScalarVariable
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        Name of the variable
    subblocks:
  - name: /UserObjects/ScalePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scaling_factor
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The scaling factor
    - name: type
      required: No
      default: !!str ScalePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The postprocessor to be scaled
    subblocks:
  - name: /UserObjects/SideAverageValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str SideAverageValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /UserObjects/SideFluxAverage
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diffusivity
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The name of the diffusivity material property that will be used in the flux computation.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str SideFluxAverage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /UserObjects/SideFluxIntegral
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: diffusivity
      required: Yes
      default: !!str 
      cpp_type: MaterialPropertyName
      group_name: 
      description: |
        The name of the diffusivity material property that will be used in the flux computation.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str SideFluxIntegral
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /UserObjects/SideIntegralVariablePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str SideIntegralVariablePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this boundary condition applies to
    subblocks:
  - name: /UserObjects/SolutionRasterizer
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: es
      required: No
      default: !!str <not supplied>
      cpp_type: FileName
      group_name: 
      description: |
        The name of the file holding the equation system info in xda format (xda only).
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: mesh
      required: Yes
      default: !!str 
      cpp_type: MeshFileName
      group_name: 
      description: |
        The name of the mesh file (must be xda or exodusII file).
    - name: raster_mode
      required: No
      default: !!str MAP
      cpp_type: MooseEnum
      group_name: 
      options: MAP FILTER
      description: |
        Rasterization mode (MAP|FILTER).
    - name: rotation0_angle
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Anticlockwise rotation angle (in degrees) to use for rotation about rotation0_vector.
    - name: rotation0_vector
      required: No
      default: !!str 0 0 1
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Vector about which to rotate points of the simulation.
    - name: rotation1_angle
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Anticlockwise rotation angle (in degrees) to use for rotation about rotation1_vector.
    - name: rotation1_vector
      required: No
      default: !!str 0 0 1
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Vector about which to rotate points of the simulation.
    - name: scale
      required: No
      default: !!str 1 1 1 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Scale factor for points in the simulation
    - name: scale_multiplier
      required: No
      default: !!str 1 1 1 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Scale multiplying factor for points in the simulation
    - name: system
      required: No
      default: !!str nl0
      cpp_type: std::string
      group_name: 
      description: |
        The name of the system to pull values out of (xda only).
    - name: system_variables
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The name of the nodal and elemental variables from the file you want to use for values
    - name: threshold
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Accept atoms with a variable value above this threshold in FILTER mode.
    - name: timestep
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Index of the single timestep used or "LATEST" for the last timestep (exodusII only).  If not supplied, time interpolation will occur.
    - name: transformation_order
      required: No
      default: !!str translation scale
      cpp_type: MultiMooseEnum
      group_name: 
      options: rotation0 translation scale rotation1 scale_multiplier
      description: |
        The order to perform the operations in.  Define R0 to be the rotation matrix encoded by rotation0_vector and rotation0_angle.  Similarly for R1.  Denote the scale by s, the scale_multiplier by m, and the translation by t.  Then, given a point x in the simulation, if transformation_order = 'rotation0 scale_multiplier translation scale rotation1' then form p = R1*(R0*x*m - t)/s.  Then the values provided by the SolutionUserObject at point x in the simulation are the variable values at point p in the mesh.
    - name: translation
      required: No
      default: !!str 0 0 0 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Translation factors for x,y,z coordinates of the simulation
    - name: type
      required: No
      default: !!str SolutionRasterizer
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Variable from the mesh file to use for mapping to or filtering of the atoms.
    - name: xyz_input
      required: Yes
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        XYZ input file.
    - name: xyz_output
      required: Yes
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        XYZ output file.
    subblocks:
  - name: /UserObjects/SolutionUserObject
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: es
      required: No
      default: !!str <not supplied>
      cpp_type: FileName
      group_name: 
      description: |
        The name of the file holding the equation system info in xda format (xda only).
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: mesh
      required: Yes
      default: !!str 
      cpp_type: MeshFileName
      group_name: 
      description: |
        The name of the mesh file (must be xda or exodusII file).
    - name: rotation0_angle
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Anticlockwise rotation angle (in degrees) to use for rotation about rotation0_vector.
    - name: rotation0_vector
      required: No
      default: !!str 0 0 1
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Vector about which to rotate points of the simulation.
    - name: rotation1_angle
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Anticlockwise rotation angle (in degrees) to use for rotation about rotation1_vector.
    - name: rotation1_vector
      required: No
      default: !!str 0 0 1
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Vector about which to rotate points of the simulation.
    - name: scale
      required: No
      default: !!str 1 1 1 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Scale factor for points in the simulation
    - name: scale_multiplier
      required: No
      default: !!str 1 1 1 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Scale multiplying factor for points in the simulation
    - name: system
      required: No
      default: !!str nl0
      cpp_type: std::string
      group_name: 
      description: |
        The name of the system to pull values out of (xda only).
    - name: system_variables
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        The name of the nodal and elemental variables from the file you want to use for values
    - name: timestep
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Index of the single timestep used or "LATEST" for the last timestep (exodusII only).  If not supplied, time interpolation will occur.
    - name: transformation_order
      required: No
      default: !!str translation scale
      cpp_type: MultiMooseEnum
      group_name: 
      options: rotation0 translation scale rotation1 scale_multiplier
      description: |
        The order to perform the operations in.  Define R0 to be the rotation matrix encoded by rotation0_vector and rotation0_angle.  Similarly for R1.  Denote the scale by s, the scale_multiplier by m, and the translation by t.  Then, given a point x in the simulation, if transformation_order = 'rotation0 scale_multiplier translation scale rotation1' then form p = R1*(R0*x*m - t)/s.  Then the values provided by the SolutionUserObject at point x in the simulation are the variable values at point p in the mesh.
    - name: translation
      required: No
      default: !!str 0 0 0 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        Translation factors for x,y,z coordinates of the simulation
    - name: type
      required: No
      default: !!str SolutionUserObject
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/TensorMechanicsHardeningConstant
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: convert_to_radians
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        If true, the value you entered will be multiplied by Pi/180 before passing to the Plasticity algorithms
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: type
      required: No
      default: !!str TensorMechanicsHardeningConstant
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The value of the parameter for all internal parameter.  This is perfect plasticity - there is no hardening.
    subblocks:
  - name: /UserObjects/TensorMechanicsHardeningCubic
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_0
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The value of the internal_parameter when hardening begins
    - name: internal_limit
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The value of the internal_parameter when hardening ends.  This hardening forms a cubic between (internal_0, value_0) and (internal_limit, value_residual) that is smooth at internal_0 and internal_limit
    - name: type
      required: No
      default: !!str TensorMechanicsHardeningCubic
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_0
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value of the parameter for all internal_parameter <= internal_0
    - name: value_residual
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value of the parameter for internal_parameter >= internal_limit.  Default = value_0, ie perfect plasticity
    subblocks:
  - name: /UserObjects/TensorMechanicsHardeningCutExponential
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_0
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The cutoff of internal parameter
    - name: rate
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Let p = internal_parameter.  Then value = value_0 for p<internal_0, and otherwise, value = value_residual + (value_0 - value_residual)*exp(-rate*(p - internal_0)
    - name: type
      required: No
      default: !!str TensorMechanicsHardeningCutExponential
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_0
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value of the parameter for all internal_parameter <= internal_0
    - name: value_residual
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value of the parameter for internal_parameter = infinity.  Default = value_0, ie perfect plasticity
    subblocks:
  - name: /UserObjects/TensorMechanicsHardeningExponential
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: rate
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Let p = internal_parameter.  Then value = value_residual + (value_0 - value_residual)*exp(-rate*intnal_parameter)
    - name: type
      required: No
      default: !!str TensorMechanicsHardeningExponential
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_0
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value of the parameter at internal_parameter = 0
    - name: value_residual
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value of the parameter for internal_parameter = infinity.  Default = value_0, ie perfect plasticity
    subblocks:
  - name: /UserObjects/TensorMechanicsHardeningGaussian
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_0
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The value of the internal_parameter when hardening begins
    - name: rate
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Let p = internal_parameter.  Then value = value_0 for p<internal_0, and value = value_residual + (value_0 - value_residual)*exp(-0.5*rate*(p - internal_0)^2)
    - name: type
      required: No
      default: !!str TensorMechanicsHardeningGaussian
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_0
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value of the parameter for all internal_parameter <= internal_0
    - name: value_residual
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The value of the parameter for internal_parameter = infinity.  Default = value_0, ie perfect plasticity
    subblocks:
  - name: /UserObjects/TensorMechanicsHardeningPowerRule
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: epsilon0
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The reference strain
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: exponent
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Let p = internal_parameter.  Then value = value_0 * (p / epsilon0 + 1)^{exponent})
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: type
      required: No
      default: !!str TensorMechanicsHardeningPowerRule
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_0
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The yield strength when internal variable = 0
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticDruckerPrager
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: mc_cohesion
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the Mohr-Coulomb cohesion.  Physically this should not be negative.
    - name: mc_dilation_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the Mohr-Coulomb dilation angle (in radians).  Usually the dilation angle is not greater than the friction angle, and it is between 0 and Pi/2.
    - name: mc_friction_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the Mohr-Coulomb friction angle (in radians).  Physically this should be between 0 and Pi/2.
    - name: mc_interpolation_scheme
      required: No
      default: !!str lode_zero
      cpp_type: MooseEnum
      group_name: 
      options: outer_tip inner_tip lode_zero inner_edge native
      description: |
        Scheme by which the Drucker-Prager cohesion, friction angle and dilation angle are set from the Mohr-Coulomb parameters mc_cohesion, mc_friction_angle and mc_dilation_angle.  Consider the DP and MC yield surfaces on the devatoric (octahedral) plane.  Outer_tip: the DP circle touches the outer tips of the MC hex.  Inner_tip: the DP circle touches the inner tips of the MC hex.  Lode_zero: the DP circle intersects the MC hex at lode angle=0.  Inner_edge: the DP circle is the largest circle that wholey fits inside the MC hex.  Native: The DP cohesion, friction angle and dilation angle are set equal to the mc_ parameters entered.
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticDruckerPrager
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticDruckerPragerHyperbolic
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: max_iterations
      required: No
      default: !!str 40
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum iterations to use in the custom return map function
    - name: mc_cohesion
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the Mohr-Coulomb cohesion.  Physically this should not be negative.
    - name: mc_dilation_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the Mohr-Coulomb dilation angle (in radians).  Usually the dilation angle is not greater than the friction angle, and it is between 0 and Pi/2.
    - name: mc_friction_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the Mohr-Coulomb friction angle (in radians).  Physically this should be between 0 and Pi/2.
    - name: mc_interpolation_scheme
      required: No
      default: !!str lode_zero
      cpp_type: MooseEnum
      group_name: 
      options: outer_tip inner_tip lode_zero inner_edge native
      description: |
        Scheme by which the Drucker-Prager cohesion, friction angle and dilation angle are set from the Mohr-Coulomb parameters mc_cohesion, mc_friction_angle and mc_dilation_angle.  Consider the DP and MC yield surfaces on the devatoric (octahedral) plane.  Outer_tip: the DP circle touches the outer tips of the MC hex.  Inner_tip: the DP circle touches the inner tips of the MC hex.  Lode_zero: the DP circle intersects the MC hex at lode angle=0.  Inner_edge: the DP circle is the largest circle that wholey fits inside the MC hex.  Native: The DP cohesion, friction angle and dilation angle are set equal to the mc_ parameters entered.
    - name: smoother
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        The cone vertex at J2=0 is smoothed.  The maximum mean stress possible, which is Cohesion*Cot(friction_angle) for smoother=0, becomes (Cohesion - smoother/3)*Cot(friction_angle).  This is a non-hardening parameter
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticDruckerPragerHyperbolic
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_custom_cto
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom consistent tangent operator computations.  Set to true if you are using isotropic elasticity.
    - name: use_custom_returnMap
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom returnMap algorithm.  Set to true if you are using isotropic elasticity.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticIsotropicSD
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: associative
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Flag for flow-rule, true if not specified
    - name: b
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        A constant to model the influence of pressure
    - name: c
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        A constant to model the influence of strength differential effect
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: max_iterations
      required: No
      default: !!str 10
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum iterations for custom J2 return map
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticIsotropicSD
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_custom_cto
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom consistent tangent operator computations.  Set to true if you are using isotropic elasticity.
    - name: use_custom_returnMap
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom returnMap algorithm.  Set to true if you are using isotropic elasticity.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    - name: yield_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the yield strength
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticJ2
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: max_iterations
      required: No
      default: !!str 10
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum iterations for custom J2 return map
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticJ2
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_custom_cto
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom consistent tangent operator computations.  Set to true if you are using isotropic elasticity.
    - name: use_custom_returnMap
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom returnMap algorithm.  Set to true if you are using isotropic elasticity.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    - name: yield_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the yield strength
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticMeanCap
    description: |
      
    parameters:
    - name: a
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Yield function = a*mean_stress - strength
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Yield function = a*mean_stress - strength
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticMeanCap
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticMeanCapTC
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: compressive_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the mean-cap compressive strength.  This should always be less than tensile_strength (it will typically be negative).  Yield function = - (trace(stress) - compressive_strength) for trace(stress)<compressive_strength.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: max_iterations
      required: No
      default: !!str 10
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum iterations for custom MeanCapTC return map
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the mean-cap tensile strength (it will typically be positive).  Yield function = trace(stress) - tensile_strength for trace(stress)>tensile_strength.
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticMeanCapTC
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_custom_cto
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom consistent tangent operator computations.
    - name: use_custom_returnMap
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom MeanCapTC returnMap algorithm.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticMohrCoulomb
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: cap_rate
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        For the 'cap' tip_scheme, this controls how quickly the cap degenerates to a hemisphere: small values mean a slow degeneration to a hemisphere (and zero means the 'cap' will be totally inactive).  Typical value is 1/tensile_strength
    - name: cap_start
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        For the 'cap' tip_scheme, smoothing is performed in the stress_mean > cap_start region
    - name: cohesion
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the cohesion.  Physically the cohesion should not be negative.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: dilation_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the dilation angle (in radians).  Usually the dilation angle is not greater than the friction angle, and it is between 0 and 90deg.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: friction_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the friction angle (in radians).  Physically the friction angle should be between 0 and 90deg.
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: mc_edge_smoother
      required: No
      default: !!str 25
      cpp_type: double
      group_name: 
      description: |
        Smoothing parameter: the edges of the cone are smoothed by the given amount.
    - name: mc_lode_cutoff
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the second invariant of stress is less than this amount, the Lode angle is assumed to be zero.  This is to gaurd against precision-loss problems, and this parameter should be set small.  Default = 0.00001*((yield_Function_tolerance)^2)
    - name: mc_tip_smoother
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Smoothing parameter: the cone vertex at mean = cohesion*cot(friction_angle), will be smoothed by the given amount.  Typical value is 0.1*cohesion
    - name: tip_scheme
      required: No
      default: !!str hyperbolic
      cpp_type: MooseEnum
      group_name: 
      options: hyperbolic cap
      description: |
        Scheme by which the pyramid's tip will be smoothed.
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticMohrCoulomb
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticMohrCoulombMulti
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: cohesion
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the cohesion
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: dilation_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the dilation angle (in radians)
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: friction_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the friction angle (in radians)
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: max_iterations
      required: No
      default: !!str 10
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of Newton-Raphson iterations allowed in the custom return-map algorithm.  For highly nonlinear hardening this may need to be higher than 10.
    - name: shift
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Yield surface is shifted by this amount to avoid problems with defining derivatives when eigenvalues are equal.  If this is larger than f_tol, a warning will be issued.  This may be set very small when using the custom returnMap.  Default = f_tol.
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticMohrCoulombMulti
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_custom_returnMap
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Use a custom return-map algorithm for this plasticity model, which may speed up computations considerably.  Set to true only for isotropic elasticity with no hardening of the dilation angle.  In this case you may set 'shift' very small.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticOrthotropic
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: associative
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Flag for flow-rule, true if not specified
    - name: b
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        A constant to model the influence of pressure
    - name: c
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        A constant to model the influence of strength differential effect
    - name: c1
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The six coefficients of L prime
    - name: c2
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The six coefficients of L prime prime
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: max_iterations
      required: No
      default: !!str 10
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum iterations for custom J2 return map
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticOrthotropic
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_custom_cto
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom consistent tangent operator computations.  Set to true if you are using isotropic elasticity.
    - name: use_custom_returnMap
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom returnMap algorithm.  Set to true if you are using isotropic elasticity.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    - name: yield_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the yield strength
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticSimpleTester
    description: |
      
    parameters:
    - name: a
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Yield function = a*stress_yy + b*stress_zz + c*stress_xx + d*(stress_xy + stress_yx)/2 + e*(stress_xz + stress_zx)/2 + f*(stress_yz + stress_zy)/2 - strength
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: b
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Yield function = a*stress_yy + b*stress_zz + c*stress_xx + d*(stress_xy + stress_yx)/2 + e*(stress_xz + stress_zx)/2 + f*(stress_yz + stress_zy)/2 - strength
    - name: c
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Yield function = a*stress_yy + b*stress_zz + c*stress_xx + d*(stress_xy + stress_yx)/2 + e*(stress_xz + stress_zx)/2 + f*(stress_yz + stress_zy)/2 - strength
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: d
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Yield function = a*stress_yy + b*stress_zz + c*stress_xx + d*(stress_xy + stress_yx)/2 + e*(stress_xz + stress_zx)/2 + f*(stress_yz + stress_zy)/2 - strength
    - name: e
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Yield function = a*stress_yy + b*stress_zz + c*stress_xx + d*(stress_xy + stress_yx)/2 + e*(stress_xz + stress_zx)/2 + f*(stress_yz + stress_zy)/2 - strength
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: f
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Yield function = a*stress_yy + b*stress_zz + c*stress_xx + d*(stress_xy + stress_yx)/2 + e*(stress_xz + stress_zx)/2 + f*(stress_yz + stress_zy)/2 - strength
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: strength
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Yield function = a*stress_yy + b*stress_zz + c*stress_xx + d*(stress_xy + stress_yx)/2 + e*(stress_xz + stress_zx)/2 + f*(stress_yz + stress_zy)/2 - strength
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticSimpleTester
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticTensile
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: cap_rate
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        For the 'cap' tip_scheme, this controls how quickly the cap degenerates to a hemisphere: small values mean a slow degeneration to a hemisphere (and zero means the 'cap' will be totally inactive).  Typical value is 1/tensile_strength
    - name: cap_start
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        For the 'cap' tip_scheme, smoothing is performed in the stress_mean > cap_start region
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: tensile_edge_smoother
      required: No
      default: !!str 25
      cpp_type: double
      group_name: 
      description: |
        Smoothing parameter: the edges of the cone are smoothed by the given amount.
    - name: tensile_lode_cutoff
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the second invariant of stress is less than this amount, the Lode angle is assumed to be zero.  This is to gaurd against precision-loss problems, and this parameter should be set small.  Default = 0.00001*((yield_Function_tolerance)^2)
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the tensile strength
    - name: tensile_tip_smoother
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        For the 'hyperbolic' tip_scheme, the pyramid vertex will be smoothed by the given amount.  For the 'cap' tip_scheme, additional smoothing will occur.  Typical value is 0.1*tensile_strength
    - name: tip_scheme
      required: No
      default: !!str hyperbolic
      cpp_type: MooseEnum
      group_name: 
      options: hyperbolic cap
      description: |
        Scheme by which the pyramid's tip will be smoothed.
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticTensile
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticTensileMulti
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: max_iterations
      required: No
      default: !!str 10
      cpp_type: unsigned int
      group_name: 
      description: |
        Maximum number of Newton-Raphson iterations allowed in the custom return-map algorithm.  For highly nonlinear hardening this may need to be higher than 10.
    - name: shift
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Yield surface is shifted by this amount to avoid problems with defining derivatives when eigenvalues are equal.  If this is larger than f_tol, a warning will be issued.  Default = f_tol.
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the tensile strength
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticTensileMulti
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_custom_cto
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom consistent tangent operator computations.  Set to true if you are using isotropic elasticity.
    - name: use_custom_returnMap
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Whether to use the custom returnMap algorithm.  Set to true if you are using isotropic elasticity.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticWeakPlaneShear
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: cap_rate
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        For the 'cap' tip_scheme, this controls how quickly the cap degenerates to a hemisphere: small values mean a slow degeneration to a hemisphere (and zero means the 'cap' will be totally inactive).  Typical value is 1/cohesion
    - name: cap_start
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        For the 'cap' tip_scheme, smoothing is performed in the stress_zz > cap_start region
    - name: cohesion
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the cohesion.  Physically the cohesion should not be negative.
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: smoother
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        For the 'hyperbolic' tip_scheme, the cone vertex at shear-stress = 0 will be smoothed by the given amount.  For the 'cap' tip_scheme, additional smoothing will occur.  Typical value is 0.1*cohesion
    - name: tan_dilation_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the tan(dilation angle).  Usually the dilation angle is not greater than the friction angle, and it is between 0 and 90deg.
    - name: tan_friction_angle
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of tan(friction angle).  Physically the friction angle should be between 0 and 90deg.
    - name: tip_scheme
      required: No
      default: !!str hyperbolic
      cpp_type: MooseEnum
      group_name: 
      options: hyperbolic cap
      description: |
        Scheme by which the cone's tip will be smoothed.
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticWeakPlaneShear
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticWeakPlaneTensile
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: stress_coefficient
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The yield function is stress_coefficient * stress_zz - tensile_strength
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the weak-plane tensile strength
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticWeakPlaneTensile
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/TensorMechanicsPlasticWeakPlaneTensileN
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: internal_constraint_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The Newton-Raphson process is only deemed converged if the internal constraint is less than this.
    - name: normal_vector
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The normal vector to the weak plane
    - name: stress_coefficient
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        The yield function is stress_coefficient * stress_zz - tensile_strength
    - name: tensile_strength
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        A TensorMechanicsHardening UserObject that defines hardening of the weak-plane tensile strength
    - name: type
      required: No
      default: !!str TensorMechanicsPlasticWeakPlaneTensileN
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: yield_function_tolerance
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        If the yield function is less than this amount, the (stress, internal parameter) are deemed admissible.
    subblocks:
  - name: /UserObjects/Terminator
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: expression
      required: Yes
      default: !!str 
      cpp_type: FunctionExpression
      group_name: 
      description: |
        FParser expression to process Postprocessor values into a boolean value. Termination of the simulation occurs when this returns true.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: type
      required: No
      default: !!str Terminator
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/TimeExtremeValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: postprocessor
      required: Yes
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor used for reporting time extreme values
    - name: type
      required: No
      default: !!str TimeExtremeValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value_type
      required: No
      default: !!str max
      cpp_type: MooseEnum
      group_name: 
      options: max min abs_max abs_min
      description: |
        Type of extreme value to return.'max' returns the maximum value.'min' returns the minimum value.'abs_max' returns the maximum absolute value.'abs_min' returns the minimum absolute value.
    subblocks:
  - name: /UserObjects/TimestepSize
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str TimestepSize
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/TorqueReaction
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: axis_origin
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        Origin of the axis of rotation used to calculate the torque
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction_vector
      required: Yes
      default: !!str 
      cpp_type: libMesh::VectorValue<double>
      group_name: 
      description: |
        The direction vector of the axis of rotation about which the calculated torque is calculated
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: reaction_force_variables
      required: Yes
      default: !!str 
      cpp_type: std::vector<AuxVariableName, std::allocator<AuxVariableName> >
      group_name: 
      description: |
        The reaction variables
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str TorqueReaction
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/TotalVariableValue
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str TotalVariableValue
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: No
      default: !!str 
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The name of the postprocessor
    subblocks:
  - name: /UserObjects/VariableInnerProduct
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: second_variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the second variable in the inner product (variable, second_variable)
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VariableInnerProduct
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The name of the variable that this object operates on
    subblocks:
  - name: /UserObjects/VariableResidual
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str VariableResidual
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: VariableName
      group_name: 
      description: |
        The name of the variable to compute the residual for
    subblocks:
  - name: /UserObjects/VectorPostprocessorComparison
    description: |
      
    parameters:
    - name: absolute_tolerance
      required: No
      default: !!str 1e-12
      cpp_type: double
      group_name: 
      description: |
        Absolute tolerance used in comparisons
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: comparison_type
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: equals greater_than_equals less_than_equals greater_than less_than
      description: |
        The type of comparison to perform. Options are: equals greater_than_equals less_than_equals greater_than less_than
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str VectorPostprocessorComparison
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: vector_name_a
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the vector in the first vector post-processor to compare
    - name: vector_name_b
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the vector in the second vector post-processor to compare
    - name: vectorpostprocessor_a
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The first vector post-processor in the comparison
    - name: vectorpostprocessor_b
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The second vector post-processor in the comparison
    subblocks:
  - name: /UserObjects/VerifyElementUniqueID
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VerifyElementUniqueID
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/VerifyNodalUniqueID
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VerifyNodalUniqueID
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /UserObjects/VolumePostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VolumePostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
- name: /Variables
  description: |
    
  parameters:
  subblocks:
  - name: /Variables/*
    description: |
      
    parameters:
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The block id where this variable lives
    - name: eigen
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        True to make this variable an eigen variable
    - name: family
      required: No
      default: !!str LAGRANGE
      cpp_type: MooseEnum
      group_name: 
      options: LAGRANGE MONOMIAL HERMITE SCALAR HIERARCHIC CLOUGH XYZ SZABAB BERNSTEIN L2_LAGRANGE L2_HIERARCHIC NEDELEC_ONE LAGRANGE_VEC
      description: |
        Specifies the family of FE shape functions to use for this variable
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: initial_condition
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Specifies the initial condition for this variable
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: CONSTANT FIRST SECOND THIRD FOURTH
      description: |
        Specifies the order of the FE shape function to use for this variable (additional orders not listed are allowed)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scaling
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 'Advanced'
      description: |
        Specifies a scaling factor to apply to this variable
    - name: initial_from_file_timestep
      required: No
      default: !!str LATEST
      cpp_type: std::string
      group_name: 'Initial From File'
      description: |
        Gives the timestep (or "LATEST") for which to read a solution from a file for a given variable. (Default: LATEST)
    - name: initial_from_file_var
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 'Initial From File'
      description: |
        Gives the name of a variable for which to read an initial condition from a mesh file
    subblocks:
    - name: /Variables/*/InitialCondition
      description: |
        
      parameters:
      - name: inactive
        required: No
        default: !!str 
        cpp_type: std::vector<std::string, std::allocator<std::string> >
        group_name: 
        description: |
          If specified blocks matching these identifiers will be skipped.
      - name: isObjectAction
        required: No
        default: !!str 1
        cpp_type: bool
        group_name: 
        description: |
          Indicates that this is a MooseObjectAction.
      - name: type
        required: Yes
        default: !!str 
        cpp_type: std::string
        group_name: 
        description: |
          A string representing the Moose Object that will be built by this Action
      subblocks:
      - name: /Variables/*/InitialCondition/<type>
        description: |
          
        parameters:
        subblocks:
        - name: /Variables/*/InitialCondition/<type>/BimodalInverseSuperellipsoidsIC
          description: |
            
          parameters:
          - name: as
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis a for each superellipsoid
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis b for each superellipsoid
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: cs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis c for each superellipsoid
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the superellipsoid
          - name: large_spac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing between large and small particles, measured from closest edge to closest edge
          - name: nestedvalue
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value for nested particles inside the superellipsoid in inverse configuration
          - name: npart
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of random (small) particles to place
          - name: ns
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Exponent n for each superellipsoid
          - name: numtries
            required: No
            default: !!str 1000
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of tries to place the random particles
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the superellipsoid
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: size_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Plus or minus fraction of random variation in the semiaxes for uniform, standard deviation for normal
          - name: size_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random semiaxes will follow
          - name: small_a
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis a value for the randomly placed (small) superellipsoids
          - name: small_b
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis b value for the randomly placed (small) superellipsoids
          - name: small_c
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis c value for the randomly placed (small) superellipsoids
          - name: small_n
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Exponent n for the randomly placed (small) superellipsoids
          - name: small_spac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing between small particles, measured from closest edge to closest edge
          - name: type
            required: No
            default: !!str BimodalInverseSuperellipsoidsIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The x-coordinate for each superellipsoid center
          - name: y_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The y-coordinate for each superellipsoid center
          - name: z_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The z-coordinate for each superellipsoid center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/BimodalSuperellipsoidsIC
          description: |
            
          parameters:
          - name: as
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis a for each superellipsoid
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis b for each superellipsoid
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: cs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis c for each superellipsoid
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the superellipsoid
          - name: large_spac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing between large and small particles, measured from closest edge to closest edge
          - name: nestedvalue
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value for nested particles inside the superellipsoid in inverse configuration
          - name: npart
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of random (small) particles to place
          - name: ns
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Exponent n for each superellipsoid
          - name: numtries
            required: No
            default: !!str 1000
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of tries to place the random particles
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the superellipsoid
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: size_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Plus or minus fraction of random variation in the semiaxes for uniform, standard deviation for normal
          - name: size_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random semiaxes will follow
          - name: small_a
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis a value for the randomly placed (small) superellipsoids
          - name: small_b
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis b value for the randomly placed (small) superellipsoids
          - name: small_c
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean semiaxis c value for the randomly placed (small) superellipsoids
          - name: small_n
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Exponent n for the randomly placed (small) superellipsoids
          - name: small_spac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing between small particles, measured from closest edge to closest edge
          - name: type
            required: No
            default: !!str BimodalSuperellipsoidsIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The x-coordinate for each superellipsoid center
          - name: y_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The y-coordinate for each superellipsoid center
          - name: z_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The z-coordinate for each superellipsoid center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/BoundingBoxIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: inside
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The value of the variable inside the box
          - name: outside
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The value of the variable outside the box
          - name: type
            required: No
            default: !!str BoundingBoxIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the lower left-hand corner of the box
          - name: x2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the upper right-hand corner of the box
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the lower left-hand corner of the box
          - name: y2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the upper right-hand corner of the box
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the lower left-hand corner of the box
          - name: z2
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the upper right-hand corner of the box
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/ClosePackIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The radius of a circle
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str ClosePackIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/ConstantIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: type
            required: No
            default: !!str ConstantIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: value
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The value to be set in IC
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/CrossIC
          description: |
            
          parameters:
          - name: amplitude
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              The amplitude
          - name: average
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The average value
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: buffer
            required: No
            default: !!str 0.03125
            cpp_type: double
            group_name: 
            description: |
              A small area between the max value and the interface
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: interface
            required: No
            default: !!str 0.03125
            cpp_type: double
            group_name: 
            description: |
              The interface width
          - name: length
            required: No
            default: !!str 0.75
            cpp_type: double
            group_name: 
            description: |
              The length
          - name: type
            required: No
            default: !!str CrossIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: width
            required: No
            default: !!str 0.125
            cpp_type: double
            group_name: 
            description: |
              The width
          - name: x1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the lower left-hand corner of the box
          - name: x2
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the upper right-hand corner of the box
          - name: y1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the lower left-hand corner of the box
          - name: y2
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the upper right-hand corner of the box
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/FunctionIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: function
            required: Yes
            default: !!str 
            cpp_type: FunctionName
            group_name: 
            description: |
              The initial condition function.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: type
            required: No
            default: !!str FunctionIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/FunctionScalarIC
          description: |
            
          parameters:
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: function
            required: Yes
            default: !!str 
            cpp_type: std::vector<FunctionName, std::allocator<FunctionName> >
            group_name: 
            description: |
              The initial condition function.
          - name: type
            required: No
            default: !!str FunctionScalarIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: No
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/LatticeSmoothCircleIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: Rnd_variation
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Variation from central lattice position
          - name: avoid_bounds
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              Don't place any bubbles on the simulation cell boundaries
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: circles_per_side
            required: Yes
            default: !!str 
            cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
            group_name: 
            description: |
              Vector containing the number of bubbles along each side
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: pos_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Variation from central lattice position
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean radius value for the circels
          - name: radius_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Plus or minus fraction of random variation in the bubble radius
          - name: radius_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random circle radii will follow
          - name: rand_seed
            required: No
            default: !!str 2000
            cpp_type: unsigned int
            group_name: 
            description: |
              random seed
          - name: type
            required: No
            default: !!str LatticeSmoothCircleIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/MultiBoundingBoxIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: corners
            required: Yes
            default: !!str 
            cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
            group_name: 
            description: |
              The corner coordinates boxes
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: inside
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The value of the variable inside each box (one value per box or a single value for all boxes)
          - name: opposite_corners
            required: Yes
            default: !!str 
            cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
            group_name: 
            description: |
              The coordinates of the opposite corners of the boxes
          - name: outside
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The value of the variable outside the box
          - name: type
            required: No
            default: !!str MultiBoundingBoxIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/MultiSmoothCircleIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bubspac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing of bubbles, measured from center to center
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: numbub
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of bubbles to place
          - name: numtries
            required: No
            default: !!str 1000
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of tries
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean radius value for the circles
          - name: radius_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Plus or minus fraction of random variation in the bubble radius for uniform, standard deviation for normal
          - name: radius_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random circle radii will follow
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str MultiSmoothCircleIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/MultiSmoothSuperellipsoidIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bubspac
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of the minimum spacing of bubbles of one type, measured from center to center
          - name: check_extremes
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Check all Superellipsoid extremes (center +- each semiaxis) for overlap, must have prevent_overlap set to True.
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: exponent
            required: No
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of exponents for each superellipsoid, n=2 is a normal ellipse
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the superellipsoid
          - name: max_num_tries
            required: No
            default: !!str 1000
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of tries
          - name: nestedvalue
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value for nested particles inside the superellipsoid in inverse configuration
          - name: numbub
            required: Yes
            default: !!str 
            cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
            group_name: 
            description: |
              Vector of the number of bubbles to place
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the superellipsoid
          - name: prevent_overlap
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Check all Superellipsoid centers for overlap with other Superellipsoids.
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: semiaxis_a
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of mean semiaxis values in the x direction for the ellipse
          - name: semiaxis_a_variation
            required: No
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of plus or minus fractions of random variation in the bubble semiaxis in the x direction for uniform, standard deviation for normal
          - name: semiaxis_b
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of mean semiaxis values in the y direction for the ellipse
          - name: semiaxis_b_variation
            required: No
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of plus or minus fractions of random variation in the bubble semiaxis in the y direction for uniform, standard deviation for normal
          - name: semiaxis_c
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of mean semiaxis values in the z direction for the ellipse, must be greater than 0 even if 2D.
          - name: semiaxis_c_variation
            required: No
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Vector of plus or minus fractions of random variation in the bubble semiaxis in the z direction for uniform, standard deviation for normal. Must be set to 0 if 2D.
          - name: semiaxis_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random superellipsoid semiaxes will follow
          - name: type
            required: No
            default: !!str MultiSmoothSuperellipsoidIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: vary_axes_independently
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              If true the length of each semiaxis is randomly chosen within the provided parameters, if false then one random number is generated and applied to all semiaxes.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/PFCFreezingIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: crystal_structure
            required: No
            default: !!str 
            cpp_type: MooseEnum
            group_name: 
            options: FCC BCC
            description: |
              The type of crystal structure
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: inside
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              Value inside sinusoids
          - name: lc
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The lattice constant off the crystal structure
          - name: max
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              Upper bound of the randomly generated values
          - name: min
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Lower bound of the randomly generated values
          - name: outside
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Value outside sinusoids
          - name: seed
            required: No
            default: !!str 0
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str PFCFreezingIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the lower left-hand corner of the frozen box
          - name: x2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the upper right-hand corner of the box
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the lower left-hand corner of the frozen box
          - name: y2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the upper right-hand corner of the box
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the lower left-hand corner of the box
          - name: z2
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the upper right-hand corner of the box
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/PolycrystalColoringIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: op_index
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The index for the current order parameter
          - name: polycrystal_ic_uo
            required: Yes
            default: !!str 
            cpp_type: UserObjectName
            group_name: 
            description: |
              TODO
          - name: type
            required: No
            default: !!str PolycrystalColoringIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/PolycrystalRandomIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: op_index
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The index for the current order parameter
          - name: op_num
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Number of order parameters
          - name: random_type
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Type of random grain structure (formerly called 'typ')
          - name: type
            required: No
            default: !!str PolycrystalRandomIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/PolycrystalVoronoiVoidIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bubspac
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              minimum spacing of bubbles, measured from center to center
          - name: columnar_3D
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              3D microstructure will be columnar in the z-direction?
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: file_name
            required: No
            default: !!str 
            cpp_type: FileName
            group_name: 
            description: |
              File containing grain centroids, if file_name is provided, the centroids from the file will be used.
          - name: grain_num
            required: No
            default: !!str 0
            cpp_type: unsigned int
            group_name: 
            description: |
              Number of grains being represented by the order parameters
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: numbub
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of bubbles to place
          - name: numtries
            required: No
            default: !!str 1000
            cpp_type: unsigned int
            group_name: 
            description: |
              The number of tries
          - name: op_index
            required: No
            default: !!str 0
            cpp_type: unsigned int
            group_name: 
            description: |
              The index for the current order parameter, not needed if structure_type = voids
          - name: op_num
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Number of order parameters
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Mean radius value for the circles
          - name: radius_variation
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Plus or minus fraction of random variation in the bubble radius for uniform, standard deviation for normal
          - name: radius_variation_type
            required: No
            default: !!str none
            cpp_type: MooseEnum
            group_name: 
            options: uniform normal none
            description: |
              Type of distribution that random circle radii will follow
          - name: rand_seed
            required: No
            default: !!str 12444
            cpp_type: unsigned int
            group_name: 
            description: |
              The random seed
          - name: structure_type
            required: Yes
            default: !!str 
            cpp_type: MooseEnum
            group_name: 
            options: grains voids
            description: |
              Which structure type is being initialized, grains or voids
          - name: type
            required: No
            default: !!str PolycrystalVoronoiVoidIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/RampIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: type
            required: No
            default: !!str RampIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: value_left
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The value on left (xmin) boundary.
          - name: value_right
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The value on right (xmax) boundary.
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/RandomIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: distribution
            required: No
            default: !!str 
            cpp_type: DistributionName
            group_name: 
            description: |
              Name of distribution defining distribution of randomly generated values
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: legacy_generator
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Determines whether or not the legacy generator (deprecated) should be used.
          - name: max
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              Upper bound of uniformly distributed randomly generated values
          - name: min
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              Lower bound of uniformly distributed randomly generated values
          - name: seed
            required: No
            default: !!str 0
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str RandomIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/ReconPhaseVarIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: ebsd_reader
            required: Yes
            default: !!str 
            cpp_type: UserObjectName
            group_name: 
            description: |
              The EBSDReader object holding the EBSD data
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: phase
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              EBSD phase number this variable is to represent
          - name: type
            required: No
            default: !!str ReconPhaseVarIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/RndBoundingBoxIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: mn_invalue
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The min value of the variable invalue the box
          - name: mn_outvalue
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The min value of the variable outvalue the box
          - name: mx_invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The max value of the variable invalue the box
          - name: mx_outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The max value of the variable outvalue the box
          - name: type
            required: No
            default: !!str RndBoundingBoxIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the lower left-hand corner of the box
          - name: x2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the upper right-hand corner of the box
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the lower left-hand corner of the box
          - name: y2
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the upper right-hand corner of the box
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the lower left-hand corner of the box
          - name: z2
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the upper right-hand corner of the box
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/RndSmoothCircleIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The radius of a circle
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str RndSmoothCircleIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: variation_invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Plus or minus this amount on the invalue
          - name: variation_outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Plus or minus this amount on the outvalue
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the circle center
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the circle center
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the circle center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/ScalarComponentIC
          description: |
            
          parameters:
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: type
            required: No
            default: !!str ScalarComponentIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: values
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Initial values to initialize the scalar variable.
          - name: variable
            required: No
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/ScalarConstantIC
          description: |
            
          parameters:
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: type
            required: No
            default: !!str ScalarConstantIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: value
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              
          - name: variable
            required: No
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/SmoothCircleFromFileIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: file_name
            required: Yes
            default: !!str 
            cpp_type: FileName
            group_name: 
            description: |
              File containing circle centers and radii
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str SmoothCircleFromFileIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/SmoothCircleIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radius
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The radius of a circle
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str SmoothCircleIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the circle center
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the circle center
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the circle center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/SmoothSuperellipsoidIC
          description: |
            
          parameters:
          - name: a
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Semiaxis a of the superellipsoid
          - name: b
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Semiaxis b of the superellipsoid
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: c
            required: No
            default: !!str 1
            cpp_type: double
            group_name: 
            description: |
              Semiaxis c of the superellipsoid
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the superellipsoid
          - name: n
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              Exponent n of the superellipsoid
          - name: nestedvalue
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value for nested particles inside the superellipsoid in inverse configuration
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the superellipsoid
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str SmoothSuperellipsoidIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the superellipsoid center
          - name: y1
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the superellipsoid center
          - name: z1
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the superellipsoid center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/SpecifiedSmoothCircleIC
          description: |
            
          parameters:
          - name: 3D_spheres
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 
            description: |
              in 3D, whether the objects are spheres or columns
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: profile
            required: No
            default: !!str COS
            cpp_type: MooseEnum
            group_name: 
            options: COS TANH
            description: |
              Functional dependence for the interface profile
          - name: radii
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The radius for each circle
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str SpecifiedSmoothCircleIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The x-coordinate for each circle center
          - name: y_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The y-coordinate for each circle center
          - name: z_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The z-coordinate for each circle center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions and overlapping circles.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/SpecifiedSmoothSuperellipsoidIC
          description: |
            
          parameters:
          - name: as
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis a for each superellipsoid
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: bs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis b for each superellipsoid
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: cs
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Semiaxis c for each superellipsoid
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: int_width
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The interfacial width of the void surface.  Defaults to sharp interface
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the superellipsoid
          - name: nestedvalue
            required: No
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value for nested particles inside the superellipsoid in inverse configuration
          - name: ns
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              Exponent n for each superellipsoid
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the superellipsoid
          - name: rand_seed
            required: No
            default: !!str 12345
            cpp_type: unsigned int
            group_name: 
            description: |
              Seed value for the random number generator
          - name: type
            required: No
            default: !!str SpecifiedSmoothSuperellipsoidIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The x-coordinate for each superellipsoid center
          - name: y_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The y-coordinate for each superellipsoid center
          - name: z_positions
            required: Yes
            default: !!str 
            cpp_type: std::vector<double, std::allocator<double> >
            group_name: 
            description: |
              The z-coordinate for each superellipsoid center
          - name: zero_gradient
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 
            description: |
              Set the gradient DOFs to zero. This can avoid numerical problems with higher order shape functions.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/ThumbIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: height
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The z coordinate of the circle center
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: invalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value inside the circle
          - name: outvalue
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The variable value outside the circle
          - name: type
            required: No
            default: !!str ThumbIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: width
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The y coordinate of the circle center
          - name: xcoord
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x coordinate of the circle center
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/Tricrystal2CircleGrainsIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: op_index
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Index for the current grain order parameter
          - name: op_num
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Number of grain order parameters
          - name: type
            required: No
            default: !!str Tricrystal2CircleGrainsIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/TricrystalTripleJunctionIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: junction
            required: No
            default: !!str 
            cpp_type: libMesh::Point
            group_name: 
            description: |
              The point where the triple junction is located. Default is the center of the mesh
          - name: op_index
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Index for the current grain order parameter
          - name: op_num
            required: Yes
            default: !!str 
            cpp_type: unsigned int
            group_name: 
            description: |
              Number of grain order parameters
          - name: theta1
            required: No
            default: !!str 135
            cpp_type: double
            group_name: 
            description: |
              Angle of first grain at triple junction in degrees
          - name: theta2
            required: No
            default: !!str 135
            cpp_type: double
            group_name: 
            description: |
              Angle of second grain at triple junction in degrees
          - name: type
            required: No
            default: !!str TricrystalTripleJunctionIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          subblocks:
        - name: /Variables/*/InitialCondition/<type>/VectorConstantIC
          description: |
            
          parameters:
          - name: block
            required: No
            default: !!str 
            cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
            group_name: 
            description: |
              The list of block ids (SubdomainID) that this object will be applied
          - name: boundary
            required: No
            default: !!str 
            cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
            group_name: 
            description: |
              The list of boundary IDs from the mesh where this boundary condition applies
          - name: control_tags
            required: No
            default: !!str 
            cpp_type: std::vector<std::string, std::allocator<std::string> >
            group_name: 'Advanced'
            description: |
              Adds user-defined labels for accessing object parameters via control logic.
          - name: enable
            required: No
            default: !!str 1
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              Set the enabled status of the MooseObject.
          - name: ignore_uo_dependency
            required: No
            default: !!str 0
            cpp_type: bool
            group_name: 'Advanced'
            description: |
              When set to true, a UserObject retrieved by this IC will not be executed before the this IC
          - name: type
            required: No
            default: !!str VectorConstantIC
            cpp_type: std::string
            group_name: 
            description: |
              
          - name: variable
            required: Yes
            default: !!str 
            cpp_type: VariableName
            group_name: 
            description: |
              The variable this initial condition is supposed to provide values for.
          - name: x_value
            required: Yes
            default: !!str 
            cpp_type: double
            group_name: 
            description: |
              The x value to be set in IC
          - name: y_value
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The y value to be set in IC
          - name: z_value
            required: No
            default: !!str 0
            cpp_type: double
            group_name: 
            description: |
              The z value to be set in IC
          subblocks:
  - name: /Variables/CHPFCRFFSplitVariables
    description: |
      
    parameters:
    - name: L_name_base
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Base name for the complex L variables
    - name: family
      required: No
      default: !!str LAGRANGE
      cpp_type: MooseEnum
      group_name: 
      options: LAGRANGE MONOMIAL HERMITE SCALAR HIERARCHIC CLOUGH XYZ SZABAB BERNSTEIN L2_LAGRANGE L2_HIERARCHIC NEDELEC_ONE LAGRANGE_VEC
      description: |
        Specifies the family of FE shape functions to use for the L variables
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: n_name
      required: Yes
      default: !!str 
      cpp_type: AuxVariableName
      group_name: 
      description: |
        Name of atomic density variable
    - name: num_L
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of complex L variables will be solved for
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: CONSTANT FIRST SECOND THIRD FOURTH
      description: |
        Specifies the order of the FE shape function to use for the L variables
    - name: scaling
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Specifies a scaling factor to apply to the L variables
    - name: sub_filenames
      required: Yes
      default: !!str 
      cpp_type: std::vector<FileName, std::allocator<FileName> >
      group_name: 
      description: |
        This is the filename of the sub.i file
    subblocks:
  - name: /Variables/HHPFCRFFSplitVariables
    description: |
      
    parameters:
    - name: L_name_base
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Base name for the complex L variables
    - name: family
      required: No
      default: !!str LAGRANGE
      cpp_type: MooseEnum
      group_name: 
      options: LAGRANGE MONOMIAL HERMITE SCALAR HIERARCHIC CLOUGH XYZ SZABAB BERNSTEIN L2_LAGRANGE L2_HIERARCHIC NEDELEC_ONE LAGRANGE_VEC
      description: |
        Specifies the family of FE shape functions to use for the L variables
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: num_L
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of complex L variables will be solved for
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: CONSTANT FIRST SECOND THIRD FOURTH
      description: |
        Specifies the order of the FE shape function to use for the L variables
    - name: scaling
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Specifies a scaling factor to apply to the L variables
    subblocks:
  - name: /Variables/PFCRFFVariables
    description: |
      
    parameters:
    - name: L_name_base
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        Base name for the complex L variables
    - name: family
      required: No
      default: !!str LAGRANGE
      cpp_type: MooseEnum
      group_name: 
      options: LAGRANGE MONOMIAL HERMITE SCALAR HIERARCHIC CLOUGH XYZ SZABAB BERNSTEIN L2_LAGRANGE L2_HIERARCHIC NEDELEC_ONE LAGRANGE_VEC
      description: |
        Specifies the family of FE shape functions to use for the L variables
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: num_L
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of complex L variables will be solved for
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: CONSTANT FIRST SECOND THIRD FOURTH
      description: |
        Specifies the order of the FE shape function to use for the L variables
    - name: scaling
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Specifies a scaling factor to apply to the L variables
    subblocks:
  - name: /Variables/PolycrystalVariables
    description: |
      
    parameters:
    - name: family
      required: No
      default: !!str LAGRANGE
      cpp_type: MooseEnum
      group_name: 
      options: LAGRANGE MONOMIAL HERMITE SCALAR HIERARCHIC CLOUGH XYZ SZABAB BERNSTEIN L2_LAGRANGE L2_HIERARCHIC NEDELEC_ONE LAGRANGE_VEC
      description: |
        Specifies the family of FE shape function to use for the order parameters
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: initial_from_file
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Take the initial condition of all polycrystal variables from the mesh file
    - name: op_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        specifies the number of order parameters to create
    - name: order
      required: No
      default: !!str FIRST
      cpp_type: MooseEnum
      group_name: 
      options: CONSTANT FIRST SECOND THIRD FOURTH
      description: |
        Specifies the order of the FE shape function to use for the order parameters
    - name: scaling
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Specifies a scaling factor to apply to this variable
    - name: var_name_base
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        specifies the base name of the variables
    subblocks:
- name: /VectorPostprocessors
  description: |
    
  parameters:
  subblocks:
  - name: /VectorPostprocessors/*
    description: |
      
    parameters:
    - name: inactive
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        If specified blocks matching these identifiers will be skipped.
    - name: isObjectAction
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        Indicates that this is a MooseObjectAction.
    - name: type
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        A string representing the Moose Object that will be built by this Action
    subblocks:
  - name: /VectorPostprocessors/CSVReader
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: csv_file
      required: Yes
      default: !!str 
      cpp_type: FileName
      group_name: 
      description: |
        The name of the CSV file to read. Currently, with the exception of the header row, only numeric values are supported.
    - name: delimiter
      required: No
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The column delimiter. Despite the name this can read files separated by delimiter other than a comma. If this options is omitted it will read comma or space separated files.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str INITIAL
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: header
      required: No
      default: !!str 
      cpp_type: bool
      group_name: 
      description: |
        When true it is assumed that the first row contains column headers, these headers are used as the VectorPostprocessor vector names. If false the file is assumed to contain only numbers and the vectors are named automatically based on the column number (e.g., 'column_0000', 'column_0001'). If not supplied the reader attempts to auto detect the headers.
    - name: ignore_empty_lines
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        When true new empty lines in the file are ignored.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str CSVReader
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/ConstantVectorPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str ConstantVectorPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: value
      required: Yes
      default: !!str 
      cpp_type: std::vector<double, std::allocator<double> >
      group_name: 
      description: |
        The vector value this object will have.
    subblocks:
  - name: /VectorPostprocessors/CrackDataSampler
    description: |
      
    parameters:
    - name: _is_broadcast
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: crack_front_definition
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The CrackFrontDefinition user object name
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: position_type
      required: No
      default: !!str Distance
      cpp_type: MooseEnum
      group_name: 
      options: Angle Distance
      description: |
        The method used to calculate position along crack front.  Options are: Angle Distance
    - name: postprocessors
      required: Yes
      default: !!str 
      cpp_type: std::vector<PostprocessorName, std::allocator<PostprocessorName> >
      group_name: 
      description: |
        The postprocessors whose values are to be reported
    - name: sort_by
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z id
      description: |
        What to sort the samples by
    - name: type
      required: No
      default: !!str CrackDataSampler
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/Eigenvalues
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str Eigenvalues
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/ElementValueSampler
    description: |
      
    parameters:
    - name: _is_broadcast
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: sort_by
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z id
      description: |
        What to sort the samples by
    - name: type
      required: No
      default: !!str ElementValueSampler
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The names of the variables that this VectorPostprocessor operates on
    subblocks:
  - name: /VectorPostprocessors/ElementVariablesDifferenceMax
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: compare_a
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The first variable to evaluate the difference with, performed as "compare_a - compare_b"
    - name: compare_b
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The second variable to evaluate the difference with, performed as "compare_a - compare_b"
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: furthest_from_zero
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Find the difference with the highest absolute value
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str ElementVariablesDifferenceMax
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/ElementsAlongLine
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The end of the line
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: start
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The beginning of the line
    - name: type
      required: No
      default: !!str ElementsAlongLine
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/ElementsAlongPlane
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: normal
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Normal vector to the plane
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: point
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Point in the plane
    - name: type
      required: No
      default: !!str ElementsAlongPlane
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/EulerAngleUpdaterCheck
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: euler_angle_updater
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Name of Euler angle provider user object
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_torques_object
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Name of Euler angle provider user object
    - name: grain_tracker_object
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: grain_volumes
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The feature volume VectorPostprocessorValue.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: rotation_constant
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        constant value characterizing grain rotation
    - name: type
      required: No
      default: !!str EulerAngleUpdaterCheck
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/FeatureVolumeVectorPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: flood_counter
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The FeatureFloodCount UserObject to get values from.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: output_centroids
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set to true to output the feature centroids
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: single_feature_per_element
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this Boolean if you wish to use an element based volume where the dominant order parameter determines the feature that accumulates the entire element volume
    - name: type
      required: No
      default: !!str FeatureVolumeVectorPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/GrainForcesPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: grain_force
      required: No
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        Specify userobject that gives center of mass and volume of grains
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str GrainForcesPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/GrainTextureVectorPostprocessor
    description: |
      
    parameters:
    - name: _is_broadcast
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: euler_angle_provider
      required: Yes
      default: !!str 
      cpp_type: UserObjectName
      group_name: 
      description: |
        The EulerAngleProvider User object
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: grain_num
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        the number of grains
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: sort_by
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z id
      description: |
        What to sort the samples by
    - name: type
      required: No
      default: !!str GrainTextureVectorPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_grains
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The grain number
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/HistogramVectorPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: num_bins
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of bins for the histograms
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str HistogramVectorPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: vpp
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The VectorPostprocessor to compute histogram of
    subblocks:
  - name: /VectorPostprocessors/IntersectionPointsAlongLine
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The end of the line
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: start
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The beginning of the line
    - name: type
      required: No
      default: !!str IntersectionPointsAlongLine
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/LeastSquaresFit
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: num_samples
      required: No
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of samples to be output
    - name: order
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The order of the polynomial fit
    - name: output
      required: No
      default: !!str Coefficients
      cpp_type: MooseEnum
      group_name: 
      options: Coefficients Samples
      description: |
        The quantity to output.  Options are: Coefficients Samples
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: sample_x_max
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The maximum x value of the of samples to be output
    - name: sample_x_min
      required: No
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        The minimum x value of the of samples to be output
    - name: type
      required: No
      default: !!str LeastSquaresFit
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: vectorpostprocessor
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The vectorpostprocessor on whose values we perform a least squares fit
    - name: x_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the independent variable
    - name: x_scale
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Value used to scale x values (scaling is done after shifting)
    - name: x_shift
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Value used to shift x values (shifting is done before scaling)
    - name: y_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the dependent variable
    - name: y_scale
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Value used to scale y values (scaling is done after shifting)
    - name: y_shift
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Value used to shift y values (shifting is done before scaling)
    subblocks:
  - name: /VectorPostprocessors/LeastSquaresFitHistory
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: order
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The order of the polynomial fit
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: type
      required: No
      default: !!str LeastSquaresFitHistory
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: vectorpostprocessor
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The vectorpostprocessor on whose values we perform a least squares fit
    - name: x_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the independent variable
    - name: x_scale
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Value used to scale x values (scaling is done after shifting)
    - name: x_shift
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Value used to shift x values (shifting is done before scaling)
    - name: y_name
      required: Yes
      default: !!str 
      cpp_type: std::string
      group_name: 
      description: |
        The name of the dependent variable
    - name: y_scale
      required: No
      default: !!str 1
      cpp_type: double
      group_name: 
      description: |
        Value used to scale y values (scaling is done after shifting)
    - name: y_shift
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Value used to shift y values (shifting is done before scaling)
    subblocks:
  - name: /VectorPostprocessors/LineFunctionSampler
    description: |
      
    parameters:
    - name: _is_broadcast
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_point
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The ending of the line
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: functions
      required: Yes
      default: !!str 
      cpp_type: std::vector<FunctionName, std::allocator<FunctionName> >
      group_name: 
      description: |
        The Functions to sample along the line
    - name: num_points
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of points to sample along the line
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: sort_by
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z id
      description: |
        What to sort the samples by
    - name: start_point
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The beginning of the line
    - name: type
      required: No
      default: !!str LineFunctionSampler
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/LineMaterialRankTwoSampler
    description: |
      
    parameters:
    - name: _is_broadcast
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The end of the line
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: index_i
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index i of ij for the tensor to output (0, 1, 2)
    - name: index_j
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The index j of ij for the tensor to output (0, 1, 2)
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: property
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Name of the material property to be output along a line
    - name: sort_by
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z id
      description: |
        What to sort the samples by
    - name: start
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The beginning of the line
    - name: type
      required: No
      default: !!str LineMaterialRankTwoSampler
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/LineMaterialRankTwoScalarSampler
    description: |
      
    parameters:
    - name: _is_broadcast
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: direction
      required: No
      default: !!str 0 0 1
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Direction vector
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The end of the line
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: point1
      required: No
      default: !!str 0 0 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        Start point for axis used to calculate some cylinderical material tensor quantities
    - name: point2
      required: No
      default: !!str 0 1 0
      cpp_type: libMesh::Point
      group_name: 
      description: |
        End point for axis used to calculate some material tensor quantities
    - name: property
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Name of the material property to be output along a line
    - name: scalar_type
      required: No
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: VonMisesStress EffectiveStrain Hydrostatic L2norm MaxPrincipal MidPrincipal MinPrincipal VolumetricStrain FirstInvariant SecondInvariant ThirdInvariant AxialStress HoopStress RadialStress TriaxialityStress Direction
      description: |
        A scalar to ouput
    - name: sort_by
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z id
      description: |
        What to sort the samples by
    - name: start
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The beginning of the line
    - name: type
      required: No
      default: !!str LineMaterialRankTwoScalarSampler
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/LineMaterialRealSampler
    description: |
      
    parameters:
    - name: _is_broadcast
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The end of the line
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: property
      required: Yes
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 
      description: |
        Name of the material property to be output along a line
    - name: sort_by
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z id
      description: |
        What to sort the samples by
    - name: start
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The beginning of the line
    - name: type
      required: No
      default: !!str LineMaterialRealSampler
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/LineValueSampler
    description: |
      
    parameters:
    - name: _is_broadcast
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: end_point
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The ending of the line
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: num_points
      required: Yes
      default: !!str 
      cpp_type: unsigned int
      group_name: 
      description: |
        The number of points to sample along the line
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: scaling
      required: No
      default: !!str 1
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The postprocessor that the variables are multiplied with
    - name: sort_by
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z id
      description: |
        What to sort the samples by
    - name: start_point
      required: Yes
      default: !!str 
      cpp_type: libMesh::Point
      group_name: 
      description: |
        The beginning of the line
    - name: type
      required: No
      default: !!str LineValueSampler
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The names of the variables that this VectorPostprocessor operates on
    subblocks:
  - name: /VectorPostprocessors/MaterialVectorPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: elem_ids
      required: Yes
      default: !!str 
      cpp_type: std::vector<unsigned int, std::allocator<unsigned int> >
      group_name: 
      description: |
        Element IDs to print data for (others are ignored).
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: material
      required: Yes
      default: !!str 
      cpp_type: MaterialName
      group_name: 
      description: |
        Material for which all properties will be recorded.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str MaterialVectorPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/NodalValueSampler
    description: |
      
    parameters:
    - name: _is_broadcast
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: boundary
      required: No
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: sort_by
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z id
      description: |
        What to sort the samples by
    - name: type
      required: No
      default: !!str NodalValueSampler
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: unique_node_execute
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        When false (default), block restricted objects will have the execute method called multiple times on a single node if the node lies on a interface between two subdomains.
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The names of the variables that this VectorPostprocessor operates on
    subblocks:
  - name: /VectorPostprocessors/PointValueSampler
    description: |
      
    parameters:
    - name: _is_broadcast
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: points
      required: Yes
      default: !!str 
      cpp_type: std::vector<libMesh::Point, std::allocator<libMesh::Point> >
      group_name: 
      description: |
        The points where you want to evaluate the variables
    - name: scaling
      required: No
      default: !!str 1
      cpp_type: PostprocessorName
      group_name: 
      description: |
        The postprocessor that the variables are multiplied with
    - name: sort_by
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z id
      description: |
        What to sort the samples by
    - name: type
      required: No
      default: !!str PointValueSampler
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The names of the variables that this VectorPostprocessor operates on
    subblocks:
  - name: /VectorPostprocessors/SideValueSampler
    description: |
      
    parameters:
    - name: _is_broadcast
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: boundary
      required: Yes
      default: !!str 
      cpp_type: std::vector<BoundaryName, std::allocator<BoundaryName> >
      group_name: 
      description: |
        The list of boundary IDs from the mesh where this boundary condition applies
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: sort_by
      required: Yes
      default: !!str 
      cpp_type: MooseEnum
      group_name: 
      options: x y z id
      description: |
        What to sort the samples by
    - name: type
      required: No
      default: !!str SideValueSampler
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: Yes
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        The names of the variables that this VectorPostprocessor operates on
    subblocks:
  - name: /VectorPostprocessors/SphericalAverage
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: bin_number
      required: No
      default: !!str 50
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of histogram bins
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: empty_bin_value
      required: No
      default: !!str 0
      cpp_type: double
      group_name: 
      description: |
        Value to assign to bins into which no datapoints fall
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: radius
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Radius to average out to
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str SphericalAverage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variables to average radially
    subblocks:
  - name: /VectorPostprocessors/StatisticsVectorPostprocessor
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: stats
      required: Yes
      default: !!str 
      cpp_type: MultiMooseEnum
      group_name: 
      options: min max sum average stddev norm2
      description: |
        The statistics you would like to compute for each column of the VectorPostprocessor
    - name: type
      required: No
      default: !!str StatisticsVectorPostprocessor
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: vpp
      required: Yes
      default: !!str 
      cpp_type: VectorPostprocessorName
      group_name: 
      description: |
        The VectorPostprocessor to compute statistics for.
    subblocks:
  - name: /VectorPostprocessors/VectorMemoryUsage
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: report_peak_value
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 
      description: |
        If the vectorpostprocessor is executed more than once during a time step, report the aggregated peak value.
    - name: type
      required: No
      default: !!str VectorMemoryUsage
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/VectorOfPostprocessors
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: postprocessors
      required: Yes
      default: !!str 
      cpp_type: std::vector<PostprocessorName, std::allocator<PostprocessorName> >
      group_name: 
      description: |
        The postprocessors whose values are to be reported
    - name: type
      required: No
      default: !!str VectorOfPostprocessors
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
  - name: /VectorPostprocessors/VolumeHistogram
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: bin_number
      required: No
      default: !!str 50
      cpp_type: unsigned int
      group_name: 
      description: |
        Number of histogram bins
    - name: block
      required: No
      default: !!str 
      cpp_type: std::vector<SubdomainName, std::allocator<SubdomainName> >
      group_name: 
      description: |
        The list of block ids (SubdomainID) that this object will be applied
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: implicit
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Determines whether this object is calculated using an implicit or explicit form
    - name: max_value
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Maximum variable value
    - name: min_value
      required: Yes
      default: !!str 
      cpp_type: double
      group_name: 
      description: |
        Minimum variable value
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: seed
      required: No
      default: !!str 0
      cpp_type: unsigned int
      group_name: 'Advanced'
      description: |
        The seed for the master random number generator
    - name: type
      required: No
      default: !!str VolumeHistogram
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    - name: variable
      required: No
      default: !!str 
      cpp_type: std::vector<VariableName>
      group_name: 
      description: |
        Variable to bin the volume of
    subblocks:
  - name: /VectorPostprocessors/WorkBalance
    description: |
      
    parameters:
    - name: allow_duplicate_execution_on_initial
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        In the case where this UserObject is depended upon by an initial condition, allow it to be executed twice during the initial setup (once before the IC and again after mesh adaptivity (if applicable).
    - name: contains_complete_history
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Set this flag to indicate that the values in all vectors declared by this VPP represent a time history (e.g. with each invocation, new values are added and old values are never removed). This changes the output so that only a single file is output and updated with each invocation
    - name: control_tags
      required: No
      default: !!str 
      cpp_type: std::vector<std::string, std::allocator<std::string> >
      group_name: 'Advanced'
      description: |
        Adds user-defined labels for accessing object parameters via control logic.
    - name: enable
      required: No
      default: !!str 1
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Set the enabled status of the MooseObject.
    - name: execute_on
      required: No
      default: !!str TIMESTEP_END
      cpp_type: ExecFlagEnum
      group_name: 
      description: |
        The list of flag(s) indicating when this object should be executed, the available options include NONE, INITIAL, LINEAR, NONLINEAR, TIMESTEP_END, TIMESTEP_BEGIN, FINAL, CUSTOM.
    - name: force_preaux
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Forces the GeneralUserObject to be executed in PREAUX
    - name: outputs
      required: No
      default: !!str 
      cpp_type: std::vector<OutputName, std::allocator<OutputName> >
      group_name: 'Advanced'
      description: |
        Vector of output names were you would like to restrict the output of variables(s) associated with this object
    - name: sync_to_all_procs
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 
      description: |
        Whether or not to sync the vectors to all processors.  By default we only sync them to processor 0 so they can be written out.  Setting this to true will use more communication, but is necessary if you expect these vectors to be available on all processors
    - name: system
      required: No
      default: !!str ALL
      cpp_type: MooseEnum
      group_name: 
      options: ALL NL AUX
      description: |
        The system(s) to retrieve the number of DOFs from (NL, AUX, ALL). Default == ALL
    - name: type
      required: No
      default: !!str WorkBalance
      cpp_type: std::string
      group_name: 
      description: |
        
    - name: use_displaced_mesh
      required: No
      default: !!str 0
      cpp_type: bool
      group_name: 'Advanced'
      description: |
        Whether or not this object should use the displaced mesh for computation.  Note that in the case this is true but no displacements are provided in the Mesh block the undisplaced mesh will still be used.
    subblocks:
